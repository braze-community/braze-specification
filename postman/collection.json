{
  "info": {
    "_postman_id": "4393f201-ac10-41a4-aa48-9bebbd6a1269",
    "name": "Braze Endpoints",
    "description": "# Braze API overview\n\nBraze provides a high-performance REST API to allow you to track users, send messages, export data, and more. This reference article covers what a REST API is, the terminology, a brief overview of API keys, and API limits.\n\nA REST API is a way to programmatically transfer information over the web using a predefined schema. Braze has created many different endpoints which perform various actions and/or return various data.\n\nBraze manages a number of different instances for our dashboard and REST Endpoints. When your account is provisioned you will log in to one of the following URLs. Use the correct REST endpoint based on which instance you are provisioned to. If you are unsure, open a [support ticket](https://www.braze.com/docs/braze_support/) or use the following table to match the URL of the dashboard you use to the correct REST Endpoint.\n\n> Customers using Braze’s EU database should use the `https://rest.fra-01.braze.eu/` endpoint. This endpoint will be used when configuring the Braze [iOS](https://www.braze.com/docs/developer_guide/platform_integration_guides/ios/initial_sdk_setup/completing_integration/#compile-time-endpoint-configuration-recommended), [Android](https://www.braze.com/docs/developer_guide/platform_integration_guides/android/initial_sdk_setup/android_sdk_integration/#step-2-configure-the-braze-sdk-in-brazexml), and [Web](https://www.braze.com/docs/developer_guide/platform_integration_guides/web/initial_sdk_setup/#step-2-initialize-braze) SDKs.\n\n## Braze Instances\n\n| Instance | Dashboard URL | REST Endpoint |\n| --- | --- | --- |\n| US-01 | `https://dashboard.braze.com` or  <br>`https://dashboard-01.braze.com` | `https://rest.iad-01.braze.com` |\n| US-02 | `https://dashboard-02.braze.com` | `https://rest.iad-02.braze.com` |\n| US-03 | `https://dashboard-03.braze.com` | `https://rest.iad-03.braze.com` |\n| US-04 | `https://dashboard-04.braze.com` | `https://rest.iad-04.braze.com` |\n| US-05 | `https://dashboard-05.braze.com` | `https://rest.iad-05.braze.com` |\n| US-06 | `https://dashboard-06.braze.com` | `https://rest.iad-06.braze.com` |\n| US-08 | `https://dashboard-08.braze.com` | `https://rest.iad-08.braze.com` |\n| EU-01 | `https://dashboard-01.braze.eu` | `https://rest.fra-01.braze.eu` |\n| EU-02 | `https://dashboard-02.braze.eu` | `https://rest.fra-02.braze.eu` |\n\n# Using Braze's Postman collection\n\nIf you have a Postman account (you can download macOS, Windows, and Linux versions from the [Postman website](https://www.getpostman.com/) ), you can open our Postman documentation in your own Postman app by clicking the orange **Run in Postman** button. You can then [create an environment](https://www.braze.com/docs/api/postman_collection/#setting-up-your-postman-environment), or use our Braze REST API environment as a template, and edit the available `POST` and `GET` requests to suit your own needs.\n\n## Setting up your Postman environment\n\nThe Braze Postman Collection uses a templating variable, `{{instance_url}}`, to substitute the REST API URL of your Braze instance into the pre-built requests, and the `{{api_key}}` variable for your API Key. Rather than having to manually edit all requests in the Collection, you can set up this variable in your Postman environment. You can either select our templated environment (Braze REST API Environment Template) from the dropdown and replace the variable values with your own, or you can set up your own environment.\n\nTo set up your own environment, perform the following steps:\n\n1.  From the **Workspaces** tab, select **Environments**.\n2.  Click the **+** plus button to create a new environment.\n3.  Give this environment a name (e.g., “Braze API Requests”) and add keys for `instance_url` and `api_key` with values corresponding to your [Braze instance](https://www.braze.com/docs/developer_guide/rest_api/basics/#endpoints) and [Braze REST API Key](https://www.braze.com/docs/api/api_key/).\n4.  Click **Save**.\n    \n\n## Using the pre-built requests from the collection\n\nOnce you have configured your environment. You can use any of the pre-built requests in the collection as a template for building new API requests. To start using one of the pre-built requests, click on it within the **Collections** menu of Postman. This will open the request as a new tab in the main window of the Postman app.\n\nIn general, there are two types of requests that Braze’s API endpoints accept - `GET` and `POST`. Depending on which `HTTP` method the endpoint uses, you’ll need to edit the pre-built request differently.\n\n### Edit a POST request\n\nWhen editing a `POST` request, open the request and navigate to the **Body** section in the request editor. For readability, select the **raw** radio button to format the `JSON` request body.\n\n### Edit a GET request\n\nWhen editing a `GET` request, edit the parameters passed in the request URL. To do so, select the **Params** tab and edit the key-value pairs in the fields that appear.\n\n## Send your request\n\nOnce your API request is ready, click **Send**. The request sends and the response data populates in a section underneath the request editor. From here, you can view the raw data returned from Braze’s API, see the HTTP response code, see how long the request took to process, and view header information.\n\nThe following documentation can be found on the Braze documentation site:\n\n*   [Object & filter specifications](https://www.braze.com/docs/api/objects_filters/)\n*   [API key overview](https://www.braze.com/docs/api/api_key/)\n*   [API identifier types](https://www.braze.com/docs/api/identifier_types/)\n*   [Errors & responses](https://www.braze.com/docs/api/errors/)\n*   [Parameters](https://www.braze.com/docs/api/parameters)\n*   [Data retention](https://www.braze.com/docs/api/data_retention/)\n*   [API network connectivity issues](https://www.braze.com/docs/api/network_connectivity_issues)\n*   [Rate limits](https://www.braze.com/docs/api/api_limits/)\n*   [API campaigns](https://www.braze.com/docs/api/api_campaigns/)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "24010587"
  },
  "item": [
    {
      "name": "Catalogs",
      "item": [
        {
          "name": "Catalog Management",
          "item": [
            {
              "name": "Synchronous",
              "item": [
                {
                  "name": "Delete Catalog",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}"]
                    },
                    "description": "> Use this endpoint to delete a catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.delete` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 5 requests per minute between all synchronous catalog endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Response\n\nThere are two status code responses for this endpoint: `200` and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `404` could return the following response body. Refer to [Troubleshooting](https://www.braze.com/docs/api/endpoints/catalogs/catalog_management/synchronous/delete_catalog/#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"catalog-not-found\",\n      \"message\": \"Could not find catalog\",\n      \"parameters\": [\n        \"catalog_name\"\n      ],\n      \"parameter_values\": [\n        \"restaurants\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |"
                  },
                  "response": []
                },
                {
                  "name": "List Catalogs",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs"]
                    },
                    "description": "> Use this endpoint to return a list of catalogs in a workspace. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.get` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 5 requests per minute between all synchronous catalog endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path and request parameters\n\nThere are no path or request parameters for this endpoint.\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"catalogs\": [\n    {\n      \"description\": \"My Restaurants\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"City\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Cuisine\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Rating\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"Loyalty_Program\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"Created_At\",\n          \"type\": \"time\"\n        }\n      ],\n      \"name\": \"restaurants\",\n      \"num_items\": 10,\n      \"updated_at\": \"2022-11-02T20:04:06.879+00:00\"\n    },\n    {\n      \"description\": \"My Catalog\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"string_field\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"number_field\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"boolean_field\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"time_field\",\n          \"type\": \"time\"\n        },\n      ],\n      \"name\": \"my_catalog\",\n      \"num_items\": 3,\n      \"updated_at\": \"2022-11-02T09:03:19.967+00:00\"\n    },\n  ],\n  \"message\": \"success\"\n}\n\n```"
                  },
                  "response": []
                },
                {
                  "name": "Create Catalog",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"catalogs\": [\n    {\n      \"name\": \"restaurants\",\n      \"description\": \"My Restaurants\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        }\n      ]\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs"]
                    },
                    "description": "> Use this endpoint to create a catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.create` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 5 requests per minute between all synchronous catalog endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalogs` | Required | Array | An array that contains catalog objects. Only one catalog object is allowed for this request. |\n\n### Catalog object parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `name` | Required | String | The name of the catalog that you want to create. |\n| `description` | Required | String | The description of the catalog that you want to create. |\n| `fields` | Required | Array | An array of objects where the object contains keys `name` and `type`. |\n\n## Example request\n\n```\ncurl --location --request POST 'https://rest.iad-03.braze.com/catalogs' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"catalogs\": [\n    {\n      \"name\": \"restaurants\",\n      \"description\": \"My Restaurants\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"City\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Cuisine\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Rating\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"Loyalty_Program\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"Created_At\",\n          \"type\": \"time\"\n        }\n      ]\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are two status code responses for this endpoint: `201` and `400`.\n\n### Example success response\n\nThe status code `201` could return the following response body.\n\n``` json\n{\n  \"catalogs\": [\n    {\n      \"description\": \"My Restaurants\",\n      \"fields\": [\n        {\n          \"name\": \"id\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Name\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"City\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Cuisine\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"Rating\",\n          \"type\": \"number\"\n        },\n        {\n          \"name\": \"Loyalty_Program\",\n          \"type\": \"boolean\"\n        },\n        {\n          \"name\": \"Created_At\",\n          \"type\": \"time\"\n        }\n      ],\n      \"name\": \"restaurants\",\n      \"num_items\": 0,\n      \"updated_at\": \"2022-11-02T20:04:06.879+00:00\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"catalog-name-already-exists\",\n      \"message\": \"A catalog with that name already exists\",\n      \"parameters\": [\n        \"name\"\n      ],\n      \"parameter_values\": [\n        \"restaurants\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-array-invalid` | `catalogs` must be an array of objects. |\n| `catalog-name-already-exists` | Catalog with that name already exists. |\n| `catalog-name-too-large` | Character limit for a catalog name is 250. |\n| `description-too-long` | Character limit for description is 250. |\n| `field-names-not-unique` | The same field name is referenced twice. |\n| `field-names-too-large` | Character limit for a field name is 250. |\n| `id-not-first-column` | The `id` must be the first field in the array. Check that the type is a string. |\n| `invalid_catalog_name` | Catalog name can only include letters, numbers, hyphens, and underscores. |\n| `invalid-field-names` | Fields can only include letters, numbers, hyphens, and underscores. |\n| `invalid-field-types` | Make sure the field types are valid. |\n| `invalid-fields` | `fields` is not formatted correctly. |\n| `reached-company-catalogs-limit` | Maximum number of catalogs reached. Contact your Braze account manager for more information. |\n| `too-many-catalog-atoms` | You can only create one catalog per request. |\n| `too-many-fields` | Number of fields limit is 30. |"
                  },
                  "response": []
                }
              ]
            }
          ]
        },
        {
          "name": "Catalog Items",
          "item": [
            {
              "name": "Asynchronous",
              "item": [
                {
                  "name": "Delete Multiple Catalog Items",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}", "items"]
                    },
                    "description": "> Use this endpoint to delete multiple items in your catalog. \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.delete_items` permission.\n\nEach request can support up to 50 items. This endpoint is asynchronous.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain an `id` referencing the items Braze should delete. Up to 50 item objects are allowed per request. |\n\n## Example request\n\n```\ncurl --location --request DELETE 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\"id\": \"restaurant1\"},\n    {\"id\": \"restaurant2\"},\n    {\"id\": \"restaurant3\"}\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `202`, `400`, and `404`.\n\n### Example success response\n\nThe status code `202` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"items-missing-ids\",\n      \"message\": \"There are 1 item(s) that do not have ids\",\n      \"parameters\": [],\n      \"parameter_values\": []\n    }\n  ],\n  \"message\": \"Invalid Request\",\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `ids-too-large` | Item IDs can't be more than 250 characters. |\n| `ids-not-unique` | Check that the item IDs are unique in the request. |\n| `ids-not-strings` | Item IDs must be of type string. |\n| `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |\n| `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |\n| `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |"
                  },
                  "response": []
                },
                {
                  "name": "Edit Multiple Catalog Items",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"id\": \"restaurant1\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}", "items"]
                    },
                    "description": "> Use this endpoint to delete multiple items in your catalog. \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.delete_items` permission.\n\nEach request can support up to 50 items. This endpoint is asynchronous.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain an `id` referencing the items Braze should delete. Up to 50 item objects are allowed per request. |\n\n## Example request\n\n```\ncurl --location --request DELETE 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\"id\": \"restaurant1\"},\n    {\"id\": \"restaurant2\"},\n    {\"id\": \"restaurant3\"}\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `202`, `400`, and `404`.\n\n### Example success response\n\nThe status code `202` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"items-missing-ids\",\n      \"message\": \"There are 1 item(s) that do not have ids\",\n      \"parameters\": [],\n      \"parameter_values\": []\n    }\n  ],\n  \"message\": \"Invalid Request\",\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `ids-too-large` | Item IDs can't be more than 250 characters. |\n| `ids-not-unique` | Check that the item IDs are unique in the request. |\n| `ids-not-strings` | Item IDs must be of type string. |\n| `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |\n| `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |\n| `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |"
                  },
                  "response": []
                },
                {
                  "name": "Create Multiple Catalog Items",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"id\": \"restaurant1\",\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-01T09:03:19.967+00:00\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}", "items"]
                    },
                    "description": "> Use this endpoint to create multiple items in your catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.add_items` permission.\n\nEach request can support up to 50 items. This endpoint is asynchronous.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 100 requests per minute between all asynchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain all of the fields in the catalog. Up to 50 item objects are allowed per request. |\n\n## Example request\n\n```\ncurl --location --request POST 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\n      \"id\": \"restaurant1\",\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-01T09:03:19.967+00:00\"\n    },\n    {\n      \"id\": \"restaurant2\",\n      \"Name\": \"Restaurant2\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 10,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-02T09:03:19.967+00:00\"\n    },\n    {\n      \"id\": \"restaurant3\",\n      \"Name\": \"Restaurant3\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 3,\n      \"Loyalty_Program\": false,\n      \"Created_At\": \"2022-11-03T09:03:19.967+00:00\"\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `202`, `400`, and `404`.\n\n### Example success response\n\nThe status code `202` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"fields-do-not-match\",\n      \"message\": \"Fields do not match with fields on the catalog\",\n      \"parameters\": [\n        \"id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant2\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `ids-not-strings` | Item IDs must be of type string. |\n| `ids-not-unique` | Item IDs must be unique in the request. |\n| `ids-too-large` | Item IDs can't be more than 250 characters. |\n| `invalid-ids` | Item IDs can only include letters, numbers, hyphens, and underscores. |\n| `invalid-fields` | Confirm that the fields in the request exist in the catalog. |\n| `invalid-keys-in-value-object` | Item object keys can't include `.` or `$`. |\n| `item-array-invalid` | `items` must be an array of objects. |\n| `items-missing-ids` | There are items that do not have item IDs. Check that each item has an item ID. |\n| `items-too-large` | Item values can't exceed 5,000 characters. |\n| `request-includes-too-many-items` | Your request has too many items. The item limit per request is 50. |\n| `too-deep-nesting-in-value-object` | Item objects can't have more than 50 levels of nesting. |\n| `unable-to-coerce-value` | Item types can't be converted. |"
                  },
                  "response": []
                },
                {
                  "name": "Update Catalog Item",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Location\": {\n        \"Latitude\": 33.6112,\n        \"Longitude\": -117.8711\n      },\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}", "items"]
                    },
                    "description": "> Use this endpoint to send Canvas messages via API-triggered delivery. \n  \n\nTo use this endpoint, you'll need to generate an API key with the `catalogs.replace_item` permission.\n\nAPI-triggered Delivery allows you to store message content in the Braze dashboard while dictating when a message is sent, and to whom via your API.\n\nNote that to send messages with this endpoint, you must have a [Canvas ID](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier), created when you build a Canvas.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain fields that exist in the catalog except for the `id` field. Only one item object is allowed per request. |\n\n## Example request\n\n## Response\n\nThere are three status code responses for this endpoint: `200`, `400`, and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"invalid-fields\",\n      \"message\": \"Some of the fields given do not exist in the catalog\",\n      \"parameters\": [\n        \"id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant1\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog_not_found` | Check that the catalog name is valid. | \n| `ids_not_string` | Confirm that each item ID is a string. |\n| `ids_not_unique` | Check that each item ID is unique. |\n| `ids_too_large` | Character limit for each item ID is 250 characters. |\n| `item_array_invalid` | `items` must be an array of objects. |\n| `items_missing_ids` | Confirm that each item has an ID. |\n| `items_too_large` | Item values can't exceed 5,000 characters. |\n| `invalid_ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |\n| `invalid_fields` | Confirm that the fields in the request exist in the catalog. |\n| `invalid_keys_in_value_object` | Item object keys can't include `.` or `$`. |\n| `too_deep_nesting_in_value_object` | Item objects can't have more than 50 levels of nesting. \n| `request_includes_too_many_items` | Your request has too many items. The item limit per request is 50. |\n| `unable_to_coerce_value` | Item types can't be converted. |"
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "Synchronous",
              "item": [
                {
                  "name": "Delete a Catalog Item",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items/{item_id}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": [
                        "catalogs",
                        "{catalog_name}",
                        "items",
                        "{item_id}"
                      ]
                    },
                    "description": "> Use this endpoint to delete an item in your catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.delete_item` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Example request\n\n```\ncurl --location --request DELETE 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `202`, `400`, and `404`.\n\n### Example success response\n\nThe status code `202` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"item-not-found\",\n      \"message\": \"Could not find item\",\n      \"parameters\": [\n        \"item_id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant34\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support](https://www.braze.com/docs/support_contact/). |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `item-not-found` | Check that the item to be deleted exists in your catalog. |"
                  },
                  "response": []
                },
                {
                  "name": "List Catalog Item Details",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items/{item_id}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": [
                        "catalogs",
                        "{catalog_name}",
                        "items",
                        "{item_id}"
                      ]
                    },
                    "description": "> Use this endpoint to return a catalog item and its content. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.get_item` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\nThere are two status code responses for this endpoint: `200` and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"items\": [\n    {\n      \"id\": \"restaurant3\",\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Open_Time\": \"2022-11-01T09:03:19.967Z\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `404` could return the following response. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"item-not-found\",\n      \"message\": \"Could not find item\",\n      \"parameters\": [\n        \"item_id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant34\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps, if applicable.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `item-not-found` | Check that the item is in the catalog. |"
                  },
                  "response": []
                },
                {
                  "name": "List Multiple Catalog Item Details",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": ["catalogs", "{catalog_name}", "items"]
                    },
                    "description": "> Use this endpoint to return multiple catalog items and their content. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.get_items` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n\n## Query parameters\n\nNote that each call to this endpoint will return 50 items. For a catalog with more than 50 items, use the `Link` header to retrieve the data on the next page as shown in the following example response.\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `cursor` | Optional | String | Determines the pagination of the catalog items. |\n\n## Example requests\n\n### Without cursor\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n### With cursor\n\n```\ncurl --location --request GET 'https://rest.iad-03.braze.com/catalogs/restaurants/items?cursor=c2tpcDow' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `200`, `400`, and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response header and body.\n\n{% alert note %}  \nThe `Link` header won't exist if the catalog has less than or equal to 50 items. For calls without a cursor, `prev` will not show. When looking at the last page of items, `next` will not show.  \n{% endalert %}\n\n```\nLink: ; rel=\"prev\",; rel=\"next\"\n\n```\n\n``` json\n{\n  \"items\": [\n    {\n      \"id\": \"restaurant1\",\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    },\n    {\n      \"id\": \"restaurant2\",\n      \"Name\": \"Restaurant2\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 10,\n      \"Loyalty_Program\": true,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    },\n    {\n      \"id\": \"restaurant3\",\n      \"Name\": \"Restaurant3\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": false,\n      \"Open_Time\": \"2022-11-02T09:03:19.967Z\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"invalid-cursor\",\n      \"message\": \"'cursor' is not valid\",\n      \"parameters\": [\n        \"cursor\"\n      ],\n      \"parameter_values\": [\n        \"bad-cursor\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `invalid-cursor` | Check that your `cursor` is valid. |"
                  },
                  "response": []
                },
                {
                  "name": "Edit Catalog Items",
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items/{item_id}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": [
                        "catalogs",
                        "{catalog_name}",
                        "items",
                        "{item_id}"
                      ]
                    },
                    "description": "> Use this endpoint to edit an item in your catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.update_item` permission.\n\n## Rate Limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain fields that exist in the catalog except for the `id` field. Only one item object is allowed per request. |\n\n## Example request\n\n```\ncurl --location --request PATCH 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `200`, `400`, and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"invalid-fields\",\n      \"message\": \"Some of the fields given do not exist in the catalog\",\n      \"parameters\": [\n        \"id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant1\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support](https://www.braze.com/docs/support_contact/). |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `filtered-set-field-too-long` | The field value is being used in a filtered set that exceeds the character limit for an item. |\n| `id-in-body` | An item ID already exists in the catalog. |\n| `ids-too-large` | Character limit for each item ID is 250 characters. |\n| `invalid-ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |\n| `invalid-fields` | Confirm that the fields in the request exist in the catalog. |\n| `invalid-keys-in-value-object` | Item object keys can't include `.` or `$`. |\n| `item-not-found` | Check that the item is in the catalog. |\n| `item-array-invalid` | `items` must be an array of objects. |\n| `items-too-large` | Character limit for each item is 5,000 characters. |\n| `request-includes-too-many-items` | You can only edit one catalog item per request. |\n| `too-deep-nesting-in-value-object` | Item objects can't have more than 50 levels of nesting. |\n| `unable-to-coerce-value` | Item types can't be converted. |"
                  },
                  "response": []
                },
                {
                  "name": "Create Catalog Item",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-01T09:03:19.967+00:00\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items/{item_id}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": [
                        "catalogs",
                        "{catalog_name}",
                        "items",
                        "{item_id}"
                      ]
                    },
                    "description": "> Use this endpoint to create an item in your catalog. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `catalogs.create_item` permission.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain all of the fields in the catalog except for the `id` field. Only one item object is allowed per request. |\n\n## Example Request\n\n```\ncurl --location --request POST 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant1\",\n      \"City\": \"New York\",\n      \"Cuisine\": \"American\",\n      \"Rating\": 5,\n      \"Loyalty_Program\": true,\n      \"Created_At\": \"2022-11-01T09:03:19.967+00:00\"\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `201`, `400`, and `404`.\n\n### Example success response\n\nThe status code `201` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"fields-do-not-match\",\n      \"message\": \"Fields do not match with fields on the catalog\",\n      \"parameters\": [\n        \"id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant2\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `already-reached-catalog-item-limit` | Maximum number of catalogs reached. Contact your Braze account manager for more information. |\n| `already-reached-company-item-limit` | Maximum number of catalog items reached. Contact your Braze account manager for more information. |\n| `arbitrary-error` | An arbitrary error occurred. Please try again or contact [Support](https://www.braze.com/docs/support_contact/). |\n| `catalog-not-found` | Check that the catalog name is valid. |\n| `filtered-set-field-too-long` | The field value is being used in a filtered set that exceeds the character limit for an item. |\n| `id-in-body` | Remove any item IDs in the request body. |\n| `ids-too-large` | Character limit for each item ID is 250 characters. |\n| `invalid-ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |\n| `invalid-fields` | Confirm that the fields in the request exist in the catalog. |\n| `invalid-keys-in-value-object` | Item object keys can't include `.` or `$`. |\n| `item-already-exists` | The item already exists in the catalog. |\n| `item-array-invalid` | `items` must be an array of objects. |\n| `items-too-large` | Character limit for each item is 5,000 characters. |\n| `request-includes-too-many-items` | You can only create one catalog item per request. |\n| `too-deep-nesting-in-value-object` | Item objects can't have more than 50 levels of nesting. |\n| `unable-to-coerce-value` | Item types can't be converted. |"
                  },
                  "response": []
                },
                {
                  "name": "Update Catalog Item",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{api_key}}",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Location\": {\n        \"Latitude\": 33.6112,\n        \"Longitude\": -117.8711\n      },\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}"
                    },
                    "url": {
                      "raw": "https://{{instance_url}}/catalogs/{catalog_name}/items/{item_id}",
                      "protocol": "https",
                      "host": ["{{instance_url}}"],
                      "path": [
                        "catalogs",
                        "{catalog_name}",
                        "items",
                        "{item_id}"
                      ]
                    },
                    "description": "> Use this endpoint to update an item in your catalog. \n  \n\nTo use this endpoint, you'll need to generate an API key with the `catalogs.replace_item` permission.\n\nIf the `item_id` isn't found, this endpoint will create the item. This endpoint is synchronous.\n\n## Rate limit\n\nThis endpoint has a shared rate limit of 50 requests per minute between all synchronous catalog item endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `catalog_name` | Required | String | Name of the catalog. |\n| `item_id` | Required | String | The ID of the catalog item. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `items` | Required | Array | An array that contains item objects. The item objects should contain fields that exist in the catalog except for the `id` field. Only one item object is allowed per request. |\n\n## Example request\n\n```\ncurl --location --request PUT 'https://rest.iad-03.braze.com/catalogs/restaurants/items/restaurant1' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"items\": [\n    {\n      \"Name\": \"Restaurant\",\n      \"Loyalty_Program\": false,\n      \"Location\": {\n        \"Latitude\": 33.6112,\n        \"Longitude\": -117.8711\n      },\n      \"Open_Time\": \"2021-09-03T09:03:19.967+00:00\"\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are three status code responses for this endpoint: `200`, `400`, and `404`.\n\n### Example success response\n\nThe status code `200` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to [Troubleshooting](#troubleshooting) for more information about errors you may encounter.\n\n``` json\n{\n  \"errors\": [\n    {\n      \"id\": \"invalid-fields\",\n      \"message\": \"Some of the fields given do not exist in the catalog\",\n      \"parameters\": [\n        \"id\"\n      ],\n      \"parameter_values\": [\n        \"restaurant1\"\n      ]\n    }\n  ],\n  \"message\": \"Invalid Request\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `already_reached_catalog_item_limit` | Maximum number of catalogs reached. Contact your Braze account manager for more information. |\n| `already_reached_company_item_limit` | Maximum number of items reached. Contact your Braze account manager for more information. |\n| `arbitrary_error` | An arbitrary error occurred. Please try again or contact [Support](https://www.braze.com/docs/support_contact/). |\n| `catalog_not_found` | Check that the catalog name is valid. |\n| `filtered-set-field-too-long` | The field value is being used in a filtered set that exceeds the character limit for an item. |\n| `id_in_body` | Remove any item IDs in the request body. |\n| `ids_too_large` | Character limit for each item ID is 250 characters. |\n| `invalid_ids` | Supported characters for item ID names are letters, numbers, hyphens, and underscores. |\n| `invalid_fields` | Confirm that the fields in the request exist in the catalog. |\n| `invalid_keys_in_value_object` | Item object keys can't include `.` or `$`. |\n| `item_already_exists` | The item already exists in the catalog. |\n| `item_array_invalid` | `items` must be an array of objects. |\n| `items_too_large` | Item values can't exceed 5,000 characters. |\n| `request_includes_too_many_items` | Your request has too many items. The item limit per request is 50. |\n| `too_deep_nesting_in_value_object` | Item objects can't have more than 50 levels of nesting. |\n| `unable_to_coerce_value` | Item types can't be converted. |"
                  },
                  "response": []
                }
              ]
            }
          ]
        }
      ],
      "description": "Use the Braze Catalogs Endpoints to add, edit, and manage your catalogs and catalog item details. You can use the asynchronous catalog endpoints to make bulk changes to your catalog.\n\nLooking for guidance on creating a catalog? Check out our article for [creating and using catalogs](https://www.braze.com/docs/user_guide/personalization_and_dynamic_content/catalog/)."
    },
    {
      "name": "Email Lists & Addresses",
      "item": [
        {
          "name": "Query Hard Bounced Emails",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/email/hard_bounces?start_date=2019-01-01&end_date=2019-02-01&limit=100&offset=1&email=example@braze.com",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "hard_bounces"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2019-01-01",
                  "description": "(Optional*) String in YYYY-MM-DD format \n\nStart date of the range to retrieve hard bounces, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.\n\n*You must provide either an `email` or a `start_date`, and an `end_date`.\n"
                },
                {
                  "key": "end_date",
                  "value": "2019-02-01",
                  "description": "(Optional*) String in YYYY-MM-DD format\n\nString in YYYY-MM-DD format. End date of the range to retrieve hard bounces. This is treated as midnight in UTC time by the API.\n\n*You must provide either an `email` or a `start_date`, and an `end_date`."
                },
                {
                  "key": "limit",
                  "value": "100",
                  "description": "(Optional) Integer\n\nOptional field to limit the number of results returned. Defaults to 100, maximum is 500."
                },
                {
                  "key": "offset",
                  "value": "1",
                  "description": "(Optional) Integer\n\nOptional beginning point in the list to retrieve from."
                },
                {
                  "key": "email",
                  "value": "example@braze.com",
                  "description": "(Optional*) String\n\nIf provided, we will return whether or not the user has hard bounced.\n\n*You must provide either an `email` or a `start_date`, and an `end_date`."
                }
              ]
            },
            "description": "> Use this endpoint to pull a list of email addresses that have “hard bounced” your email messages within a certain time frame. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `email.hard_bounces` permission.\n\n**Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`. If you provide all three, `start_date`, `end_date`, and an `email`, we prioritize the emails given and disregard the date range.\n\nIf your date range has more than `limit` number of hard bounces, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-01.braze.com/email/hard_bounces?start_date=2019-01-01&end_date=2019-02-01&limit=100&offset=1&email=example@braze.com' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE'\n\n```\n\n## Response\n\nEntries are listed in descending order.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"emails\": [\n    {\n      \"email\": \"example1@braze.com\",\n      \"hard_bounced_at\": \"2016-08-25 15:24:32 +0000\"\n    },\n    {\n      \"email\": \"example2@braze.com\",\n      \"hard_bounced_at\": \"2016-08-24 17:41:58 +0000\"\n    },\n    {\n      \"email\": \"example3@braze.com\",\n      \"hard_bounced_at\": \"2016-08-24 12:01:13 +0000\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Query List of Unsubscribed Email Addresses",
          "request": {
            "auth": { "type": "noauth" },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/email/unsubscribes?start_date=2020-01-01&end_date=2020-02-01&limit=1&offset=1&sort_direction=desc&email=example@braze.com",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "unsubscribes"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2020-01-01",
                  "description": "(Optional*) String in YYYY-MM-DD format\n\nStart date of the range to retrieve unsubscribes, must be earlier than end_date. This is treated as midnight in UTC time by the API."
                },
                {
                  "key": "end_date",
                  "value": "2020-02-01",
                  "description": "(Optional*)  String in YYYY-MM-DD format\n\nEnd date of the range to retrieve unsubscribes. This is treated as midnight in UTC time by the API."
                },
                {
                  "key": "limit",
                  "value": "1",
                  "description": "(Optional) Integer\n\nOptional field to limit the number of results returned. Limit must be greater than 1. Defaults to 100, maximum is 500."
                },
                {
                  "key": "offset",
                  "value": "1",
                  "description": "(Optional) Integer \n\nOptional beginning point in the list to retrieve from."
                },
                {
                  "key": "sort_direction",
                  "value": "desc",
                  "description": "(Optional) String\n\nPass in the value `asc` to sort unsubscribes from oldest to newest. Pass in `desc` to sort from newest to oldest. If sort_direction is not included, the default order is newest to oldest."
                },
                {
                  "key": "email",
                  "value": "example@braze.com",
                  "description": "(Optional*) String\n\nIf provided, we will return whether or not the user has unsubscribed."
                }
              ]
            },
            "description": "> Use this endpoint to return emails that have unsubscribed during the time period from `start_date` to `end_date`. \n  \n\nYou can use this endpoint to set up a bi-directional sync between Braze and other email systems or your own database.\n\nTo use this endpoint, you’ll need to generate an API key with the `email.unsubscribe` permission.\n\n**Note:** You must provide an `end_date`, as well as either an `email` or a `start_date`.\n\nIf your date range has more than `limit` number of unsubscribes, you will need to make multiple API calls, each time increasing the `offset` until a call returns either fewer than `limit` or zero results.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-01.braze.com/email/unsubscribes?start_date=2020-01-01&end_date=2020-02-01&limit=1&offset=1&sort_direction=desc&email=example@braze.com' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE'\n\n```\n\n## Response\n\nEntries are listed in descending order.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"emails\": [\n    {\n      \"email\": \"example1@braze.com\",\n      \"unsubscribed_at\": \"2016-08-25 15:24:32 +0000\"\n    },\n    {\n      \"email\": \"example2@braze.com\",\n      \"unsubscribed_at\": \"2016-08-24 17:41:58 +0000\"\n    },\n    {\n      \"email\": \"example3@braze.com\",\n      \"unsubscribed_at\": \"2016-08-24 12:01:13 +0000\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Change Email Subscription Status",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"example@braze.com\",\n  \"subscription_state\": \"subscribed\"\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/email/status",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "status"]
            },
            "description": "> Use this endpoint to set the email subscription state for your users. Users can be `opted_in`, `unsubscribed`, or `subscribed` (not specifically opted in or out). \n  \n\nYou can set the email subscription state for an email address that is not yet associated with any of your users within Braze. When that email address is subsequently associated with a user, the email subscription state that you uploaded will be automatically set.\n\nTo use this endpoint, you’ll need to generate an API key with the `email.status` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |\n| `subscription_state` | Required | String | Either “subscribed”, “unsubscribed”, or “opted_in”. |"
          },
          "response": []
        },
        {
          "name": "Remove Hard Bounced Emails",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"example@braze.com\"\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/email/bounce/remove",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "bounce", "remove"]
            },
            "description": "> Use this endpoint to remove email addresses from your Braze bounce list. \n  \n\nWe will also remove them from the bounce list maintained by your email provider.\n\nTo use this endpoint, you’ll need to generate an API key with the `email.bounce.remove` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |"
          },
          "response": []
        },
        {
          "name": "Remove Email Addresses from Spam List",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"example@braze.com\"\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/email/spam/remove",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "spam", "remove"]
            },
            "description": "> Use this endpoint to remove email addresses from your Braze spam list. \n  \n\nWe will also remove them from the spam list maintained by your email provider.\n\nTo use this endpoint, you’ll need to generate an API key with the `email.spam.remove` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to modify, or an array of up to 50 email addresses to modify. |"
          },
          "response": []
        },
        {
          "name": "Blocklist Email Addresses",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": [\"blocklist_email1\",\"blocklist_email2\"]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/email/blocklist",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "blocklist"]
            },
            "description": "> Use this endpoint to unsubscribe a user from email and mark them as hard bounced. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `email.blacklist` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to blacklist, or an array of up to 50 email addresses to blocklist. |"
          },
          "response": []
        },
        {
          "name": "Blacklist Email Addresses",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": [\"blacklist_email1\",\"blacklist_email2\"]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/email/blacklist",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["email", "blacklist"]
            },
            "description": "> Use this endpoint to unsubscribe a user from email and mark them as hard bounced. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `email.blacklist` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email` | Required | String or array | String email address to blacklist, or an array of up to 50 email addresses to blocklist. |"
          },
          "response": []
        }
      ],
      "description": "Users’ email subscription status can be updated and retrieved via Braze using a RESTful API. You can use the API to set up bi-directional sync between Braze and other email systems or your own database."
    },
    {
      "name": "Export",
      "item": [
        {
          "name": "Campaign",
          "item": [
            {
              "name": "Export Campaign Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/data_series?campaign_id={{campaign_identifier}}&length=7&ending_at=2020-06-28T23:59:59-5:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "data_series"],
                  "query": [
                    {
                      "key": "campaign_id",
                      "value": "{{campaign_identifier}}",
                      "description": "(Required) String\n\nSee [campaign API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `campaign_id` for API campaigns can be found at **Settings > Setup and Testing > API Keys** and the **Campaign Details** page within your dashboard, or you can use the [List campaigns endpoint](https://www.braze.com/docs/api/endpoints/export/campaigns/get_campaigns/)."
                    },
                    {
                      "key": "length",
                      "value": "7",
                      "description": "(Required) Integer\n\nMax number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2020-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of various stats for a campaign over time. \n  \n\nData returned includes how many messages were sent, opened, clicked, or converted by messaging channel.\n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.data_series` permission.\n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `campaign_id` can be found at **Developer Console > API Settings**.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Responses\n\n### Multichannel response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) date as ISO 8601 date,\n            \"messages\" : {\n                \"ios_push\" : [\n                    {\n                      \"variation_name\": \"iOS_Push\",\n                      \"sent\" : (int),\n                      \"direct_opens\" : (int),\n                      \"total_opens\" : (int),\n                      \"bounces\" : (int),\n                      \"body_clicks\" : (int)\n                      \"revenue\": 0,\n                      \"unique_recipients\": 1,\n                      \"conversions\": 0,\n                      \"conversions_by_send_time\": 0,\n                      \"conversions1\": 0,\n                      \"conversions1_by_send_time\": 0,\n                      \"conversions2\": 0,\n                      \"conversions2_by_send_time\": 0,\n                      \"conversions3\": 0,\n                      \"conversions3_by_send_time\": 0,\n                      \"carousel_slide_[NUM]_[TITLE]_click\": (optional, int),\n                      \"notif_button_[NUM]_[TITLE]_click\": (optional, int)\n                    }\n                ],\n                \"android_push\" : [\n                    {\n                      \"sent\" : (int),\n                      \"direct_opens\" : (int),\n                      \"total_opens\" : (int),\n                      \"bounces\" : (int),\n                      \"body_clicks\" : (int)\n                    }\n                ],\n                \"webhook\": [\n                    {\n                      \"sent\": (int),\n                      \"errors\": (int)\n                    }\n                ],\n                \"email\" : [\n                    {\n                      \"sent\": (int),\n                      \"opens\": (int),\n                      \"unique_opens\": (int),\n                      \"clicks\": (int),\n                      \"unique_clicks\": (int),\n                      \"unsubscribes\": (int),\n                      \"bounces\": (int),\n                      \"delivered\": (int),\n                      \"reported_spam\": (int)\n                    }\n                ],\n                \"sms\" : [\n                  {\n                    \"sent\": (int),\n                    \"delivered\": (int),\n                    \"undelivered\": (int),\n                    \"delivery_failed\": (int)\n                  }\n                ]\n              },\n           \"conversions_by_send_time\": (optional, int),\n           \"conversions1_by_send_time\": (optional, int),\n           \"conversions2_by_send_time\": (optional, int),\n           \"conversions3_by_send_time\": (optional, int),\n           \"conversions\": (int),\n           \"conversions1\": (optional, int),\n           \"conversions2\": (optional, int),\n           \"conversions3\": (optional, int),\n           \"unique_recipients\": (int),\n           \"revenue\": (optional, float)\n        },\n        ...\n    ],\n    ...\n}\n\n```\n\n### Multivariate response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"data\" : [\n        {\n            \"time\" : (string) date as ISO 8601 date,\n            \"conversions\" : (int),\n            \"revenue\": (float),\n            \"conversions_by_send_time\": (int),\n            \"messages\" : {\n               \"trigger_in_app_message\": [{\n                      \"variation_name\": (optional, string),\n                      \"impressions\": (int),\n                      \"clicks\": (int),\n                      \"first_button_clicks\": (int),\n                      \"second_button_clicks\": (int),\n                      \"revenue\": (optional, float),,\n                      \"unique_recipients\": (int),\n                      \"conversions\": (optional, int),\n                      \"conversions_by_send_time\": (optional, int),\n                      \"conversions1\": (optional, int),\n                      \"conversions1_by_send_time\": (optional, int),\n                      \"conversions2\": (optional, int),\n                      \"conversions2_by_send_time\": (optional, int),\n                      \"conversions3\": (optional, int),\n                      \"conversions3_by_send_time\": (optional, int)\n                  }, {\n                      \"variation_name\": (optional, string),\n                      \"impressions\": (int),\n                      \"clicks\": (int),\n                      \"first_button_clicks\": (int),\n                      \"second_button_clicks\": (int),\n                      \"revenue\": (optional, float),,\n                      \"unique_recipients\": (int),\n                      \"conversions\": (optional, int),\n                      \"conversions_by_send_time\": (optional, int),\n                      \"conversions1\": (optional, int),\n                      \"conversions1_by_send_time\": (optional, int),\n                      \"conversions2\": (optional, int),\n                      \"conversions2_by_send_time\": (optional, int),\n                      \"conversions3\": (optional, int).\n                      \"conversions3_by_send_time\": (optional, int)\n                  }, {\n                      \"variation_name\": (optional, string),\n                      \"revenue\": (optional, float),,\n                      \"unique_recipients\": (int),\n                      \"conversions\": (optional, int),\n                      \"conversions_by_send_time\": (optional, int),\n                      \"conversions1\": (optional, int),\n                      \"conversions1_by_send_time\": (optional, int),\n                      \"conversions2\": (optional, int),\n                      \"conversions2_by_send_time\": (optional, int),\n                      \"conversions3\": (optional, int),\n                      \"conversions3_by_send_time\": (optional, int),\n                      \"enrolled\": (optional, int)\n                  }]\n              },\n              \"conversions_by_send_time\": (optional, int),\n              \"conversions1_by_send_time\": (optional, int),\n              \"conversions2_by_send_time\": (optional, int),\n              \"conversions3_by_send_time\": (optional, int),\n              \"conversions\": (optional, int,\n              \"conversions1\": (optional, int),\n              \"conversions2\": (optional, int),\n              \"conversions3\": (optional, int),\n              \"unique_recipients\": (int),\n              \"revenue\": (optional, float)\n         }],\n         ...\n}\n\n```\n\nPossible message types are `email`, `in_app_message`, `webhook`, `android_push`, ios_push, `kindle_push`, `web_push`. All push message types will have the same statistics shown for `android_push`.\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Campaign Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/details?campaign_id={{campaign_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "details"],
                  "query": [
                    {
                      "key": "campaign_id",
                      "value": "{{campaign_identifier}}",
                      "description": "(Required) String\n\nSee [campaign API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `campaign_id` for API campaigns can be found on the **Settings > Setup and Testing > API Keys** and the campaign details page within your dashboard, or you can use the [Campaign List Endpoint](https://www.braze.com/docs/api/endpoints/export/campaigns/get_campaign_analytics/#campaign-list-endpoint)."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve relevant information on a specified campaign, which can be identified by the `campaign_id`. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `campaign.details` permission.\n\nIf you want to retrieve Canvas data, refer to the [Canvas Details](https://www.braze.com/docs/api/endpoints/export/canvas/get_canvas_details/) endpoint.\n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `campaign_id` can be found at **Developer Console** > **API Settings**\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Responses\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"created_at\" : (string) the date created as ISO 8601 date,\n    \"updated_at\" : (string) the date last updated as ISO 8601 date,\n    \"archived\": (boolean) whether this campaign is archived,\n    \"draft\": (boolean) whether this campaign is a draft,\n    \"name\" : (string) the campaign name,\n    \"description\" : (string) the campaign description,\n    \"schedule_type\" : (string) the type of scheduling action,\n    \"channels\" : (array) the list of channels to send via,\n    \"first_sent\" : (string) the date and hour of first sent as ISO 8601 date,\n    \"last_sent\" : (string) the date and hour of last sent as ISO 8601 date,\n    \"tags\" : (array) the tag names associated with the campaign,\n    \"messages\": {\n        \"message_variation_id\": (string) { // <=This is the actual id\n            \"channel\": (string) the channel type of the message, must be either email, ios_push, webhook, content_card, in-app_message, or sms,\n            \"name\": (string) the name of the message in the dashboard (eg., \"Variation 1\")\n            ... channel-specific fields for this message, see the following messages section ...\n        }\n    },\n    \"conversion_behaviors\": (array) the conversion event behaviors assigned to the campaign, see the following conversions behavior section.\n}\n\n```\n\n### Messages\n\nThe `messages` response will contain information about each message. The following includes example message responses for each channel:\n\n#### Push channels\n\n``` json\n{\n    \"channel\": (string) description of the channel, such as \"ios_push\" or \"android_push\"\n    \"alert\": (string) alert body text,\n    \"extras\": (hash) any key value pairs provided\n}\n\n```\n\n#### Email channel\n\n``` json\n{\n    \"channel\": \"email\",\n    \"subject\": (string) subject,\n    \"body\": (string) HTML body,\n    \"from\": (string) from address and display name,\n    \"reply_to\": (string) reply-to for message, if different than \"from\" address,\n    \"title\": (string) name of the email,\n    \"extras\": (hash) any key value pairs provided\n}\n\n```\n\n#### In-app message channel\n\n``` json\n{\n    \"type\": (string) description of in-app message type, such as \"survey\",\n    \"data\": {\n        \"pages\": [\n            {\n                \"header\": \n                    {\n                         \"text\":(string) display text for the header of the survey,\n                    }\n                \"choices\": [\n                    {\n                       \"choice_id\": (string) choice identifier,\n                       \"text\": (string) display text, \n                       \"custom_attribute_key\": (string) custom attribute key, \n                       \"custom_attribute_value\": (sting) custom attribute value,\n                       \"deleted\": (boolean) deleted from live campaign, \n                    },\n                    ...\n                ]\n            }\n        ]\n    }\n}\n\n```\n\n#### Content Card channel\n\n``` json\n{\n    \"channel\": \"content_cards\",\n    \"name\": (string) name of variant,\n    \"extras\": (hash) any key value pairs provided; only present if at least one key-value pair has been set\n}\n\n```\n\n#### Webhook channel\n\n``` json\n{\n    \"channel\": \"webhook\",\n    \"url\": (string) url for webhook,\n    \"body\": (string) payload body,\n    \"type\": (string) body content type,\n    \"headers\": (hash) specified request headers,\n    \"method\": (string) HTTP method (e.g., \"POST\" or \"GET\"),\n}\n\n```\n\n#### SMS channel\n\n``` json\n{\n  \"channel\": \"sms\",\n  \"body\": (string) payload body,\n  \"from\": (string) list of numbers associated with the subscription group,\n  \"subscription_group_id\": (string) API id of the subscription group targeted in the SMS message\n}\n\n```\n\n#### Control Messages\n\n``` json\n{\n    \"channel\": (string) description of the channel that the control is for,\n    \"type\": \"control\"\n}\n\n```\n\n### Conversion Behaviors\n\nThe `conversion_behaviors` array will contain information about each conversion event behavior set for the campaign. These behaviors are in order as set by the campaign. For example, Conversion Event A will be the first item in the array, Conversion Event B will be second, etc. The following lists example conversion event behavior responses:\n\n#### Clicks email\n\n``` json\n{\n    \"type\": \"Clicks Email\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Opens email\n\n``` json\n{\n    \"type\": \"Opens Email\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Makes purchase (any purchase)\n\n``` json\n{\n    \"type\": \"Makes Any Purchase\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours\n}\n\n```\n\n#### Makes purchase (specific product)\n\n``` json\n{\n    \"type\": \"Makes Specific Purchase\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"product\": (string) name of the product, i.e. - \"Feline Body Armor\"\n}\n\n```\n\n#### Performs custom event\n\n``` json\n{\n    \"type\": \"Performs Custom Event\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"custom_event_name\": (string) name of the event, i.e. - \"Used Feline Body Armor\"\n}\n\n```\n\n#### Upgrades app\n\n``` json\n{\n    \"type\": \"Upgrades App\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"app_ids\": (array|null) array of app ids, i.e. - [\"12345\", \"67890\"], or `null` if \"Track sessions for any app\" is selected in the UI\n}\n\n```\n\n#### Uses app\n\n``` json\n{\n    \"type\": \"Starts Session\",\n    \"window\": (integer) number of seconds during which the user can convert on this event, i.e. - 86400, which is 24 hours,\n    \"app_ids\": (array|null) array of app ids, i.e. - [\"12345\", \"67890\"], or `null` if \"Track sessions for any app\" is selected in the UI\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Campaign List",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/list?page=0&include_archived=false&sort_direction=desc&last_edit.time[gt]=2020-06-28T23:59:59-5:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "0",
                      "description": "(Optional) Integer\n\nThe page of campaigns to return, defaults to 0 (returns the first set of up to 100)."
                    },
                    {
                      "key": "include_archived",
                      "value": false,
                      "description": "(Optional) Boolean\n\nWhether or not to include archived campaigns, defaults to false."
                    },
                    {
                      "key": "sort_direction",
                      "value": "desc",
                      "description": "(Optional) String\n\n- Sort creation time from newest to oldest: pass in the value `desc`.\n- Sort creation time from oldest to newest: pass in the value `asc`.\n\nIf `sort_direction` is not included, the default order is oldest to newest."
                    },
                    {
                      "key": "last_edit.time[gt]",
                      "value": "2020-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nFilters the results and only returns campaigns that were edited greater than the time provided till now. Format is `yyyy-MM-DDTHH:mm:ss`."
                    }
                  ]
                },
                "description": "> Use this endpoint to export a list of campaigns, each of which will include its name, campaign API identifier, whether it is an API campaign, and tags associated with the campaign. \n  \n\nThe campaigns are returned in groups of 100 sorted by time of creation (oldest to newest by default).\n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.list` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Campaign list endpoint API response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"campaigns\" : [\n        {\n            \"id\" : (string) Campaign API Identifier,\n            \"last_edited\": (ISO 8601 string) the last edited time for the message \n            \"name\" : (string) campaign name,\n            \"is_api_campaign\" : (boolean) whether the campaign is an API Campaign,\n            \"tags\" : (array) tag names associated with the campaign\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Send Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/sends/data_series?campaign_id={{campaign_identifier}}&send_id={{send_identifier}}&length=30&ending_at=2014-12-10T23:59:59-05:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["sends", "data_series"],
                  "query": [
                    {
                      "key": "campaign_id",
                      "value": "{{campaign_identifier}}",
                      "description": "(Required) String\n\nSee [Campaign API identifier](https://www.braze.com/docs/api/identifier_types/)."
                    },
                    {
                      "key": "send_id",
                      "value": "{{send_identifier}}",
                      "description": "(Required) String\n\nSee [Send API identifier](https://www.braze.com/docs/api/identifier_types/)."
                    },
                    {
                      "key": "length",
                      "value": "30",
                      "description": "(Required) Integer\n\nMax number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2014-12-10T23:59:59-05:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of various stats for a tracked `send_id`. \n  \n\nBraze stores send analytics for 14 days after the send.\n\nCampaign conversions will be attributed towards the most recent send id that a given user has received from the campaign.\n\nTo use this endpoint, you’ll need to generate an API key with the `sends.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n### Send analytics endpoint API response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n            \"variation_name\": (string) variation name,\n            \"sent\": (int) the number of sends,\n            \"delivered\": (int) the number of messages successfully delivered,\n            \"undelivered\": (int) the number of undelivered,\n            \"delivery_failed\": (int) the number of rejected,\n            \"direct_opens\": (int) the number of direct opens,\n            \"total_opens\": (int) the number of total opens,\n            \"bounces\": (int) the number of bounces,\n            \"body_clicks\": (int) the number of body clicks,\n            \"revenue\": (float) the number of dollars of revenue (USD),\n            \"unique_recipients\": (int) the number of unique recipients,\n            \"conversions\": (int) the number of conversions,\n            \"conversions_by_send_time\": (int) the number of conversions,\n            \"conversions1\": (int, optional) the number of conversions for the second conversion event,\n            \"conversions1_by_send_time\": (int, optional) the number of conversions for the second conversion event by send time,\n            \"conversions2\": (int, optional) the number of conversions for the third conversion event,\n            \"conversions2_by_send_time\": (int, optional) the number of conversions for the third conversion event by send time,\n            \"conversions3\": (int, optional) the number of conversions for the fourth conversion event,\n            \"conversions3_by_send_time\": (int, optional) the number of conversions for the fourth conversion event by send time\n          }\n        ]\n      },\n      \"conversions_by_send_time\": 0,\n      \"conversions1_by_send_time\": 0,\n      \"conversions2_by_send_time\": 0,\n      \"conversions3_by_send_time\": 0,\n      \"conversions\": 0,\n      \"conversions1\": 0,\n      \"conversions2\": 0,\n      \"conversions3\": 0,\n      \"unique_recipients\": 1,\n      \"revenue\": 0\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Canvas",
          "item": [
            {
              "name": "Export Canvas Data Series Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/canvas/data_series?canvas_id={{canvas_id}}&ending_at=2018-05-30T23:59:59-5:00&starting_at=2018-05-28T23:59:59-5:00&length=10&include_variant_breakdown=true&include_step_breakdown=true&include_deleted_step_data=true",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "data_series"],
                  "query": [
                    {
                      "key": "canvas_id",
                      "value": "{{canvas_id}}",
                      "description": "(Required) String\n\nSee [Canvas API Identifier](https://www.braze.com/docs/api/identifier_types/)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-05-30T23:59:59-5:00",
                      "description": "(Required) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data export should end. Defaults to time of the request."
                    },
                    {
                      "key": "starting_at",
                      "value": "2018-05-28T23:59:59-5:00",
                      "description": "(Optional*) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string) \n\nDate on which the data export should begin.\n\n*Either `length` or `starting_at` is required."
                    },
                    {
                      "key": "length",
                      "value": "10",
                      "description": "(Optional*) String\n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 14 (inclusive).\n\n*Either `length` or `starting_at` is required."
                    },
                    {
                      "key": "include_variant_breakdown",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include variant stats (defaults to false)."
                    },
                    {
                      "key": "include_step_breakdown",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include step stats (defaults to false)."
                    },
                    {
                      "key": "include_deleted_step_data",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include step stats for deleted steps (defaults to false)."
                    }
                  ]
                },
                "description": "> Use this endpoint to export time series data for a Canvas. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"data\": {\n    \"name\": (string) Canvas name,\n    \"stats\": [\n      {\n        \"time\": (string) date as ISO 8601 date,\n        \"total_stats\": {\n          \"revenue\": (float),\n          \"conversions\": (int),\n          \"conversions_by_entry_time\": (int),\n          \"entries\": (int)\n        },\n        \"variant_stats\": (optional) {\n          \"00000000-0000-0000-0000-0000000000000\": (API identifier for variant) {\n            \"name\": (string) name of variant,\n            \"revenue\": (int),\n            \"conversions\": (int),\n            \"conversions_by_entry_time\": (int),\n            \"entries\": (int)\n          },\n          ... (more variants)\n        },\n        \"step_stats\": (optional) {\n          \"00000000-0000-0000-0000-0000000000000\": (API identifier for step) {\n            \"name\": (string) name of step,\n            \"revenue\": (float),\n            \"conversions\": (int),\n            \"conversions_by_entry_time\": (int),\n            \"messages\": {\n              \"email\": [\n                {\n                  \"sent\": (int),\n                  \"opens\": (int),\n                  \"unique_opens\": (int),\n                  \"clicks\": (int),\n                  ... (more stats)\n                }\n              ],\n              ... (more channels)\n            }\n          },\n          ... (more steps)\n        }\n      },\n      ... (more stats by time)\n    ]\n  },\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Canvas Data Analytics Summary",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/canvas/data_summary?canvas_id={{canvas_id}}&ending_at=2018-05-30T23:59:59-5:00&starting_at=2018-05-28T23:59:59-5:00&length=5&include_variant_breakdown=true&include_step_breakdown=true&include_deleted_step_data=true",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "data_summary"],
                  "query": [
                    {
                      "key": "canvas_id",
                      "value": "{{canvas_id}}",
                      "description": "(Required) String \n\nSee [Canvas API identifier](https://www.braze.com/docs/api/identifier_types/)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-05-30T23:59:59-5:00",
                      "description": "(Required) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\nDate on which the data export should end. Defaults to time of the request"
                    },
                    {
                      "key": "starting_at",
                      "value": "2018-05-28T23:59:59-5:00",
                      "description": "(Optional*) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data export should begin.\n\n*Either `length` or `starting_at` is required."
                    },
                    {
                      "key": "length",
                      "value": "5",
                      "description": "(Optional*) Integer\n\nMax number of days before `ending_at` to include in the returned series. Must be between 1 and 14 (inclusive).\n\n*Either `length` or `starting_at` is required."
                    },
                    {
                      "key": "include_variant_breakdown",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include variant stats (defaults to false)."
                    },
                    {
                      "key": "include_step_breakdown",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include step stats (defaults to false)."
                    },
                    {
                      "key": "include_deleted_step_data",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include step stats for deleted steps (defaults to false)."
                    }
                  ]
                },
                "description": "> Use this endpoint to export rollups of time series data for a Canvas, providing a concise summary of a Canvas’ results. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.data_summary` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"data\": {\n    \"name\": (string) Canvas name,\n    \"total_stats\": {\n      \"revenue\": (float),\n      \"conversions\": (int),\n      \"conversions_by_entry_time\": (int),\n      \"entries\": (int)\n    },\n    \"variant_stats\": (optional) {\n      \"00000000-0000-0000-0000-0000000000000\": (API identifier for variant) {\n        \"name\": (string) name of variant,\n        \"revenue\": (float),\n        \"conversions\": (int),\n        \"entries\": (int)\n      },\n      ... (more variants)\n    },\n    \"step_stats\": (optional) {\n      \"00000000-0000-0000-0000-0000000000000\": (API identifier for step) {\n        \"name\": (string) name of step,\n        \"revenue\": (float),\n        \"conversions\": (int),\n        \"conversions_by_entry_time\": (int),\n        \"messages\": {\n          \"android_push\": (name of channel) [\n            {\n              \"sent\": (int),\n              \"opens\": (int),\n              \"influenced_opens\": (int),\n              \"bounces\": (int)\n              ... (more stats for channel)\n            }\n          ],\n          ... (more channels)\n        }\n      },\n      ... (more steps)\n    }\n  },\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325)."
              },
              "response": []
            },
            {
              "name": "Export Canvas Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/canvas/details?canvas_id={{canvas_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "details"],
                  "query": [
                    {
                      "key": "canvas_id",
                      "value": "{{canvas_identifier}}",
                      "description": "(Required) String\n\nSee [Canvas API Identifier](https://www.braze.com/docs/api/identifier_types/) "
                    }
                  ]
                },
                "description": "> Use this endpoint to export metadata about a Canvas, such as the name, time created, current status, and more. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.details` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\nNote: All Canvas steps have a next_paths field, which is an array of `{name, next_step_id}` data. For full steps and Message steps, the `next_step_ids` field will be present, but will not contain data for other Canvas Flow steps.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"created_at\": (string) date created as ISO 8601 date,\n  \"updated_at\": (string) date updated as ISO 8601 date,\n  \"name\": (string) Canvas name,\n  \"description\": (string) Canvas description,\n  \"archived\": (boolean) whether this Canvas is archived,\n  \"draft\": (boolean) whether this Canvas is a draft,\n  \"schedule_type\": (string) type of scheduling action,\n  \"first_entry\": (string) date of first entry as ISO 8601 date,\n  \"last_entry\": (string) date of last entry as ISO 8601 date,\n  \"channels\": (array of strings) step channels used with Canvas,\n  \"variants\": [\n    {\n      \"name\": (string) name of variant,\n      \"id\": (string) API identifier of the variant,\n      \"first_step_ids\": (array of strings) API identifiers for first steps in variant,\n      \"first_step_id\": (string) API identifier of first step in variant (deprecated in November 2017, only included if the variant has only one first step)\n    },\n    ... (more variations)\n  ],\n  \"tags\": (array of strings) tag names associated with the Canvas,\n  \"steps\": [\n    {\n      \"name\": (string) name of step,\n      \"id\": (string) API identifier of the step,\n      \"next_step_ids\": (array of strings) API identifiers of steps following step,\n      \"channels\": (array of strings) channels used in step,\n      \"messages\": {\n          \"message_variation_id\": (string) {  // <=This is the actual id\n              \"channel\": (string) channel type of the message (eg., \"email\"),\n              ... channel-specific fields for this message, see Campaign Details Endpoint API Response for example message responses ...\n          }\n      }\n    },\n    ... (more steps)\n  ],\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325)."
              },
              "response": []
            },
            {
              "name": "Export Canvas List",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/canvas/list?page=1&include_archived=false&sort_direction=desc&last_edit.time[gt]=2020-06-28T23:59:59-5:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "description": "(Optional) Integer\n\nThe page of Canvases to return, defaults to `0` (returns the first set of up to 100)."
                    },
                    {
                      "key": "include_archived",
                      "value": false,
                      "description": "(Optional) Boolean\n\nWhether or not to include archived Canvases, defaults to `false`."
                    },
                    {
                      "key": "sort_direction",
                      "value": "desc",
                      "description": "(Optional) String\n\n- Sort creation time from newest to oldest: pass in the value `desc`.\n- Sort creation time from oldest to newest: pass in the value `asc`.\n\nIf `sort_direction` is not included, the default order is oldest to newest."
                    },
                    {
                      "key": "last_edit.time[gt]",
                      "value": "2020-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nFilters the results and only returns Canvases that were edited greater than the time provided till now. Format is `yyyy-MM-DDTHH:mm:ss`."
                    }
                  ]
                },
                "description": "> Use this endpoint to export a list of Canvases, including the name, Canvas API identifier and associated tags. \n  \n\nCanvases are returned in groups of 100 sorted by time of creation (oldest to newest by default).\n\nArchived Canvases will not be included in the API response unless the `include_archived` field is specified. Canvases that are stopped but not archived, however, will be returned by default.\n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.list` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"canvases\" : [\n      {\n          \"id\" : (string) Canvas API Identifier,\n          \"last_edited\": (ISO 8601 string) the last edited time for the message,\n          \"name\" : (string) Canvas name,\n          \"tags\" : (array) tag names associated with the Canvas,\n      },\n    ... (more Canvases)\n  ],\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://desktop.postman.com/?desktopVersion=9.19.0&userId=16580579&teamId=409325)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Custom Events",
          "item": [
            {
              "name": "Export Custom Events List",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/events/list?page=3",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["events", "list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "3",
                      "description": "(Optional) Integer\n\nThe page of event names to return, defaults to 0 (returns the first set of up to 250)."
                    }
                  ]
                },
                "description": "> Use this endpoint to export a list of custom events that have been recorded for your app. The event names are returned in groups of 250, sorted alphabetically. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `events.list` permission.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/purchases/product_list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"events\" : [\n        \"Event A\", (string) the event name,\n        \"Event B\", (string) the event name,\n        \"Event C\", (string) the event name,\n        ...\n    ]\n}\n\n```\n\n### Fatal error response codes\n\nFor status codes and associated error messages that will be returned if your request encounters a fatal error, reference [Fatal errors & responses](https://www.braze.com/docs/api/errors/#fatal-errors).\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Custom Events Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/events/data_series?event=event_name&length=24&unit=hour&ending_at=2014-12-10T23:59:59-05:00&app_id={{app_identifier}}&segment_id={{segment_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["events", "data_series"],
                  "query": [
                    {
                      "key": "event",
                      "value": "event_name",
                      "description": "(Required) String\n\nThe name of the custom event for which to return analytics. "
                    },
                    {
                      "key": "length",
                      "value": "24",
                      "description": "(Required) Integer\n\nMaximum number of units (days or hours) before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "unit",
                      "value": "hour",
                      "description": "(Optional) String\n\nUnit of time between data points - can be `day` or `hour`, defaults to `day`."
                    },
                    {
                      "key": "ending_at",
                      "value": "2014-12-10T23:59:59-05:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from **Settings > Setup and Testing > API Keys** to limit analytics to a specific app."
                    },
                    {
                      "key": "segment_id",
                      "value": "{{segment_identifier}}",
                      "description": "(Optional) String\n\nSee [Segment API identifier](https://www.braze.com/docs/api/identifier_types/). Segment ID indicating the analytics-enabled segment for which event analytics should be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a series of the number of occurrences of a custom event in your app over a designated time period. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `app_id` can be found at**Developer Console** > **API Settings**\n\nTo use this endpoint, you’ll need to generate an API key with the `events.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) point in time - as ISO 8601 extended when unit is \"hour\" and as ISO 8601 date when unit is \"day\",\n            \"count\" : (int)\n        },\n        ...\n    ]\n}\n\n```\n\n### Fatal error response codes\n\nFor status codes and associated error messages that will be returned if your request encounters a fatal error, reference [Fatal errors & responses](https://www.braze.com/docs/api/errors/#fatal-errors).\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "KPI",
          "item": [
            {
              "name": "Export Daily New Users by Date",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/kpi/new_users/data_series?length=14&ending_at=2018-06-28T23:59:59-5:00&app_id={{app_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["kpi", "new_users", "data_series"],
                  "query": [
                    {
                      "key": "length",
                      "value": "14",
                      "description": "(Required) Integer\n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from **Settings > Setup and Testing > API Keys**. If excluded, results for all apps in workspace will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of the total number of new users on each date. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `app_id` can be found at **Developer Console** > **API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `kpi.new_users.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) the date as ISO 8601 date,\n            \"new_users\" : (int) the number of daily new users\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Daily Active Users by Date",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/kpi/dau/data_series?length=10&ending_at=2018-06-28T23:59:59-5:00&app_id={{app_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["kpi", "dau", "data_series"],
                  "query": [
                    {
                      "key": "length",
                      "value": "10",
                      "description": "(Required) Integer\n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from **Settings > Setup and Testing > API Keys**. If excluded, results for all apps in workspace will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of the total number of unique active users on each date. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), API Keys can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `kpi.dau.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) the date as ISO 8601 date,\n            \"dau\" : (int) the number of daily active users\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Monthly Active Users for Last 30 Days",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/kpi/mau/data_series?length=7&ending_at=2018-06-28T23:59:59-05:00&app_id={{app_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["kpi", "mau", "data_series"],
                  "query": [
                    {
                      "key": "length",
                      "value": "7",
                      "description": "(Required) Integer\n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-05:00",
                      "description": "(Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from **Settings > Setup and Testing > API Keys**. If excluded, results for all apps in workspace will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of the total number of unique active users over a 30-day rolling window. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), API Keys can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `kpi.mau.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) the date as ISO 8601 date,\n            \"mau\" : (int) the number of monthly active users\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export KPIs for Daily App Uninstalls by Date",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/kpi/uninstalls/data_series?length=14&ending_at=2018-06-28T23:59:59-5:00&app_id={{app_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["kpi", "uninstalls", "data_series"],
                  "query": [
                    {
                      "key": "length",
                      "value": "14",
                      "description": "(Required) Integer\n\nMaximum number of days before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional)  Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from **Settings > Setup and Testing > API Keys**. If excluded, results for all apps in workspace will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of the total number of uninstalls on each date. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), API Keys can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `kpi.uninstalls.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) the date as ISO 8601 date,\n            \"uninstalls\" : (int) the number of uninstalls\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "News Feed",
          "item": [
            {
              "name": "Export News Feed Card Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/feed/data_series?card_id={{card_identifier}}&length=14&unit=day&ending_at=2018-06-28T23:59:59-5:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["feed", "data_series"],
                  "query": [
                    {
                      "key": "card_id",
                      "value": "{{card_identifier}}",
                      "description": "(Required) String\n\nSee [Card API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/)."
                    },
                    {
                      "key": "length",
                      "value": "14",
                      "description": "(Required) Integer\n\nMax number of units (days or hours) before `ending_at` to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "unit",
                      "value": "day",
                      "description": "(Optional) String\n\nUnit of time between data points. Can be `day` or `hour`, defaults to `day`."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request.\n"
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of engagement stats for a card over time. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), \\`card_id\\` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `feed.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) the point in time - as ISO 8601 extended when unit is \"hour\" and as ISO 8601 date when unit is \"day\",\n            \"clicks\" : (int) the number of clicks,\n            \"impressions\" : (int) the number of impressions,\n            \"unique_clicks\" : (int) the number of unique clicks,\n            \"unique_impressions\" : (int) the number of unique impressions\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export News Feed Cards Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/feed/details?card_id={{card_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["feed", "details"],
                  "query": [
                    {
                      "key": "card_id",
                      "value": "{{card_identifier}}",
                      "description": "(Required) String\n\nSee [Card API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `card_id` for a given card can be found in the **Settings > Setup and Testing > API Keys** page and on the card details page within your dashboard, or you can use the [News Feed List Endpoint](https://www.braze.com/docs/api/endpoints/export/news_feed/get_news_feed_cards/)."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve relevant information on a card, which can be identified by the `card_id`. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `card_id` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `feed.details` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) The status of the export, returns 'success' when completed without errors,\n    \"created_at\" : (string) Date created as ISO 8601 date,\n    \"updated_at\" : (string) Date last updated as ISO 8601 date,\n    \"name\" : (string) Card name,\n    \"publish_at\" : (string) Date card was published as ISO 8601 date,\n    \"end_at\" : (string) Date card will stop displaying for users as ISO 8601 date,\n    \"tags\" : (array) Tag names associated with the card,\n    \"title\" : (string) Title of the card,\n    \"image_url\" : (string) Image URL used by this card,\n    \"extras\" : (dictionary) Dictionary containing key-value pair data attached to this card,\n    \"description\" : (string) Description text used by this card,\n    \"archived\": (boolean) whether this Card is archived,\n    \"draft\": (boolean) whether this Card is a draft,\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export News Feed Cards List",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/feed/list?page=1&include_archived=true&sort_direction=desc",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["feed", "list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "description": "(Optional) Integer\n\nThe page of cards to return, defaults to 0 (returns the first set of up to 100)."
                    },
                    {
                      "key": "include_archived",
                      "value": true,
                      "description": "(Optional) Boolean\n\nWhether or not to include archived cards, defaults to false."
                    },
                    {
                      "key": "sort_direction",
                      "value": "desc",
                      "description": "(Optional) String\n\n- Sort creation time from newest to oldest: pass in the value `desc`.\n- Sort creation time from oldest to newest: pass in the value `asc`.\n\nIf `sort_direction` is not included, the default order is oldest to newest."
                    }
                  ]
                },
                "description": "> Use this endpoint to export a list of News Feed cards, each of which will include its name and card API identifier. \n  \n\nThe cards are returned in groups of 100 sorted by time of creation (oldest to newest by default).\n\nTo use this endpoint, you’ll need to generate an API key with the `feed.list` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"cards\" : [\n        {\n            \"id\" : (string) Card API Identifier,\n            \"type\" : (string) type of the card - NewsItem (classic cards), CaptionedImage, Banner or DevPick (cross-promotional cards),\n            \"title\" : (string) title of the card,\n            \"tags\" : (array) tag names associated with the card\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Purchases",
          "item": [
            {
              "name": "Export Product IDs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/purchases/product_list?page=1",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["purchases", "product_list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "description": "(Optional) Integer\n\nThe page of your product list that you would like to view."
                    }
                  ]
                },
                "description": "> Use this endpoint to return a paginated lists of product IDs. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `purchases.product_list` permission.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"products\": [\n    \"product_name\" (string), the name of the product\n  ],\n  \"message\": \"success\"\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Number of Purchases",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/purchases/quantity_series?ending_at=2018-06-28T23:59:59-5:00&length=100&unit=14&app_id={{app_identifier}}&product=name",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["purchases", "quantity_series"],
                  "query": [
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime (ISO 8601 string)\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "length",
                      "value": "100",
                      "description": "(Required) Integer\nMaximum number of days before ending_at to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "unit",
                      "value": "14",
                      "description": "(Optional) String\nUnit of time between data points. Can be `day` or `hour`, defaults to `day`. "
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\nApp API identifier retrieved from the Settings > Setup and Testing > API Keys to limit analytics to a specific app."
                    },
                    {
                      "key": "product",
                      "value": "name",
                      "description": "(Optional) String\nName of product to filter response by. If excluded, results for all apps will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to return the total number of purchases in your app over a time range. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `purchases.quantity_series` permission.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-01.braze.com/purchases/quantity_series?length=100' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n  \"data\" : [\n    {\n      \"time\" : (string) the date as ISO 8601 date,\n      \"purchase_quantity\" : (int) the number of items purchased in the time period\n      },\n    ...\n  ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Revenue Data by Time",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/purchases/revenue_series?ending_at=2018-06-28T23:59:59-5:00&length=100&unit=14&app_id={{app_identifier}}&product=name",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["purchases", "revenue_series"],
                  "query": [
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime (ISO 8601 string)\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "length",
                      "value": "100",
                      "description": "(Required) Integer\nMaximum number of days before ending_at to include in the returned series. Must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "unit",
                      "value": "14",
                      "description": "(Optional) String\nUnit of time between data points. Can be `day` or `hour`, defaults to `day`. "
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\nApp API identifier retrieved from the Settings > Setup and Testing > API Keys to limit analytics to a specific app."
                    },
                    {
                      "key": "product",
                      "value": "name",
                      "description": "(Optional) String\nName of product to filter response by. If excluded, results for all apps will be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to return the total money spent in your app over a time range. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `purchases.revenue_series` permission.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 1,000 requests per hour to this endpoint. This rate limit is shared with the `/events/list` endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-01.braze.com/purchases/revenue_series?length=100' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n  \"data\" : [\n    {\n      \"time\" : (string) the date as ISO 8601 date,\n      \"revenue\" : (int) amount of revenue for the time period\n      },\n    ...\n  ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Segment",
          "item": [
            {
              "name": "Export Segment List",
              "request": {
                "method": "GET",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{api_key}}" }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/segments/list?page=1&sort_direction=desc",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["segments", "list"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1",
                      "description": "(Optional) Integer\n\nThe page of segments to return, defaults to 0 (returns the first set of up to 100)."
                    },
                    {
                      "key": "sort_direction",
                      "value": "desc",
                      "description": "(Optional) String\n\n- Sort creation time from newest to oldest: pass in the value `desc`.\n- Sort creation time from oldest to newest: pass in the value `asc`.\n\nIf `sort_direction` is not included, the default order is oldest to newest."
                    }
                  ]
                },
                "description": "> Use this endpoint to export a list of segments, each of which will include its name, Segment API identifier, and whether it has analytics tracking enabled. \n  \n\nThe segments are returned in groups of 100 sorted by time of creation (oldest to newest by default). Archived segments are not included.\n\nTo use this endpoint, you’ll need to generate an API key with the `segments.list` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"segments\" : [\n        {\n            \"id\" : (string) Segment API Identifier,\n            \"name\" : (string) segment name,\n            \"analytics_tracking_enabled\" : (boolean) whether the segment has analytics tracking enabled,\n            \"tags\" : (array) tag names associated with the segment\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Segment Analytics",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/segments/data_series?segment_id={{segment_identifier}}&length=14&ending_at=2018-06-27T23:59:59-5:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["segments", "data_series"],
                  "query": [
                    {
                      "key": "segment_id",
                      "value": "{{segment_identifier}}",
                      "description": "(Required) String\n\nSee [Segment API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `segment_id` for a given segment can be found in your **Settings > Setup and Testing > API Keys.** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/get_segment/)."
                    },
                    {
                      "key": "length",
                      "value": "14",
                      "description": "(Required) Integer\n\nMax number of days before `ending_at` to include in the returned series - must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-27T23:59:59-5:00",
                      "description": "(Optional) Datetime ([ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string)\n\nDate on which the data series should end. Defaults to time of the request."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a daily series of the estimated size of a segment over time. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `segment_id` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `segments.data_series` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) date as ISO 8601 date,\n            \"size\" : (int) size of the segment on that date\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export Segment Details",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/segments/details?segment_id={{segment_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["segments", "details"],
                  "query": [
                    {
                      "key": "segment_id",
                      "value": "{{segment_identifier}}",
                      "description": "(Required) String\n\nSee [Segment API identifier](https://www.braze.com/docs/api/identifier_types/).\n\nThe `segment_id` for a given segment can be found in your **Settings > Setup and Testing > API Keys** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/get_segment/)."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve relevant information on a segment, which can be identified by the `segment_id`. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `segment_id` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `segments.details` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n      \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n      \"created_at\" : (string) date created as ISO 8601 date,\n      \"updated_at\" : (string) date last updated as ISO 8601 date,\n      \"name\" : (string) segment name,\n      \"description\" : (string) human-readable description of filters,\n      \"text_description\" : (string) segment description, \n      \"tags\" : (array) tag names associated with the segment\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Session Analytics",
          "item": [
            {
              "name": "Export App Sessions by Time",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/sessions/data_series?length=14&unit=day&ending_at=2018-06-28T23:59:59-5:00&app_id={{app_identifier}}&segment_id={{segment_identifier}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["sessions", "data_series"],
                  "query": [
                    {
                      "key": "length",
                      "value": "14",
                      "description": "(Required) Integer\n\nMax number of days before `ending_at` to include in the returned series - must be between 1 and 100 (inclusive)."
                    },
                    {
                      "key": "unit",
                      "value": "day",
                      "description": "(Optional) String\n\nUnit of time between data points. Can be `day` or `hour`, defaults to `day`. "
                    },
                    {
                      "key": "ending_at",
                      "value": "2018-06-28T23:59:59-5:00",
                      "description": "(Optional) Datetime (ISO 8601 string)\n\nDate on which the data series should end. Defaults to time of the request."
                    },
                    {
                      "key": "app_id",
                      "value": "{{app_identifier}}",
                      "description": "(Optional) String\n\nApp API identifier retrieved from the **Settings > Setup and Testing > API Keys** to limit analytics to a specific app."
                    },
                    {
                      "key": "segment_id",
                      "value": "{{segment_identifier}}",
                      "description": "(Required) String\n\nSee [Segment API identifier](https://www.braze.com/docs/api/identifier_types/). Segment ID indicating the analytics-enabled segment for which sessions should be returned."
                    }
                  ]
                },
                "description": "> Use this endpoint to retrieve a series of the number of sessions for your app over a designated time period. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `segment_id` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `sessions.data_series` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"data\" : [\n        {\n            \"time\" : (string) point in time - as ISO 8601 extended when unit is \"hour\" and as ISO 8601 date when unit is \"day\",\n            \"sessions\" : (int)\n        },\n        ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Users",
          "item": [
            {
              "name": "Export User Profile by Identifier",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"external_ids\": [\"user_identifier1\", \"user_identifier2\"],\n  \"user_aliases\": [\n    {\n      \"alias_name\": \"example_alias\",\n      \"alias_label\": \"example_label\"\n    }\n  ],\n  \"device_id\": \"1234567\",\n  \"braze_id\": \"braze_identifier\",\n  \"email_address\": \"example@braze.com\",\n  \"phone\": \"+11112223333\",\n  \"fields_to_export\": [\"first_name\", \"email\", \"purchases\"]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/users/export/ids",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["users", "export", "ids"]
                },
                "description": "> Use this endpoint to export data from any user profile by specifying a user identifier. \n  \n\nUp to 50 `external_ids` or `user_aliases` can be included in a single request. Should you want to specify `device_id` or `email_address` only one of either identifier can be included per request.\n\nTo use this endpoint, you’ll need to generate an API key with the `users.export.ids` permission.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after August 16, 2021, we apply a rate limit of 2,500 requests per minute to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_ids` | Optional | Array of strings | External identifiers for users you wish export. |\n| `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for users to export. |\n| `device_id` | Optional | String | Device identifier, as returned by various SDK methods such as `getDeviceId`. |\n| `braze_id` | Optional | String | Braze identifier for a particular user. |\n| `email_address` | Optional | String | Email address of user. |\n| `phone` | Optional | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | Phone number of user. |\n| `fields_to_export` | Optional | Array of strings | Name of user data fields to export. Defaults to all if not provided. |\n\n## Fields to export\n\nThe following is a list of valid `fields_to_export`. Using `fields_to_export` to minimize the data returned can improve response time of this API endpoint:\n\n| Field to export | Data type | Description |\n| --- | --- | --- |\n| `apps` | Array | Apps this user has logged sessions for, which includes the fields:  <br>  <br>\\- `name`: app name  <br>\\- `platform`: app platform, such as iOS, Android, or Web  <br>\\- `version`: app version number or name  <br>\\- `sessions`: total number of sessions for this app  <br>\\- `first_used`: date of first session  <br>\\- `last_used`: date of last session  <br>  <br>All fields are strings. |\n| `attributed_campaign` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for a particular ad campaign. |\n| `attributed_source` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for the platform the ad was on. |\n| `attributed_adgroup` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign. |\n| `attributed_ad` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign and adgroup. |\n| `braze_id` | String | Device-specific unique user identifier set by Braze for this user. |\n| `country` | String | User's country using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard. |\n| `created_at` | String | Date and time for when the user profile was created, in ISO 8601 format. |\n| `custom_attributes` | Object | Custom attribute key-value pairs for this user. |\n| `custom_events` | Array | Custom events attributed to this user in the last 90 days. |\n| `devices` | Array | Information about the user's device, which could include the following depending on platform:  <br>  <br>\\- `model`: Device's model name  <br>\\- `os`: Device's operating system  <br>\\- `carrier`: Device's service carrier, if available  <br>\\- `idfv`: (iOS) Braze's device identifier, the Apple Identifier for Vendor, if exists  <br>\\- `idfa`: (iOS) Identifier for Advertising, if exists  <br>\\- `device_id`: (Android) Braze's device identifier  <br>\\- `google_ad_id`: (Android) Google Play Advertising Identifier, if exists  <br>\\- `roku_ad_id`: (Roku) Roku Advertising Identifier  <br>\\- `ad_tracking_enabled`: If ad tracking is enabled on the device, can be true or false |\n| `dob` | String | User's date of birth in the format `YYYY-MM-DD`. |\n| `email` | String | User's email address. |\n| `external_id` | String | Unique user identifier for identified users. |\n| `first_name` | String | User's first name. |\n| `gender` | String | User's gender. Possible values are:  <br>  <br>\\- `M`: male  <br>\\- `F`: female  <br>\\- `O`: other  <br>\\- `N`: not applicable  <br>\\- `P`: prefer not to say  <br>\\- `nil`: unknown |\n| `home_city` | String | User's home city. |\n| `language` | String | User's language in ISO-639-1 standard. |\n| `last_coordinates` | Array of floats | User's most recent device location, formatted as `[longitude, latitude]`. |\n| `last_name` | String | User's last name. |\n| `phone` | String | User's telephone number in E.164 format. |\n| `purchase`s | Array | Purchases this user has made in the last 90 days. |\n| `random_bucket` | Integer | User's [random bucket number](https:/www.braze.com/docs/user_guide/data_and_analytics/braze_currents/event_glossary/customer_behavior_events#random-bucket-number-event), used to create uniformly distributed segments of random users. |\n| `time_zone` | String | User's time zone in the same format as the IANA Time Zone Database. |\n| `total_revenue` | Float | Total revenue attributed to this user. Total revenue is calculated based on purchases the user made during conversion windows for the campaigns and Canvases they received. |\n| `uninstalled_at` | Timestamp | Date and time the user uninstalls the app. Omitted if the app has not been uninstalled. |\n| `user_aliases` | Object | [User aliases object](https:/www.braze.com/docs/api/objects_filters/user_alias_object#user-alias-object-specification) containing the `alias_name` and `alias_label`, if exists. |\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"users\" : (array of object) the data for each of the exported users, may be empty if no users are found,\n    \"invalid_user_ids\" : (optional, array of string) each of the identifiers provided in the request that did not correspond to a known user\n}\n\n```\n\nFor an example of the data that is accessible via this endpoint see the following example.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n``` json\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"push_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"email_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"custom_attributes\" : (object) custom attribute key-value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"push_tokens\" : [\n        {\n            \"app\" : (string) app name,\n            \"platform\" : (string),\n            \"token\" : (string)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (integer),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n    \"campaigns_received\" : [\n        {\n            \"name\" : (string),\n            \"last_received\" : (string) date,\n            \"engaged\" : {\n                \"opened_email\" : (bool),\n                \"opened_push\" : (bool),\n                \"clicked_email\" : (bool),\n                \"clicked_triggered_in_app_message\" : (bool)\n            },\n            \"converted\" : (bool),\n            \"api_campaign_id\" : (string),\n            \"variation_name\" : (optional, string) exists only if it is a multivariate campaign,\n            \"variation_api_id\" : (optional, string) exists only if it is a multivariate campaign,\n            \"in_control\" : (optional, bool) exists only if it is a multivariate campaign\n        },\n        ...\n    ],\n    \"canvases_received\": [\n        {\n            \"name\": (string),\n            \"api_canvas_id\": (string),\n            \"last_received_message\": (string) date,\n            \"last_entered\": (string) date,\n            \"variation_name\": (string),\n            \"in_control\": (bool),\n            \"last_exited\": (string) date,\n            \"steps_received\": [\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                }\n            ]\n        },\n        ...\n    ],\n    \"cards_clicked\" : [\n        {\n            \"name\" : (string)\n        },\n        ...\n    ]\n}\n\n```\n\n#### Sample output\n\n``` json\n{\n    \"created_at\" : \"2020-07-10 15:00:00.000 UTC\",\n    \"external_id\" : \"A8i3mkd99\",\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : \"user_123\",\n        \"alias_label\" : \"amplitude_id\"\n      }\n    ],\n    \"braze_id\": \"5fbd99bac125ca40511f2cb1\",\n    \"random_bucket\" : 2365,\n    \"first_name\" : \"Jane\",\n    \"last_name\" : \"Doe\",\n    \"email\" : \"example@braze.com\",\n    \"dob\" : \"1980-12-21\",\n    \"home_city\" : \"Chicago\",\n    \"country\" : \"US\",\n    \"phone\" : \"+442071838750\",\n    \"language\" : \"en\",\n    \"time_zone\" : \"Eastern Time (US & Canada)\",\n    \"last_coordinates\" : [41.84157636433568, -87.83520818508256],\n    \"gender\" : \"F\",\n    \"total_revenue\" : 65,\n    \"attributed_campaign\" : \"braze_test_campaign_072219\",\n    \"attributed_source\" : \"braze_test_source_072219\",\n    \"attributed_adgroup\" : \"braze_test_adgroup_072219\",\n    \"attributed_ad\" : \"braze_test_ad_072219\",\n    \"push_subscribe\" : \"opted_in\", \n    \"push_opted_in_at\": \"2020-01-26T22:45:53.953Z\",\n    \"email_subscribe\" : \"subscribed\",\n    \"custom_attributes\": \n    {\n      \"loyaltyId\": \"37c98b9d-9a7f-4b2f-a125-d873c5152856\",\n      \"loyaltyPoints\": \"321\",\n       \"loyaltyPointsNumber\": 107\n    },\n    \"custom_events\": [\n      {\n        \"name\": \"Loyalty Acknowledgement\",\n        \"first\": \"2021-06-28T17:02:43.032Z\",\n        \"last\": \"2021-06-28T17:02:43.032Z\",\n        \"count\": 1\n      },\n      ...\n    ],\n    \"purchases\": [\n      {\n        \"name\": \"item_40834\",\n        \"first\": \"2021-09-05T03:45:50.540Z\",\n        \"last\": \"2022-06-03T17:30:41.201Z\",\n        \"count\": 10\n      },\n      ...\n    ],\n    \"devices\": [\n      {\n        \"model\": \"Pixel XL\",\n        \"os\": \"Android (Q)\",\n        \"carrier\": null,\n        \"device_id\": \"312ef2c1-83db-4789-967-554545a1bf7a\",\n        \"ad_tracking_enabled\": true\n      },\n      ...\n    ],\n    \"push_tokens\": [\n      {\n        \"app\": \"MovieCanon\",\n        \"platform\": \"Android\",\n        \"token\": \"12345abcd\",\n        \"device_id\": \"312ef2c1-83db-4789-967-554545a1bf7a\",\n        \"notifications_enabled\": true\n      },\n      ...\n    ],\n    \"apps\": [\n      {\n        \"name\": \"MovieCannon\",\n        \"platform\": \"Android\",\n        \"version\": \"3.29.0\",\n        \"sessions\": 1129,\n        \"first_used\": \"2020-02-02T19:56:19.142Z\",\n        \"last_used\": \"2021-11-11T00:25:19.201Z\"\n      },\n      ...\n    ],\n    \"campaigns_received\": [\n      {\n        \"name\": \"Email Unsubscribe\",\n        \"api_campaign_id\": \"d72fdc84-ddda-44f1-a0d5-0e79f47ef942\",\n        \"last_received\": \"2022-06-02T03:07:38.105Z\",\n        \"engaged\": \n        {\n           \"opened_email\": true\n        },\n        \"converted\": true,\n        \"multiple_converted\": \n        {\n          \"Primary Conversion Event - A\": true\n        },\n        \"in_control\": false,\n        \"variation_name\": \"Variant 1\",\n        \"variation_api_id\": \"1bddc73a-a134-4784-9134-5b5574a9e0b8\"\n      },\n      ...\n    ],\n    \"canvases_received\": [\n      {\n        \"name\": \"Non Global  Holdout Group 4/21/21\",\n        \"api_canvas_id\": \"46972a9d-dc81-473f-aa03-e3473b4ed781\",\n        \"last_received_message\": \"2021-07-07T20:46:24.136Z\",\n        \"last_entered\": \"2021-07-07T20:45:24.000+00:00\",\n        \"variation_name\": \"Variant 1\",\n        \"in_control\": false,\n        \"last_entered_control_at\": null,\n        \"last_exited\": \"2021-07-07T20:46:24.136Z\",\n        \"steps_received\": [\n          {\n            \"name\": \"Step\",\n            \"api_canvas_step_id\": \"43d1a349-c3c8-4be1-9fbe-ce708e4d1c39\",\n            \"last_received\": \"2021-07-07T20:46:24.136Z\"\n          },\n          ...\n        ]\n      }\n      ...\n    ],    \n    \"cards_clicked\" : [\n      {\n        \"name\" : \"Loyalty Promo\"\n      },\n      ...\n    ]\n}\n\n```\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/)."
              },
              "response": []
            },
            {
              "name": "Export User Profile by Segment",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"segment_id\" : \"segment_identifier\",\n  \"callback_endpoint\" : \"example_endpoint\",\n  \"fields_to_export\" : [\"first_name\", \"email\", \"purchases\"],\n  \"output_format\" : \"zip\"\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/users/export/segment",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["users", "export", "segment"]
                },
                "description": "> Use this endpoint to export all the users within a segment. \n  \n\nUser data is exported as multiple files of user JSON objects separated by new lines (i.e., one JSON object per line).\n\nData is exported to an automatically generated URL, or to an S3 bucket if this integration is already set up.\n\nThis endpoint is currently not supported by Google Cloud Storage.\n\nNote that a company may run at most one export per segment using this endpoint at a given time. Wait for your export to complete before retrying.\n\n> Beginning December 2021, the following changed for this API: \n  \n> 1\\. The fields_to_export field in this API request is required. The option to default to all fields has been removed.  \n2\\. The fields for custom_events, purchases, campaigns_received, and canvases_received only contain data from the last 90 days. \n  \n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), `segment_id` can be found at **Developer Console > API Settings**.\n\nTo use this endpoint, you’ll need to generate an API key with the `users.export.segment` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Credential-based response details\n\nFor information regarding credentials-based response details, visit this [section](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_segment/#credentials-based-response-details) in the Braze API docs.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `segment_id` | Required | String | Identifier for the segment to be exported. See [segment identifier](https://www.braze.com/docs/api/identifier_types/).  <br>  <br>The segment_id for a given segment can be found in your **Settings > Setup and Testing > API Keys** within your Braze account or you can use the [Segment List Endpoint](https://www.braze.com/docs/api/endpoints/export/segments/get_segment/). |\n| `callback_endpoint` | Optional | String | Endpoint to post a download URL to when the export is available. |\n| `fields_to_export` | Required\\* | Array of strings | Name of user data fields to export, you may also export custom attributes.  <br>  <br>\\*Beginning April 2021, new accounts must specify specific fields to export. |\n| `output_format` | Optional | String | When using your own S3 bucket, allows you to specify file format as `zip` or `gzip`. Defaults to ZIP file format. |\n\n### Fields to export\n\nThe following is a list of valid `fields_to_export`. Using `fields_to_export` to minimize the data returned can improve response time of this API endpoint:\n\n| Field to export | Data type | Description |\n| --- | --- | --- |\n| `apps` | Array | Apps this user has logged sessions for, which includes the fields:  <br>  <br>\\- `name`: app name  <br>\\- `platform`: app platform, such as iOS, Android, or Web  <br>\\- `version`: app version number or name  <br>\\- `sessions`: total number of sessions for this app  <br>\\- `first_used`: date of first session  <br>\\- `last_used`: date of last session  <br>  <br>All fields are strings. |\n| `attributed_campaign` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for a particular ad campaign. |\n| `attributed_source` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for the platform the ad was on. |\n| `attributed_adgroup` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign. |\n| `attributed_ad` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign and adgroup. |\n| `braze_id` | String | Device-specific unique user identifier set by Braze for this user. |\n| `country` | String | User's country using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard. |\n| `created_at` | String | Date and time for when the user profile was created, in ISO 8601 format. |\n| `custom_attributes` | Object | Custom attribute key-value pairs for this user. |\n| `custom_events` | Array | Custom events attributed to this user in the last 90 days. |\n| `devices` | Array | Information about the user's device, which could include the following depending on platform:  <br>  <br>\\- `model`: Device's model name  <br>\\- `os`: Device's operating system  <br>\\- `carrier`: Device's service carrier, if available  <br>\\- `idfv`: (iOS) Braze's device identifier, the Apple Identifier for Vendor, if exists  <br>\\- `idfa`: (iOS) Identifier for Advertising, if exists  <br>\\- `device_id`: (Android) Braze's device identifier  <br>\\- `google_ad_id`: (Android) Google Play Advertising Identifier, if exists  <br>\\- `roku_ad_id`: (Roku) Roku Advertising Identifier  <br>\\- `ad_tracking_enabled`: If ad tracking is enabled on the device, can be true or false |\n| `dob` | String | User's date of birth in the format `YYYY-MM-DD`. |\n| `email` | String | User's email address. |\n| `external_id` | String | Unique user identifier for identified users. |\n| `first_name` | String | User's first name. |\n| `gender` | String | User's gender. Possible values are:  <br>  <br>\\- `M`: male  <br>\\- `F`: female  <br>\\- `O`: other  <br>\\- `N`: not applicable  <br>\\- `P`: prefer not to say  <br>\\- `nil`: unknown |\n| `home_city` | String | User's home city. |\n| `language` | String | User's language in ISO-639-1 standard. |\n| `last_coordinates` | Array of floats | User's most recent device location, formatted as `[longitude, latitude]`. |\n| `last_name` | String | User's last name. |\n| `phone` | String | User's telephone number in E.164 format. |\n| `purchase`s | Array | Purchases this user has made in the last 90 days. |\n| `random_bucket` | Integer | User's [random bucket number](https:/www.braze.com/docs/user_guide/data_and_analytics/braze_currents/event_glossary/customer_behavior_events#random-bucket-number-event), used to create uniformly distributed segments of random users. |\n| `time_zone` | String | User's time zone in the same format as the IANA Time Zone Database. |\n| `total_revenue` | Float | Total revenue attributed to this user. Total revenue is calculated based on purchases the user made during conversion windows for the campaigns and Canvases they received. |\n| `uninstalled_at` | Timestamp | Date and time the user uninstalls the app. Omitted if the app has not been uninstalled. |\n| `user_aliases` | Object | [User aliases object](https:/www.braze.com/docs/api/objects_filters/user_alias_object#user-alias-object-specification) containing the `alias_name` and `alias_label`, if exists. |\n\n### Important reminders\n\n- The fields for `custom_events`, `purchases`, `campaigns_received`, and `canvases_received` will contain only contain data from the last 90 days.\n- Both `custom_events` and `purchases` contain fields for `first` and `count`. Both of these fields will reflect information from all time, and will not be limited to just data from the last 90 days. For example, if a particular user first did the event prior to 90 days ago, this will be accurately reflected in the `first` field, and the `count` field will take into account events that occurred prior to the last 90 days as well.\n- The number of concurrent segment exports a company can run at the endpoint level is capped at 100. Attempts that surpass this limit will result in an error.\n    \n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"object_prefix\": (required, string) the filename prefix that will be used for the JSON file produced by this export, e.g. 'bb8e2a91-c4aa-478b-b3f2-a4ee91731ad1-1464728599',\n    \"url\" : (optional, string) the URL where the segment export data can be downloaded if you do not have your own S3 credentials\n}\n\n```\n\nOnce made available, the URL will only be valid for a few hours. As such, we highly recommend that you add your own S3 credentials to Braze.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n``` json\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"push_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"email_subscribe\" : (string) \"opted_in\" | \"subscribed\" | \"unsubscribed\",\n    \"custom_attributes\" : (object) custom attribute key value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"push_tokens\" : [\n        {\n            \"app\" : (string) app name,\n            \"platform\" : (string),\n            \"token\" : (string)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (string),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n    \"campaigns_received\" : [\n        {\n            \"name\" : (string),\n            \"last_received\" : (string) date,\n            \"engaged\" : {\n                \"opened_email\" : (bool),\n                \"opened_push\" : (bool),\n                \"clicked_email\" : (bool),\n                \"clicked_in_app_message\" : (bool)\n            },\n            \"converted\" : (bool),\n            \"api_campaign_id\" : (string),\n            \"variation_name\" : (optional, string) exists only if it is a multivariate campaign,\n            \"variation_api_id\" : (optional, string) exists only if it is a multivariate campaign,\n            \"in_control\" : (optional, bool) exists only if it is a multivariate campaign\n        },\n        ...\n    ],\n    \"canvases_received\": [\n        {\n            \"name\": (string),\n            \"api_canvas_id\": (string),\n            \"last_received_message\": (string) date,\n            \"last_entered\": (string) date,\n            \"variation_name\": (string),\n            \"in_control\": (bool),\n            \"last_exited\": (string) date,\n            \"steps_received\": [\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                },\n                {\n                    \"name\": (string),\n                    \"api_canvas_step_id\": (string),\n                    \"last_received\": (string) date\n                }\n            ]\n        },\n        ...\n    ],\n    \"cards_clicked\" : [\n        {\n            \"name\" : (string)\n        },\n        ...\n    ]\n}\n\n```\n\nSample output\n\n``` json\n{\n    \"created_at\" : \"2020-07-10 15:00:00.000 UTC\",\n    \"external_id\" : \"A8i3mkd99\",\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : \"user_123\",\n        \"alias_label\" : \"amplitude_id\"\n      }\n    ],\n    \"braze_id\": \"5fbd99bac125ca40511f2cb1\",\n    \"random_bucket\" : 2365,\n    \"first_name\" : \"Jane\",\n    \"last_name\" : \"Doe\",\n    \"email\" : \"example@braze.com\",\n    \"dob\" : \"1980-12-21\",\n    \"home_city\" : \"Chicago\",\n    \"country\" : \"US\",\n    \"phone\" : \"+442071838750\",\n    \"language\" : \"en\",\n    \"time_zone\" : \"Eastern Time (US & Canada)\",\n    \"last_coordinates\" : [41.84157636433568, -87.83520818508256],\n    \"gender\" : \"F\",\n    \"total_revenue\" : 65,\n    \"attributed_campaign\" : \"braze_test_campaign_072219\",\n    \"attributed_source\" : \"braze_test_source_072219\",\n    \"attributed_adgroup\" : \"braze_test_adgroup_072219\",\n    \"attributed_ad\" : \"braze_test_ad_072219\",\n    \"push_subscribe\" : \"opted_in\",\n    \"push_opted_in_at\": \"2020-01-26T22:45:53.953Z\",\n    \"email_subscribe\" : \"subscribed\",\n    \"custom_attributes\":\n    {\n      \"loyaltyId\": \"37c98b9d-9a7f-4b2f-a125-d873c5152856\",\n      \"loyaltyPoints\": \"321\",\n       \"loyaltyPointsNumber\": 107\n    },\n    \"custom_events\": [\n      {\n        \"name\": \"Loyalty Acknowledgement\",\n        \"first\": \"2021-06-28T17:02:43.032Z\",\n        \"last\": \"2021-06-28T17:02:43.032Z\",\n        \"count\": 1\n      },\n      ...\n    ],\n    \"purchases\": [\n      {\n        \"name\": \"item_40834\",\n        \"first\": \"2021-09-05T03:45:50.540Z\",\n        \"last\": \"2022-06-03T17:30:41.201Z\",\n        \"count\": 10\n      },\n      ...\n    ],\n    \"devices\": [\n      {\n        \"model\": \"Pixel XL\",\n        \"os\": \"Android (Q)\",\n        \"carrier\": null,\n        \"device_id\": \"312ef2c1-83db-4789-967-554545a1bf7a\",\n        \"ad_tracking_enabled\": true\n      },\n      ...\n    ],\n    \"push_tokens\": [\n      {\n        \"app\": \"MovieCanon\",\n        \"platform\": \"Android\",\n        \"token\": \"12345abcd\",\n        \"device_id\": \"312ef2c1-83db-4789-967-554545a1bf7a\",\n        \"notifications_enabled\": true\n      },\n      ...\n    ],\n    \"apps\": [\n      {\n        \"name\": \"MovieCannon\",\n        \"platform\": \"Android\",\n        \"version\": \"3.29.0\",\n        \"sessions\": 1129,\n        \"first_used\": \"2020-02-02T19:56:19.142Z\",\n        \"last_used\": \"2021-11-11T00:25:19.201Z\"\n      },\n      ...\n    ],\n    \"campaigns_received\": [\n      {\n        \"name\": \"Email Unsubscribe\",\n        \"api_campaign_id\": \"d72fdc84-ddda-44f1-a0d5-0e79f47ef942\",\n        \"last_received\": \"2022-06-02T03:07:38.105Z\",\n        \"engaged\":\n        {\n           \"opened_email\": true\n        },\n        \"converted\": true,\n        \"multiple_converted\":\n        {\n          \"Primary Conversion Event - A\": true\n        },\n        \"in_control\": false,\n        \"variation_name\": \"Variant 1\",\n        \"variation_api_id\": \"1bddc73a-a134-4784-9134-5b5574a9e0b8\"\n      },\n      ...\n    ],\n    \"canvases_received\": [\n      {\n        \"name\": \"Non Global  Holdout Group 4/21/21\",\n        \"api_canvas_id\": \"46972a9d-dc81-473f-aa03-e3473b4ed781\",\n        \"last_received_message\": \"2021-07-07T20:46:24.136Z\",\n        \"last_entered\": \"2021-07-07T20:45:24.000+00:00\",\n        \"variation_name\": \"Variant 1\",\n        \"in_control\": false,\n        \"last_entered_control_at\": null,\n        \"last_exited\": \"2021-07-07T20:46:24.136Z\",\n        \"steps_received\": [\n          {\n            \"name\": \"Step\",\n            \"api_canvas_step_id\": \"43d1a349-c3c8-4be1-9fbe-ce708e4d1c39\",\n            \"last_received\": \"2021-07-07T20:46:24.136Z\"\n          },\n          ...\n        ]\n      }\n      ...\n    ],\n    \"cards_clicked\" : [\n      {\n        \"name\" : \"Loyalty Promo\"\n      },\n      ...\n    ]\n}\n\n```\n\n> Tip: For help with CSV and API exports, visit Export troubleshooting."
              },
              "response": []
            },
            {
              "name": "Export User Profile by Global Control Group",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"callback_endpoint\" : \"\",\n  \"fields_to_export\" : [\"email\", \"braze_id\"],\n  \"output_format\" : \"zip\"\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/users/export/global_control_group",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["users", "export", "global_control_group"]
                },
                "description": "> Use this endpoint to export all users within a Global Control Group. \n  \n\nUser data is exported as multiple files of user JSON objects separated by new lines (i.e., one JSON object per line).\n\n> Warning: Individual custom attributes cannot be exported. However, all custom attributes can be exported by including custom_attributes in the fields_to_export array (e.g.,\\[‘first_name’, ‘email’, ‘custom_attributes’\\]). \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.export.global_control_group` permission.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n## Credential-based response details\n\nFor information regarding credentials-based response details, visit this [section](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_global_control_group/#credentials-based-response-details) in the Braze API docs.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `callback_endpoint` | Optional | String | Endpoint to post a download URL to when the export is available. |\n| `fields_to_export` | Required\\* | Array of strings | Name of user data fields to export, you may also export custom attributes.  <br>  <br>\\*Beginning April 2021, new accounts must specify specific fields to export. |\n| `output_format` | Optional | String | When using your own S3 bucket, allows to specify file format as `zip` or `gzip`. Defaults to ZIP file format. |\n\n## Fields to export\n\nThe following is a list of valid `fields_to_export`. Using `fields_to_export` to minimize the data returned can improve response time of this API endpoint:\n\n| Field to export | Data type | Description |\n| --- | --- | --- |\n| `apps` | Array | Apps this user has logged sessions for, which includes the fields:  <br>  <br>\\- `name`: app name  <br>\\- `platform`: app platform, such as iOS, Android, or Web  <br>\\- `version`: app version number or name  <br>\\- `sessions`: total number of sessions for this app  <br>\\- `first_used`: date of first session  <br>\\- `last_used`: date of last session  <br>  <br>All fields are strings. |\n| `attributed_campaign` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for a particular ad campaign. |\n| `attributed_source` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for the platform the ad was on. |\n| `attributed_adgroup` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign. |\n| `attributed_ad` | String | Data from [attribution integrations](https:/www.braze.com/docs/partners/message_orchestration/attribution), if set up. Identifier for an optional sub-grouping below campaign and adgroup. |\n| `braze_id` | String | Device-specific unique user identifier set by Braze for this user. |\n| `country` | String | User's country using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard. |\n| `created_at` | String | Date and time for when the user profile was created, in ISO 8601 format. |\n| `custom_attributes` | Object | Custom attribute key-value pairs for this user. |\n| `custom_events` | Array | Custom events attributed to this user in the last 90 days. |\n| `devices` | Array | Information about the user's device, which could include the following depending on platform:  <br>  <br>\\- `model`: Device's model name  <br>\\- `os`: Device's operating system  <br>\\- `carrier`: Device's service carrier, if available  <br>\\- `idfv`: (iOS) Braze's device identifier, the Apple Identifier for Vendor, if exists  <br>\\- `idfa`: (iOS) Identifier for Advertising, if exists  <br>\\- `device_id`: (Android) Braze's device identifier  <br>\\- `google_ad_id`: (Android) Google Play Advertising Identifier, if exists  <br>\\- `roku_ad_id`: (Roku) Roku Advertising Identifier  <br>\\- `ad_tracking_enabled`: If ad tracking is enabled on the device, can be true or false |\n| `dob` | String | User's date of birth in the format `YYYY-MM-DD`. |\n| `email` | String | User's email address. |\n| `external_id` | String | Unique user identifier for identified users. |\n| `first_name` | String | User's first name. |\n| `gender` | String | User's gender. Possible values are:  <br>  <br>\\- `M`: male  <br>\\- `F`: female  <br>\\- `O`: other  <br>\\- `N`: not applicable  <br>\\- `P`: prefer not to say  <br>\\- `nil`: unknown |\n| `home_city` | String | User's home city. |\n| `language` | String | User's language in ISO-639-1 standard. |\n| `last_coordinates` | Array of floats | User's most recent device location, formatted as `[longitude, latitude]`. |\n| `last_name` | String | User's last name. |\n| `phone` | String | User's telephone number in E.164 format. |\n| `purchase`s | Array | Purchases this user has made in the last 90 days. |\n| `random_bucket` | Integer | User's [random bucket number](https:/www.braze.com/docs/user_guide/data_and_analytics/braze_currents/event_glossary/customer_behavior_events#random-bucket-number-event), used to create uniformly distributed segments of random users. |\n| `time_zone` | String | User's time zone in the same format as the IANA Time Zone Database. |\n| `total_revenue` | Float | Total revenue attributed to this user. Total revenue is calculated based on purchases the user made during conversion windows for the campaigns and Canvases they received. |\n| `uninstalled_at` | Timestamp | Date and time the user uninstalls the app. Omitted if the app has not been uninstalled. |\n| `user_aliases` | Object | [User aliases object](https:/www.braze.com/docs/api/objects_filters/user_alias_object#user-alias-object-specification) containing the `alias_name` and `alias_label`, if exists. |\n\n## Response\n\n```\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n    \"message\": (required, string) the status of the export, returns 'success' when completed without errors,\n    \"object_prefix\": (required, string) the filename prefix that will be used for the JSON file produced by this export, e.g.,'bb8e2a91-c4aa-478b-b3f2-a4ee91731ad1-1464728599',\n    \"url\" : (optional, string) the URL where the segment export data can be downloaded if you do not have your own S3 credentials\n}\n\n```\n\nOnce made available, the URL will only be valid for a few hours. As such, we highly recommend that you add your own S3 credentials to Braze.\n\n### Sample user export file output\n\nUser export object (we will include the least data possible - if a field is missing from the object it should be assumed to be null, false, or empty):\n\n```\n{\n    \"external_id\" : (string),\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : (string),\n        \"alias_label\" : (string)\n      }\n    ],\n    \"braze_id\": (string),\n    \"first_name\" : (string),\n    \"last_name\" : (string),\n    \"email\" : (string),\n    \"dob\" : (string) date for the user's date of birth,\n    \"home_city\" : (string),\n    \"country\" : (string),\n    \"phone\" : (string),\n    \"language\" : (string) ISO-639 two letter code,\n    \"time_zone\" : (string),\n    \"last_coordinates\" : (array of float) [lon, lat],\n    \"gender\" : (string) \"M\" | \"F\",\n    \"total_revenue\" : (float),\n    \"attributed_campaign\" : (string),\n    \"attributed_source\" : (string),\n    \"attributed_adgroup\" : (string),\n    \"attributed_ad\" : (string),\n    \"custom_attributes\" : (object) custom attribute key-value pairs,\n    \"custom_events\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"purchases\" : [\n        {\n            \"name\" : (string),\n            \"first\" : (string) date,\n            \"last\" : (string) date,\n            \"count\" : (int)\n        },\n        ...\n    ],\n    \"devices\" : [\n        {\n            \"model\" : (string),\n            \"os\" : (string),\n            \"carrier\" : (string),\n            \"idfv\" : (string) only included for iOS devices,\n            \"idfa\" : (string) only included for iOS devices when IDFA collection is enabled,\n            \"google_ad_id\" : (string) only included for Android devices when Google Play Advertising Identifier collection is enabled,\n            \"roku_ad_id\" : (string) only included for Roku devices,\n            \"windows_ad_id\" : (string) only included for Windows devices,\n            \"ad_tracking_enabled\" : (bool)\n        },\n        ...\n    ],\n    \"apps\" : [\n        {\n            \"name\" : (string),\n            \"platform\" : (string),\n            \"version\" : (string),\n            \"sessions\" : (string),\n            \"first_used\" : (string) date,\n            \"last_used\" : (string) date\n        },\n        ...\n    ],\n}\n\n```\n\n### Sample output\n\n``` json\n{\n    \"created_at\" : \"2020-07-10 15:00:00.000 UTC\",\n    \"external_id\" : \"A8i3mkd99\",\n    \"user_aliases\" : [\n      {\n        \"alias_name\" : \"user_123\",\n        \"alias_label\" : \"amplitude_id\"\n      }\n    ],\n    \"braze_id\": \"5fbd99bac125ca40511f2cb1\",\n    \"random_bucket\" : 2365,\n    \"first_name\" : \"Jane\",\n    \"last_name\" : \"Doe\",\n    \"email\" : \"example@braze.com\",\n    \"dob\" : \"1980-12-21\",\n    \"home_city\" : \"Chicago\",\n    \"country\" : \"US\",\n    \"phone\" : \"+442071838750\",\n    \"language\" : \"en\",\n    \"time_zone\" : \"Eastern Time (US & Canada)\",\n    \"last_coordinates\" : [41.84157636433568, -87.83520818508256],\n    \"gender\" : \"F\",\n    \"total_revenue\" : 65,\n    \"attributed_campaign\" : \"braze_test_campaign_072219\",\n    \"attributed_source\" : \"braze_test_source_072219\",\n    \"attributed_adgroup\" : \"braze_test_adgroup_072219\",\n    \"attributed_ad\" : \"braze_test_ad_072219\",\n    \"custom_attributes\": \n      {\n        \"loyaltyId\": \"37c98b9d-9a7f-4b2f-a125-d873c5152856\",\n        \"loyaltyPoints\": \"321\",\n        \"loyaltyPointsNumber\": 107\n      },\n    \"custom_events\": [\n      {\n          \"name\": \"Loyalty Acknowledgement\",\n          \"first\": \"2021-06-28T17:02:43.032Z\",\n          \"last\": \"2021-06-28T17:02:43.032Z\",\n          \"count\": 1\n      },\n      ...\n    ],\n    \"purchases\": [\n      {\n        \"name\": \"item_40834\",\n        \"first\": \"2021-09-05T03:45:50.540Z\",\n        \"last\": \"2022-06-03T17:30:41.201Z\",\n        \"count\": 10\n      },\n      ...\n    ],\n    \"devices\": [\n      {\n        \"model\": \"Pixel XL\",\n        \"os\": \"Android (Q)\",\n        \"carrier\": null,\n        \"device_id\": \"312ef2c1-83db-4789-967-554545a1bf7a\",\n        \"ad_tracking_enabled\": true\n      },\n      ...\n    ],\n    \"apps\": [\n      {\n        \"name\": \"MovieCannon\",\n        \"platform\": \"Android\",\n        \"version\": \"3.29.0\",\n        \"sessions\": 1129,\n        \"first_used\": \"2020-02-02T19:56:19.142Z\",\n        \"last_used\": \"2021-11-11T00:25:19.201Z\"\n      },\n      ...\n    ],\n}\n\n```"
              },
              "response": []
            }
          ]
        }
      ],
      "description": "With this collection of endpoints, you will be able to access and export various levels of details on your users, segments, campaigns, and Canvases. \n\nPlease be sure to reference the correct Instance when making API requests.\n\n",
      "event": [
        {
          "listen": "prerequest",
          "script": { "type": "text/javascript", "exec": [""] }
        },
        {
          "listen": "test",
          "script": { "type": "text/javascript", "exec": [""] }
        }
      ]
    },
    {
      "name": "Messaging",
      "item": [
        {
          "name": "Live Activities",
          "item": [
            {
              "name": "Update Live Activity",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"app_id\": \"{YOUR-APP-API-IDENTIFIER}\",\n    \"activity_id\": \"live-activity-1\",\n    \"content_state\": {\n        \"teamOneScore\": 2,\n        \"teamTwoScore\": 4\n    },\n    \"end_activity\": false,\n    \"dismissal_date\": \"2023-02-28T00:00:00+0000\",\n    \"stale_date\": \"2023-02-27T16:55:49+0000\",\n    \"notification\": {\n        \"alert\": {\n            \"body\": \"It's halftime! Let's look at the scores\",\n            \"title\": \"Halftime\"\n        }\n    }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/messages/live_activity/update",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "live_activity", "update"]
                },
                "description": "> Use this endpoint to update and end [Live Activities](https://www.braze.com/docs/developer_guide/platform_integration_guides/swift/live_activities/live_activities/) displayed by your iOS app. This endpoint requires additional setup. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.live_activity.update` permission.\n\nBefore using this endpoint, you must register an activity with the Braze Swift SDK using the [`launchActivity`](https://braze-inc.github.io/braze-swift-sdk/documentation/brazekit/braze/liveactivities-swift.class/launchactivity(pushtokentag:activity:fileid:line:)) method. Required request parameters will be defined during this step. Refer to [Live Activities](https://www.braze.com/docs/developer_guide/platform_integration_guides/swift/live_activities/live_activities/) for more information on registration.\n\nOnce you have registered your activity, pass a JSON payload with updates to the Apple Push Notification service (APNs) through this endpoint. See Apple’s documentation on [updating your Live Activity with push notification payloads](https://developer.apple.com/documentation/activitykit/updating-and-ending-your-live-activity-with-activitykit-push-notifications) for more information.\n\n> **Tip:** For help with CSV and API exports, visit [Export troubleshooting](https://www.braze.com/docs/user_guide/data_and_analytics/export_braze_data/export_troubleshooting/). \n  \n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in API rate limits.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `app_id` | Required | String | App [API identifier]({{site.baseurl}}/api/identifier_types/#the-app-identifier) retrieved from **Settings > Setup and Testing > API Keys.** |\n| `activity_id` | Required | String | When you register your Live Activity using [`launchActivity`](https://braze-inc.github.io/braze-swift-sdk/documentation/brazekit/braze/liveactivities-swift.class), you use the `pushTokenTag` parameter to name the Activity's push token to a custom string.  <br>  <br>Set `activity_id` to this custom string to define which Live Activity you want to update. |\n| `content_state` | Required | Object | You define the `ContentState` parameters when you create your Live Activity. Pass the updated values for your `ContentState` using this object.  <br>  <br>The format of this request must match the shape you initially defined. |\n| `end_activity` | Optional | Boolean | If `true`, this request ends the Live Activity. |\n| `dismissal_date` | Optional | Datetime  <br>([ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) string) | This parameter defines the time to remove the Live Activity from the user's UI. If this time is in the past, the Live Activity will be removed immediately. |\n| `stale_date` | Optional | Datetime  <br>([ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) string) | This parameter tells the system when the Live Activity content is marked as outdated in the user's UI. |\n| `notification` | Optional | Object | <br><br>  <br>  <br>  <br>  <br>  <br>  <br>Include an [`apple_push`]({{site.baseurl}}/api/objects_filters/messaging/apple_object/) object to define a push notification. This behavior of this push notification depends on if the user is active or if the user is using a proxy device. {::nomarkdown}  <br>  <br>  <br>  <br><br><ul><li><p>If a <code>notification</code> is included and the user is active on their iPhone when the update is delivered, the updated Live Activity UI will slide down and display like a push notification.</p></li><li><p>If a <code>notification</code> is included and the user is not active on their iPhone, their screen will light up to display the updated Live Activity UI on their lock screen.</p></li><li><p>The <code>notification alert</code> will not display as a standard push notification. Additionally, if a user has a proxy device, like an Apple Watch, the <code>alert</code> will be displayed there.</p></li></ul><br><br> |\n\n## Response\n\nThere are two status code responses for this endpoint: `201` and `4XX`.\n\n### Example success response\n\nA `201` status code is returned if the request was formatted correctly and we received the request. The status code `201` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe `4XX` class of status code indicates a client error. Refer to the [API errors and responses article]({{site.baseurl}}/api/errors/) for more information about errors you may encounter.\n\nThe status code `400` could return the following response body.\n\n``` json\n{\n    \"error\": \"\\nProblem:\\n  message body does not match declared format\\nResolution:\\n  when specifying application/json as content-type, you must pass valid application/json in the request's 'body' \"\n}\n\n```"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Schedule Mesages",
          "item": [
            {
              "name": "List Upcoming Scheduled Campaigns and Canvases",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/messages/scheduled_broadcasts?end_time=2018-09-01T00:00:00-04:00",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "scheduled_broadcasts"],
                  "query": [
                    {
                      "key": "end_time",
                      "value": "2018-09-01T00:00:00-04:00",
                      "description": "(Required) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format\n\nEnd date of the range to retrieve upcoming scheduled Campaigns and Canvases. This is treated as midnight in UTC time by the API."
                    }
                  ]
                },
                "description": "> Use this endpoint to return a JSON list of information about scheduled campaigns and entry Canvases between now and a designated `end_time` specified in the request. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.schedule_broadcasts` permission.\n\nDaily, recurring messages will only appear once with their next occurrence. Results returned in this endpoint are only for campaigns and Canvases created and scheduled in Braze.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"scheduled_broadcasts\": [\n    {\n      \"name\" (string) the name of the scheduled boradcast,\n      \"id\" (stings) the Canvas or campaign identifier,\n      \"type\" (string) the broadcast type either Canvas or Campaign,\n      \"tags\" (array) an array of tag names formatted as strings,\n      \"next_send_time\" (string) The next send time formatted in ISO 8601, may also include time zone if not local/intelligent delivery,\n      \"schedule_type\" (string) The schedule type, either local_time_zones, intelligent_delivery or the name of your company's time zone,\n    },\n  ]\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "Delete Scheduled Messages",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"schedule_id\": \"schedule_identifier\"\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/messages/schedule/delete",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "schedule", "delete"]
                },
                "description": "> Use this endpoint to cancel a message that you previously scheduled before it has been sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.schedule.delete` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `schedule_id` | Required | String | The schedule_id to delete (obtained from the response to create schedule). |"
              },
              "response": []
            },
            {
              "name": "Delete Scheduled API-Triggered Canvases",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"canvas_id\": \"canvas_identifier\",\n  \"schedule_id\": \"schedule_identifier\"\n}",
                  "options": { "raw": { "language": "json" } }
                },
                "url": {
                  "raw": "https://{{instance_url}}/canvas/trigger/schedule/delete",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "trigger", "schedule", "delete"]
                },
                "description": "> Use this endpoint to cancel a Canvas message that you previously scheduled via API-triggered before it has been sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.trigger.schedule.delete` permission.\n\nScheduled messages or triggers that are deleted very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second deletions could be applied to all, some, or none of your targeted users.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://braze.com/docs/api/identifier_types/). |\n| `schedule_id` | Required | String | The `schedule_id` to delete (obtained from the response to create schedule). |"
              },
              "response": []
            },
            {
              "name": "Delete Scheduled API Triggered Campaigns",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"campaign_id\": \"campaign_identifier\",\n  \"schedule_id\": \"schedule_identifier\"\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/trigger/schedule/delete",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "trigger", "schedule", "delete"]
                },
                "description": "> The delete schedule endpoint allows you to cancel a message that you previously scheduled API-triggered Canvases before it has been sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.trigger.schedule.delete` permission.\n\nScheduled messages or triggers that are deleted very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second deletions could be applied to all, some, or none of your targeted users.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `schedule_id` | Required | String | The `schedule_id` to delete (obtained from the response to create schedule). |"
              },
              "response": []
            },
            {
              "name": "Create Scheduled Messages",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"broadcast\": \"false\",\n  \"external_user_ids\": \"external_user_identifiers\",\n  \"user_aliases\": {\n    \"alias_name\" : \"example_name\",\n    \"alias_label\" : \"example_label\"\n  },\n  \"segment_id\": \"segment_identifiers\",\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"override_messaging_limits\": false,\n  \"recipient_subscription_state\": \"subscribed\",\n  \"schedule\": {\n    \"time\": \"\",\n    \"in_local_time\": true,\n    \"at_optimal_time\": true\n  },\n  \"messages\": {\n    \"apple_push\": (optional, Apple Push Object),\n    \"android_push\": (optional, Android Push Object),\n    \"windows_push\": (optional, Windows Phone 8 Push Object),\n    \"windows8_push\": (optional, Windows Universal Push Object),\n    \"kindle_push\": (optional, Kindle/FireOS Push Object),\n    \"web_push\": (optional, Web Push Object),\n    \"email\": (optional, Email object)\n    \"webhook\": (optional, Webhook object)\n    \"content_card\": (optional, Content Card Object)\n  }\n}",
                  "options": { "raw": { "language": "json" } }
                },
                "url": {
                  "raw": "https://{{instance_url}}/messages/schedule/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "schedule", "create"]
                },
                "description": "> Use this endpoint to schedule a campaign, Canvas, or other message to be sent at a designated time (up to 90 days in the future) and provides you with an identifier to reference that message for updates. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.schedule.create` permission.\n\nIf you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/) after all scheduled messages have been sent.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `external_user_ids` | Optional | Array of strings | See [external user identifier](https://www.braze.com/docs/api/parameters/#external-user-id). |\n| `user_aliases` | Optional | Array of user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `segment_id` | Optional | String | See [segment identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipients objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `override_messaging_limits` | Optional | Boolean | Ignore global rate limits for campaigns, defaults to false |\n| `recipient_subscription_state` | Optional | String | Use this to send messages to only users who have opted in (`opted_in`), only users who have subscribed or are opted in (`subscribed`) or to all users, including unsubscribed users (`all`).  <br>  <br>Using `all` users is useful for transactional email messaging. Defaults to `subscribed`. |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/) |\n| `messages` | Optional | Messaging object | See available [messaging objects](https://www.braze.com/docs/api/objects_filters/#messaging-objects). |\n\n## Response\n\n### Example success response\n\n``` json\n{\n    \"dispatch_id\": (string) the dispatch identifier,\n    \"schedule_id\": (string) the schedule identifier,\n    \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "Schedule API Triggered Campaigns",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"recipients\": [\n    {\n      \"user_alias\": \"example_alias\",\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": {}\n    }\n  ],\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"broadcast\": false,\n  \"trigger_properties\": {},\n  \"schedule\": {\n    \"time\": \"\",\n    \"in_local_time\": false,\n    \"at_optimal_time\": false\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/trigger/schedule/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "trigger", "schedule", "create"]
                },
                "description": "> Use this endpoint to send dashboard created campaign messages (up to 90 days in advance) via API-triggered delivery, allowing you to decide what action should trigger the message to be sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.trigger.schedule.create` permission.\n\nYou can pass in `trigger_properties` that will be templated into the message itself.\n\nNote that to send messages with this endpoint, you must have a [Campaign ID](https://www.braze.com/docs/api/identifier_types/), created when you build an [API-Triggered Campaign](https://www.braze.com/docs/api/api_campaigns/).\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipient objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `trigger_properties` | Optional | Object | Personalization key-value pairs for all users in this send. See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |\n\n## Response\n\n### Example success response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-API-KEY-HERE\n{\n{\n    \"dispatch_id\": \"dispatch_identifier\",\n    \"schedule_id\": \"schedule_identifier\",\n    \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "Schedule API Triggered Canvases",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"canvas_id\": \"canvas_identifier\",\n  \"recipients\": [\n    {\n      \"user_alias\": \"example_alias\",\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": \"\",\n      \"canvas_entry_properties\": {}\n    }\n  ],\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"broadcast\": false,\n  \"canvas_entry_properties\": {},\n  \"schedule\": {\n    \"time\": \"\",\n    \"in_local_time\": false,\n    \"at_optimal_time\": false\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/canvas/trigger/schedule/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "trigger", "schedule", "create"]
                },
                "description": "> Use this endpoint to schedule Canvas messages (up to 90 days in advance) via API-triggered delivery, allowing you to decide what action should trigger the message to be sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.trigger.schedule.create` permission.\n\nYou can pass in `canvas_entry_properties` that will be templated into the messages sent by the first steps of the Canvas.\n\nNote that to send messages with this endpoint, you must have a [Canvas ID](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier) created when you build a Canvas.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific external_ids, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `recipients` | Optional | Array of recipient objects | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `trigger_properties` | Optional | Object | Personalization key-value pairs for all users in this send. See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). |\n| `schedule` | Required | Schedule object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |"
              },
              "response": []
            },
            {
              "name": "Update Scheduled Messages",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T20:30:36Z\"\n   },\n  \"messages\": {\n    \"apple_push\": {\n      \"alert\": \"Updated Message!\",\n      \"badge\": 1\n    },\n    \"android_push\": {\n      \"title\": \"Updated title!\",\n      \"alert\": \"Updated message!\"\n    },\n    \"sms\": {  \n      \"subscription_group_id\": \"subscription_group_identifier\",\n      \"message_variation_id\": \"message_variation_identifier\",\n      \"body\": \"This is my SMS body.\",\n      \"app_id\": \"app_identifier\"\n    }\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/messages/schedule/update",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "schedule", "update"]
                },
                "description": "> Use this endpoint to update scheduled messages. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.schedule.update` permission.\n\nThis endpoint accepts updates to either the `schedule` or `messages` parameter or both. Your request must contain at least one of those two keys.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `schedule_id` | Required | String | The `schedule_id` to update (obtained from the response to create schedule). |\n| `schedule` | Optional | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |\n| `messages` | Optional | Object | See available [message objects](https://www.braze.com/docs/api/objects_filters/#messaging-objects). |"
              },
              "response": []
            },
            {
              "name": "Update Scheduled API Triggered Campaigns",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"campaign_id\": \"campaign_identifier\",\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T21:30:00Z\",\n    \"in_local_time\": true\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/trigger/schedule/update",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "trigger", "schedule", "update"]
                },
                "description": "> Use this endpoint to update scheduled API-triggered campaigns created in the dashboard, allowing you to decide what action should trigger the message to be sent. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.trigger.schedule.update` permission.\n\nYou can pass in `trigger_properties` that will be templated into the message itself.\n\nNote that to send messages with this endpoint, you must have a campaign ID, created when you build an [API-triggered campaign](https://www.braze.com/docs/api/api_campaigns/).\n\nAny schedule will completely overwrite the one that you provided in the create schedule request or in previous update schedule requests. For example, if you originally provide `\"schedule\" : {\"time\" : \"2015-02-20T13:14:47\", \"in_local_time\" : true}` and then in your update you provide `\"schedule\" : {\"time\" : \"2015-02-20T14:14:47\"}`, your message will now be sent at the provided time in UTC, not in the user's local time. Scheduled triggers that are updated very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second changes could be applied to all, some, or none of your targeted users.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) |\n| `schedule_id` | Optional | String | The `schedule_id` to update (obtained from the response to create schedule). |\n| `schedule` | Required | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |"
              },
              "response": []
            },
            {
              "name": "Update Scheduled API Triggered Canvases",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"canvas_id\": \"canvas_identifier\",\n  \"schedule_id\": \"schedule_identifier\",\n  \"schedule\": {\n    \"time\": \"2017-05-24T21:30:00Z\",\n    \"in_local_time\": true\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/canvas/trigger/schedule/update",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "trigger", "schedule", "update"]
                },
                "description": "> Use this endpoint to update scheduled API-triggered Canvases that were created in the dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.trigger.schedule.update` permission.\n\nThis allows you to decide what action should trigger the message to be sent. You can pass in `trigger_properties` that will be templated into the message itself.\n\nNote that to send messages with this endpoint, you must have a Canvas ID, created when you build a [Canvas](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier).\n\nAny schedule will completely overwrite the one that you provided in the create schedule request or in previous update schedule requests. For example, if you originally provide `\"schedule\" : {\"time\" : \"2015-02-20T13:14:47\", \"in_local_time\" : true}` and then in your update you provide `\"schedule\" : {\"time\" : \"2015-02-20T14:14:47\"}`, your message will now be sent at the provided time in UTC, not in the user's local time. Scheduled triggers that are updated very close to or during the time they were supposed to be sent will be updated with best efforts, so last-second changes could be applied to all, some, or none of your targeted users.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `schedule_id` | Optional | String | The `schedule_id` to update (obtained from the response to create schedule). |\n| `schedule` | Required | Object | See [schedule object](https://www.braze.com/docs/api/objects_filters/schedule_object/). |"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Send Messages",
          "item": [
            {
              "name": "Create Send IDs For Message Send Tracking",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\"\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/sends/id/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["sends", "id", "create"]
                },
                "description": "> Use this endpoint to create send IDs that can be used to send messages and track message performance programatically, without campaign creation for each send. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `sends.id.create` permission.\n\nUsing the send identifier to track and send messages is useful if you are planning to programmatically generate and send content.\n\n## Rate limit\n\nThe daily maximum number of custom send identifiers that can be created via this endpoint is 100 for a given app group. Each `send_id` and `campaign_id` combination that you create will count towards your daily limit. The response headers for any valid request include the current rate limit status, see [API rate limits](https://www.braze.com/docs/api/api_limits/) for details.\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier]({{site.baseurl}}/api/identifier_types/). |\n| `send_id` | Optional | String | See [send identifier]({{site.baseurl}}/api/identifier_types/). |\n\n## Response\n\n### Example success response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"message\": \"success\",\n  \"send_id\" : (string) the send identifier\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "Send Messages Immediately via API Only",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"broadcast\": \"false\",\n  \"external_user_ids\": \"external_user_identifiers\",\n  \"user_aliases\": {\n    \"alias_name\": \"example_name\",\n    \"alias_label\": \"example_label\"\n  },\n  \"segment_id\": \"segment_identifier\",\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"override_frequency_capping\": \"false\",\n  \"recipient_subscription_state\": \"all\",\n  \"messages\": {\n    \"android_push\": \"(optional, Android Push Object)\",\n    \"apple_push\": \"(optional, Apple Push Object)\",\n    \"content_card\": \"(optional, Content Card Object)\",\n    \"email\": \"(optional, Email Object)\",\n    \"kindle_push\": \"(optional, Kindle/FireOS Push Object)\",\n    \"web_push\": \"(optional, Web Push Object)\",\n    \"windows_phone8_push\": \"(optional, Windows Phone 8 Push Object)\",\n    \"windows_universal_push\": \"(optional, Windows Universal Push Object)\"\n  }\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/messages/send",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["messages", "send"]
                },
                "description": "> Use this endpoint to send immediate, ad-hoc messages to designated users via the Braze API. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `messages.send` permission.\n\nBe sure to include Messaging Objects in your body to complete your requests.\n\nIf you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/).\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your messages to a larger than expected audience. |\n| `external_user_ids` | Optional | Array of strings | See [external user ID](https://www.braze.com/docs/api/parameters/#external-user-id). |\n| `user_aliases` | Optional | Array of user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n| `segment_id` | Optional | String | See [segment identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `campaign_id` | Optional\\* | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/) for more information.  <br>  <br>\\*Required if you wish to track campaign stats (e.g. sends, clicks, bounces, etc) on the Braze dashboard. |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/) |\n| `override_frequency_capping` | Optional | Boolean | Ignore \\`frequency_capping\\` for campaigns, defaults to false. |\n| `recipient_subscription_state` | Optional | String | Use this to send messages to only users who have opted in (`opted_in`), only users who have subscribed or are opted in (`subscribed`) or to all users, including unsubscribed users (`all`).  <br>  <br>Using `all` users is useful for transactional email messaging. Defaults to `subscribed`. |\n| `messages` | Optional | Messaging objects | See available [messaging objects](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_messages/#available-messaging-objects). |\n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the id of the message dispatch (unique id for each ‘transmission’ sent from the Braze platform). For more, information refer to [Dispatch ID behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/)."
              },
              "response": []
            },
            {
              "name": "Send Transactional Email via API Triggered Delivery",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"external_send_id\" : YOUR_BASE64_COMPATIBLE_ID,\n    \"trigger_properties\": {\n        \"example_string_property\": YOUR_EXAMPLE_STRING,\n        \"example_integer_property\": YOUR_EXAMPLE_INTEGER\n    },\n    \"recipient\": [\n        {\n        \"external_user_id\": TARGETED_USER_ID_STRING\n        }\n    ]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/transactional/v1/campaigns/{campaign_id}/send",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": [
                    "transactional",
                    "v1",
                    "campaigns",
                    "{campaign_id}",
                    "send"
                  ]
                },
                "description": "> Use this endpoint to send immediate, ad-hoc transactional messages to a designated user. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `transactional.send` permission.\n\nThis endpoint is used alongside the creation of a [Transactional Email campaign](https://www.braze.com/docs/api/api_campaigns/transactional_campaigns) and corresponding campaign ID.\n\n> **Important:** Transactional Email is currently available as part of select Braze packages. Reach out to your Braze customer success manager for more details. \n  \n\nSimilar to the [Send triggered campaign endpoint](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_campaigns/), this campaign type allows you to house message content inside of the Braze dashboard while dictating when and to whom a message is sent via your API. Unlike the Send triggered campaign endpoint, which accepts an audience or segment to send messages to, a request to this endpoint must specify a single user either by `external_user_id` or `user_alias`, as this campaign type is purpose-built for 1:1 messaging of alerts like order confirmations or password resets.\n\n## Rate limit\n\nTransactional Emails are not subject to a rate limit. Depending on your chosen package, a set number of Transactional Emails is covered per hour by SLA. Requests that exceed that rate will still send, but are not covered by SLA. 99.9% of emails will send in less than one minute.\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | ID of the campaign |\n\n## Request Parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_send_id` | Optional | String | A Base64 compatible string. Validated against the following regex `/^[a-zA-Z0-9-_+\\/=]+$/`. This optional field allows you to pass an internal identifier for this particular send which will be included in events sent from the Transactional HTTP event postback. When passed, this identifier will also be used as a deduplication key, which Braze will store for 24 hours. Passing the same identifier in another request will not result in a new instance of a send by Braze for 24 hours. |\n| `trigger_properties` | Optional | Object | See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). Personalization key-value pairs that will apply to the user in this request. |\n| `recipients` | Required | Object | The user you are targeting this message to. Can contain `attributes` and a single `external_user_id` or `user_alias`.  <br>  <br>Note that if you provide an external user ID that doesn’t already exist in Braze, passing any fields to the `attributes` object will create this user profile in Braze and send this message to the newly created user.  <br>  <br>If you send multiple requests to the same user with different data in the `attributes` object, Braze will ensure that `first_name`, `last_name`, and `email` attributes will be updated synchronously and templated into your message. Custom attributes don’t have this same protection, so proceed with caution when updating a user through this API and passing different custom attribute values in quick succession. |\n\n## Response\n\nThe send transactional email endpoint will respond with the message’s `dispatch_id` which represents the instance of this message send. This identifier can be used along with events from the Transactional HTTP event postback to trace the status of an individual email sent to a single user.\n\n### Example response\n\n``` json\n{\n    \"dispatch_id\": Out-of-the-box generated Unique ID of the instance of this send\n    \"status\": Current status of the message\n    \"metadata\": Object containing additional information about the send instance\n}\n\n```\n\n## Troubleshooting\n\nThe endpoint may also return an error code and a human-readable message in some cases, most of which are validation errors. Here are some common errors you may get when making invalid requests.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `The campaign is not a transactional campaign. Only transactional campaigns may use this endpoint` | The campaign ID provided is not for a transactional campaign. |\n| `The external reference has been queued. Please retry to obtain send_id.` | The external_send_id has been created recently, try a new external_send_id if you are intending to send a new message. |\n| `Campaign does not exist` | The campaign ID provided does not correspond to an existing campaign. |\n| `The campaign is archived. Unarchive the campaign to ensure trigger requests will take effect.` | The campaign ID provided corresponds to an archived campaign. |\n| `The campaign is paused. Resume the campaign to ensure trigger requests will take effect.` | The campaign ID provided corresponds to a paused campaign. |\n| `campaign_id must be a string of the campaign api identifier` | The campaign ID provided is not a valid format. |\n| `Error authenticating credentials` | The API key provided is invalid |\n| `Invalid whitelisted IPs` | The IP address sending the request is not on the IP whitelist (if it is being utilized) |\n| `You do not have permission to access this resource` | The API key used does not have permission to take this action |\n\nMost endpoints at Braze have a rate limit implementation that will return a 429 response code if you have made too many requests. The transactional sending endpoint works differently -- if you exceed your allotted rate limit, our system will continue to ingest the API calls, return success codes, and send the messages, however those messages may not be subject to the contractual SLA for the feature. Please reach out if you need more information about this functionality.\n\n## Transactional HTTP Event Postback\n\nAll transactional emails are complemented with event status postbacks sent as an HTTP request back to your specified URL. This will allow you to evaluate the message status in real-time and take action to reach the user on another channel if the message goes undelivered, or fallback to an internal system if Braze is experiencing latency.\n\nIn order to associate the incoming events to a particular instance of send, you can choose to either capture and store the Braze `dispatch_id` returned in the [API response](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_transactional_message/#example-response), or pass your own identifier to the `external_send_id` field. An example of a value you may choose to pass to that field may be an order ID, where after completing order 1234, an order confirmation message is triggered to the user through Braze, and `external_send_id : 1234` is included in the request. All following event postbacks such as `Sent` and `Delivered` will include `external_send_id : 1234` in the payload allowing you to confirm that user successfully received their order confirmation email.\n\nTo get started using the Transactional HTTP Event Postback, navigate to **Settings** > **Workspace Settings** > **Email Preferences**. in your Braze dashboard and input your desired URL to receive postbacks.\n\nNote: If you are using our [older navigation](https://www.braze.com/docs/navigation), **Email Preferences** can be found at ****Manage Settings** > **Email Settings****.\n\n### Postback body\n\n``` json\n// Sent Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"sent\",\n    \"metadata\": {\n      \"received_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"enqueued_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"executed_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"sent_at\": \"2020-08-31T18:58:42.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Processed Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"processed\",\n    \"metadata\": {\n      \"processed_at\": \"2020-08-31T18:58:42.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Aborted\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"aborted\",\n    \"metadata\": {\n      \"reason\": \"User not emailable\",\n      \"aborted_at\": \"2020-08-31T19:04:51.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Delivered Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"delivered\",\n    \"metadata\": {\n      \"delivered_at\": \"2020-08-31T18:27:32.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Bounced Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"bounced\",\n    \"metadata\": {\n      \"bounced_at\": \"2020-08-31T18:58:43.000+00:00\",\n      \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n\n```\n\n#### Message status\n\n| **Status** | **Description** |\n| --- | --- |\n| `sent` | Message successfully dispatched to Braze’s email sending partner |\n| `processed` | Email sending partner has successfully received and prepared the message for sending to the user’s inbox provider |\n| `aborted` | Braze was unable to successfully dispatch the message due to the user not having an emailable address, or Liquid abort logic was called in the message body. All aborted events include a reason field within the metadata object indicating why the message was aborted |\n| `delivered` | Message was accepted by the user’s email inbox provider |\n| `bounced` | Message was rejected by the user’s email inbox provider. All bounced events include a reason field within the metadata object reflecting the bounce error code provided by the inbox provider |\n\n### Example postback\n\n``` json\n// Sent Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"sent\",\n    \"metadata\": {\n      \"received_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"enqueued_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"executed_at\": \"2020-08-31T18:58:41.000+00:00\",\n      \"sent_at\": \"2020-08-31T18:58:42.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Processed Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"processed\",\n    \"metadata\": {\n      \"processed_at\": \"2020-08-31T18:58:42.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Aborted\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"aborted\",\n    \"metadata\": {\n      \"reason\": \"User not emailable\",\n      \"aborted_at\": \"2020-08-31T19:04:51.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Delivered Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"delivered\",\n    \"metadata\": {\n      \"delivered_at\": \"2020-08-31T18:27:32.000+00:00\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n// Bounced Event\n{\n    \"dispatch_id\": \"acf471119f7449d579e8089032003ded\",\n    \"status\": \"bounced\",\n    \"metadata\": {\n      \"bounced_at\": \"2020-08-31T18:58:43.000+00:00\",\n      \"reason\": \"550 5.1.1 The email account that you tried to reach does not exist\",\n      \"campaign_api_id\": \"417220e4-5a2a-b634-7f7d-9ec891532368\",\n      \"external_send_id\" : \"34a2ceb3cf6184132f3d816e9984269a\"\n    }\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "Send Campaign Messages via API Triggered Delivery",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"campaign_id\": \"campaign_identifier\",\n  \"send_id\": \"send_identifier\",\n  \"trigger_properties\": \"\",\n  \"broadcast\": false,\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"recipients\": [\n    {\n      \"user_alias\": {\n        \"alias_name\" : \"example_name\",\n        \"alias_label\" : \"example_label\"\n      },\n      \"external_user_id\": \"external_user_identifier\",\n      \"trigger_properties\": \"\",\n      \"send_to_existing_only\": true,\n      \"attributes\": {\n        \"first_name\" : \"Alex\"\n      }\n    }\n  ]\n}\n"
                },
                "url": {
                  "raw": "https://{{instance_url}}/campaigns/trigger/send",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["campaigns", "trigger", "send"]
                },
                "description": "> Use this endpoint to send immediate, ad-hoc messages to designated users via API-triggered delivery. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `campaigns.trigger.send` permission.\n\nAPI-triggered delivery allows you to house message content inside of the Braze dashboard while dictating when a message is sent, and to whom via your API.\n\nIf you are targeting a segment, a record of your request will be stored in the [Developer Console](https://dashboard.braze.com/app_settings/developer_console/activitylog/). Note that to send messages with this endpoint, you must have a [campaign ID](https://www.braze.com/docs/api/identifier_types/) created when you build an [API-triggered campaign](https://www.braze.com/docs/api/api_campaigns/).\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `campaign_id` | Required | String | See [campaign identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `send_id` | Optional | String | See [send identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `trigger_properties` | Optional | Object | See [trigger properties](https://www.braze.com/docs/api/objects_filters/trigger_properties_object/). Personalization key-value pairs that will apply to all users in this request. |\n| `broadcast` | Optional | Boolean | See [broadcast](https://www.braze.com/docs/api/parameters/#broadcast). This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `recipients` is omitted, `broadcast` must be set to true. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your campaign to a larger than expected audience. |\n| `audience` | Optional | Connected audience object | See [connected audience](https://www.braze.com/docs/api/objects_filters/connected_audience/). |\n| `recipients` | Optional | Array | See [recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). If not provided and `broadcast` is set to true, the message will send to the entire segment targeted by the campaign. |\n\nThe recipients array may contain up to 50 objects, with each object containing a single `external_user_id` string and `trigger_properties` object.\n\nWhen `send_to_existing_only` is `true`, Braze will only send the message to existing users. When `send_to_existing_only` is `false` and a user with the given `id` does not exist, Braze will create a user with that id and attributes before sending the message.\n\n> Important: A user’s subscription group status can be updated via the inclusion of a subscription_groups parameter within the attributes object. This is currently in early access. Contact your Braze customer success manager if you’re interested in participating in the early access. More details can be found in the [User attributes object](https://www.braze.com/docs/api/objects_filters/user_attributes_object). \n  \n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the ID of the message dispatch, a unique ID for each transmission sent from the Braze platform. When using this endpoint, you receive a single `dispatch_id` for an entire batched set of users. For more information on `dispatch_id` check out out our documentation on [Dispatch ID Behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/).\n\n## Create send endpoint\n\n**Using the attributes object in campaigns**\n\nBraze has a Messaging Object called `Attributes` that will allow you to add, create, or update attributes and values for a user before you send them an API-triggered campaigns using the `campaign/trigger/send` endpoint as this API call will process the User Attributes object before it processes and sends the campaign. This helps minimize the risk of there being issues caused by [race conditions](https://www.braze.com/docs/help/best_practices/race_conditions/).\n\n> **Important:** Looking for the Canvas version of this endpoint? Check out [Sending Canvas messages via API-triggered delivery](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_canvases/#create-send-endpoint)."
              },
              "response": []
            },
            {
              "name": "Send Canvas Messages via API Triggered Delivery",
              "request": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"canvas_id\": \"canvas_identifier\",\n  \"canvas_entry_properties\": {\"product_name\" : \"shoes\", \"product_price\" : 79.99},\n  \"broadcast\": false,\n  \"audience\": {\n    \"AND\": [\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"eye_color\",\n          \"comparison\": \"equals\",\n          \"value\": \"blue\"\n        }\n      },\n      {\n        \"custom_attribute\": {\n          \"custom_attribute_name\": \"favorite_foods\",\n          \"comparison\": \"includes_value\",\n          \"value\": \"pizza\"\n        }\n      },\n      {\n        \"OR\": [\n          {\n            \"custom_attribute\": {\n              \"custom_attribute_name\": \"last_purchase_time\",\n              \"comparison\": \"less_than_x_days_ago\",\n              \"value\": 2\n            }\n          },\n          {\n            \"push_subscription_status\": {\n              \"comparison\": \"is\",\n              \"value\": \"opted_in\"\n            }\n          }\n        ]\n      },\n      {\n        \"email_subscription_status\": {\n          \"comparison\": \"is_not\",\n          \"value\": \"subscribed\"\n        }\n      },\n      {\n        \"last_used_app\": {\n          \"comparison\": \"after\",\n          \"value\": \"2019-07-22T13:17:55+0000\"\n        }\n      }\n    ]\n  },\n  \"recipients\": [\n    {\n      \"user_alias\": {\n        \"alias_name\" : \"example_name\",\n        \"alias_label\" : \"example_label\"\n      },\n      \"external_user_id\": \"user_identifier\",\n      \"trigger_properties\": \"\",\n      \"canvas_entry_properties\": \"\",\n      \"send_to_existing_only\": true,\n      \"attributes\": {\n          \"first_name\" : \"Alex\"\n      }\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/canvas/trigger/send",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["canvas", "trigger", "send"]
                },
                "description": "> Use this endpoint to send Canvas messages via API-triggered delivery. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `canvas.trigger.send` permission.\n\nAPI-triggered delivery allows you to house message content inside of the Braze dashboard while dictating when a message is sent, and to whom via your API.\n\nNote that to send messages with this endpoint, you must have a [Canvas ID](https://www.braze.com/docs/api/identifier_types/#canvas-api-identifier) created when you build a Canvas.\n\n## Rate limit\n\nWhen specifying a segment or Connected Audience in your request, we apply a rate limit of 250 requests per minute to this endpoint. Otherwise, if specifying an `external_id`, this endpoint has a default rate limit of 250,000 requests per hour, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\nBraze endpoints support [batching API requests](https://www.braze.com/docs/api/api_limits/#batching-api-requests). A single request to the messaging endpoints can reach any of the following:\n\n- Up to 50 specific `external_ids`, each with individual message parameters\n- A segment of any size created in the Braze dashboard, specified by its `segment_id`\n- An ad-hoc audience segment of any size, defined in the request as a [Connected Audience](https://www.braze.com/docs/api/objects_filters/connected_audience/) object\n    \n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `canvas_id` | Required | String | See [Canvas identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `canvas_entry_properties` | Optional | Object | See [Canvas entry properties](https://www.braze.com/docs/api/objects_filters/canvas_entry_properties_object/). Personalization key-value pairs that will apply to all users in this request. The Canvas entry properties object has a maximum size limit of 50 KB. |\n| `broadcast` | Optional | Boolean | You must set `broadcast` to true when sending a message to an entire segment that a campaign or Canvas targets. This parameter defaults to false (as of August 31, 2017).  <br>  <br>If `broadcast` is set to true, a recipients list cannot be included. However, use caution when setting `broadcast: true`, as unintentionally setting this flag may cause you to send your message to a larger than expected audience. |\n| `audience` | Optional | Connected audience object | See [Connected audience](https://braze.com/docs/api/objects_filters/connected_audience/). |\n| `recipients` | Optional | Array | See [Recipients object](https://www.braze.com/docs/api/objects_filters/recipient_object/). If not provided and `broadcast` is set to true, the message will send to the entire segment targeted by the Canvas.  <br>  <br>The `recipients` array may contain up to 50 objects, with each object containing a single `external_user_id` string and `canvas_entry_properties` object. Either `external_user_id` or user_alias is required for this call. Requests must specify only one.  <br>  <br>When `send_to_existing_only` is true, Braze will only send the message to existing users—however this flag can’t be used with user aliases. When `send_to_existing_only` is `false` and a user with the given `id` does not exist, Braze will create a user with that ID and attributes before sending the message. |\n\nCustomers using the API for server-to-server calls may need to whitelist the appropriate API URL if they’re behind a firewall.\n\n> **Note:** If you include both specific users in your API call and a target segment in the dashboard, the message will send to specifically the user profiles that are in the API call and qualify for the segment filters. \n  \n\n## Response details\n\nMessage sending endpoint responses will include the message’s `dispatch_id` for reference back to the dispatch of the message. The `dispatch_id` is the ID of the message dispatch (unique ID for each “transmission” sent from the Braze platform). Check out [Dispatch ID behavior](https://www.braze.com/docs/help/help_articles/data/dispatch_id/) for more information.\n\n## Create send endpoint\n\n**Using the Attributes Object in Canvas**\n\nBraze has a Messaging Object called `Attributes` that allows you to add, create, or update attributes and values for a user before sending them an API-Triggered Canvas using the `canvas/trigger/send` endpoint as this API call will process the User Attributes object before it processes and sends the Canvas. This helps minimize the risk of there being issues caused by [race conditions](https://www.braze.com/docs/help/best_practices/race_conditions/).\n\n> **Important:** Looking for the camaigns version of this endpoint? Check out [Sending campaign messages via API-triggered delivery](https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_triggered_campaigns/)."
              },
              "response": []
            }
          ]
        }
      ],
      "description": "The Braze messaging API provides you with two distinct options for sending messages to your users. You can provide the message contents and configuration in the API request with the /messages/send and /messages/schedule endpoints. Alternatively, you can manage the details of your message with an API-Triggered Delivery campaign in the dashboard and just control when and to whom it is sent with the campaigns/trigger/send and campaigns/trigger/schedule endpoints. The following sections will detail the request specification for both methods.\n\nThe examples below contain the URL https://rest.iad-01.braze.com, but some customers will need to use a different endpoint URL, for example if you are hosted in Braze’s EU data center or have a dedicated Braze installation. Your Success Manager will inform you if you should use a different endpoint URL.\n\nSimilarly to other campaigns, you can limit the number of times a particular user can receive a Messaging API campaign by configuring re-eligibility settings in the Braze Dashboard. Braze will not deliver API messages to users that haven’t become re-eligible for the campaign regardless of how many API requests are sent.\n\n"
    },
    {
      "name": "Preference Center",
      "item": [
        {
          "name": "Generate Preference Center URL",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/preference_center_v1/{PreferenceCenterExternalID}/url/{UserID}?preference_center_api_id={{preference_center_api_id}}&external_id={{external_id}}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": [
                "preference_center_v1",
                "{PreferenceCenterExternalID}",
                "url",
                "{UserID}"
              ],
              "query": [
                {
                  "key": "preference_center_api_id",
                  "value": "{{preference_center_api_id}}"
                },
                {
                  "key": "external_id",
                  "value": "{{external_id}}",
                  "description": "(Required) String"
                }
              ]
            },
            "description": "> Use this endpoint to generate a URL for a preference center. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `preference_center.user.get` permission.\n\nEach preference center URL is unique to each user.\n\n## Rate limit\n\nThis endpoint has a rate limit of 1,000 requests per minute, per workspace.\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `preferenceCenterExternalID` | Required | String | The ID for your preference center. |\n| `userID` | Required | String | The user ID. |\n\n## Example request\n\n```\ncurl --location --request GET 'https://rest.iad-01.braze.com/preference_center/v1/$preference_center_external_id/url/$user_external_id' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE'\n\n```\n\n## Response\n\n``` json\n{\n  \"preference_center_url\": \"https://www.example.com/preferences\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "List Preference Centers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/preference_center/v1/list",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["preference_center", "v1", "list"]
            },
            "description": "> Use this endpoint to list your available preference centers. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `preference_center.list` permission.\n\n## Rate limit\n\nThis endpoint has a rate limit of 1,000 requests per minute, per workspace.\n\n## Path and request parameters\n\nThere are no path or request parameters for this endpoint.\n\n## Example request\n\n```\ncurl --location -g --request GET https://rest.iad-01.braze.com/preference_center/v1/list \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\n``` json\n{\n  \"preference_centers\": [\n    {\n      \"name\": \"My Preference Center 1\",\n      \"preference_center_api_id\": \"preference_center_api_id\",\n      \"created_at\": \"2022-08-17T15:46:10Z\",\n      \"updated_at\": \"2022-08-17T15:46:10Z\"\n    },\n    {\n      \"name\": \"My Preference Center 2\",\n      \"preference_center_api_id\": \"preference_center_api_id\",\n      \"created_at\": \"2022-08-19T11:13:06Z\",\n      \"updated_at\": \"2022-08-19T11:13:06Z\"\n    },\n    {\n      \"name\": \"My Preference Center 3\",\n      \"preference_center_api_id\": \"preference_center_api_id\",\n      \"created_at\": \"2022-08-19T11:30:50Z\",\n      \"updated_at\": \"2022-08-19T11:30:50Z\"\n    },\n    {\n      \"name\": \"My Preference Center 4\",\n      \"preference_center_api_id\": \"preference_center_api_id\",\n      \"created_at\": \"2022-09-13T20:41:34Z\",\n      \"updated_at\": \"2022-09-13T20:41:34Z\"\n    }\n  ]\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "View Details for Preference Center",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/preference_center/v1/{PreferenceCenterExternalID}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": [
                "preference_center",
                "v1",
                "{PreferenceCenterExternalID}"
              ]
            },
            "description": "> Use this endpoint to view the details for your preference centers, including when it was created and updated. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `preference_center.get` permission.\n\n## Rate limit\n\nThis endpoint has a rate limit of 1,000 requests per minute, per workspace.\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `preferenceCenterExternalID` | Required | String | The ID for your preference center. |\n\n## Request parameters\n\nThere are no request parameters for this endpoint.\n\n## Example request\n\n```\ncurl --location -g --request GET https://rest.iad-01.braze.com/preference_center/v1/preference_center_external_id \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY'\n\n```\n\n## Response\n\n``` json\n{\n  \"name\": \"My Preference Center\",\n  \"preference_center_api_id\": \"preference_center_api_id\",\n  \"created_at\": \"example_time_created\",\n  \"updated_at\": \"example_time_updated\",\n  \"preference_center_title\": \"Example preference center title\",\n  \"preference_center_page_html\": \"HTML for preference center here\",\n  \"confirmation_page_html\": \"HTML for confirmation page here\",\n  \"redirect_page_html\": null,\n  \"preference_center_options\": {\n    \"meta-viewport-content\": \"width=device-width, initial-scale=2\"\n  },\n  \"state\": \"active\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Create Preference Center",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"string\",\n  \"preference_center_title\": \"string\",\n  \"preference_center_page_html\": \"string\",\n  \"confirmation_page_html\": \"string\",\n  \"state\": (optional) Choose `active` or `draft`. Defaults to `active` if not specified,\n  \"options\": {\n    \"meta-viewport-content\": \"string\", (optional) Only the `content` value of the meta tag\n  }\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/preference_center/v1",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["preference_center", "v1"]
            },
            "description": "> Use this endpoint to create a preference center to allow users to manage their notification preferences for email campaigns. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `preference_center.update` permission.\n\nCheck out [Creating a preference center via API](https://www.braze.com/docs/user_guide/message_building_by_channel/email/preference_center/) for details on how to include this in your email campaigns.\n\n## Rate limit\n\nThis endpoint has a rate limit of 10 requests per minute, per workspace.\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `name` | Required | String | The name of the preference center that meets the following requirements:  <br>\\- Only contains letters, numbers, hyphens, and underscores  <br>\\- Does not have spaces |\n| `preference_center_title` | Optional | String | The title for the preference center and confirmation pages. If a title is not specified, the title of the pages will default to \"Preference Center\". |\n| `preference_center_page_html` | Required | String | The HTML for the preference center page. |\n| `confirmation_page_html` | Required | String | The HTML for the confirmation page. |\n| `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |\n| `options` | Optional | Object | Attributes: `meta-viewport-content`. When present, a `viewport` meta tag will be added to the page with `content=` . |\n\n> **Note:** The preference center name can't be edited once created. \n  \n\n### Liquid tags\n\nRefer to the following Liquid tags that can be included in your HTML to generate a user's subscription state on the preference center page.\n\n#### User subscription state\n\n| Liquid | Description |\n| --- | --- |\n| `{{subscribed_state.${email_global}}}` | Get the global email subscribed state for the user (i.e., \"opted_in\", \"subscribed\", or \"unsubscribed\". |\n| `{{subscribed_state.${}}}` | Get the subscribed state of the specified subscription group for the user (i.e., \"subscribed\" or \"unsubscribed\"). |\n\n#### Form inputs and action\n\n| Liquid | Description |\n| --- | --- |\n| `{% form_field_name :email_global_state %}` | Indicates that a specific form input element corresponds to the user's global email subscribed state. The user's selection state should be \"opted_in\", \"subscribed\", or \"unsubscribed\" when the form is submitted with selection data for the global email subscribed state. If it's a checkbox, the user will either be \"opted_in\" or \"unsubscribed\". For a hidden input, the \"subscribed\" state will also be valid. |\n| `{% form_field_name :subscription_group %}` | Indicates that a specific form input element corresponds to a given subscription group. The user's selection state should be either \"subscribed\" or \"unsubscribed\" when the form is submitted with selection data for a specific subscription group. |\n| `{{preference_center_submit_url}}` | Generates URL for form submission. |\n\n## Example response\n\n```\n{\n  \"preference_center_api_id\": \"preference_center_api_id_example\",\n  \"liquid_tag\": \"{{preference_center.${MyPreferenceCenter2022-09-22}}}\",\n  \"created_at\": \"2022-09-22T18:28:07+00:00\",\n  \"message\": \"success\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Update Preference Center",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"preference_center_name\",\n  \"preference_center_title\": \"string\",\n  \"preference_center_page_html\": \"string\",\n  \"confirmation_page_html\": \"string\",\n  \"options\": {\n    \"meta-viewport-content\": \"string\", (optional) Only the `content` value of the meta tag\n  }\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/preference_center/v1/{PreferenceCenterExternalID}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": [
                "preference_center",
                "v1",
                "{PreferenceCenterExternalID}"
              ]
            },
            "description": "> Use this endpoint to update a preference center. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `preference_center.update` permission.\n\n## Rate limit\n\nThis endpoint has a rate limit of 10 requests per minute, per workspace.\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `preferenceCenterExternalID` | Required | String | The ID for your preference center. |\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `preference_center_page_html` | Required | String | The HTML for the preference center page. |\n| `preference_center_title` | Optional | String | The title for the preference center and confirmation pages. If a title is not specified, the title of the pages will default to \"Preference Center\". |\n| `confirmation_page_html` | Required | String | The HTML for the confirmation page. |\n| `state` | Optional | String | Choose `active` or `draft`. |\n| `options` | Optional | Object | Attributes: `meta-viewport-content`. When present, a `viewport` meta tag will be added to the page with `content=` . |\n\n## Example request\n\n```\ncurl --location --request POST 'https://rest.iad-01.braze.com/preference_center/v1/{preferenceCenterExternalId}' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE' \\\n--data-raw '{\n  \"name\": \"Example\",\n  \"preference_center_title\": \"Example Preference Center Title\",\n  \"preference_center_page_html\": \"HTML for preference center here\",\n  \"confirmation_page_html\": \"HTML here with a message to users here\",\n  \"state\": \"active\"\n}\n'\n\n```\n\n## Example response\n\n```\n{\n  \"preference_center_api_id\": \"8efc52aa-935e-42b7-bd6b-98f43bb9b0f1\",\n  \"created_at\": \"2022-09-22T18:28:07Z\",\n  \"updated_at\": \"2022-09-22T18:32:07Z\",\n  \"message\": \"success\"\n}\n\n```"
          },
          "response": []
        }
      ]
    },
    {
      "name": "SCIM",
      "item": [
        {
          "name": "Remove Dashboard User Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "X-Request-Origin",
                "value": "YOUR-REQUEST-ORIGIN-HERE",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR-SCIM-TOKEN-HERE",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/scim/v2/Users/{id}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["scim", "v2", "Users", "{id}"]
            },
            "description": "> This endpoint allows you to permanently delete an existing dashboard user by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method.  \n \n  \n\nThis is similar to deleting a user in the **Manage Users** section of the Braze dashboard. For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data type | Description |\n| --- | --- | --- | --- |\n| `id` | Required | String | The user’s resource ID. This parameter is returned by the `POST` `/scim/v2/Users/` or `GET` `/scim/v2/Users?filter=userName eq \"[user@test.com](mailto:user@test.com)\"` methods. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Response\n\n### Example error response\n\n``` json\nHTTP/1.1 204 Not Found\nContent-Type: text/html; charset=UTF-8\n\n```\n\nIf a developer with this ID doesn’t exist in Braze, the endpoint will respond with:\n\n``` json\nHTTP/1.1 404 Not Found Content-Type: text/html; charset=UTF-8\n{ \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"], \"detail\": \"User not found\", \"status\": 404 }\n\n```"
          },
          "response": []
        },
        {
          "name": "Search Existing Dashboard User by Email",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "X-Request-Origin",
                "value": "YOUR-REQUEST-ORIGIN-HERE",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR-SCIM-TOKEN-HERE",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/scim/v2/Users?filter={userName@example.com}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["scim", "v2", "Users"],
              "query": [{ "key": "filter", "value": "{userName@example.com}" }]
            },
            "description": "> This endpoint allows you to look up an existing dashboard user account by specifying their email in the filter query parameter.  \n \n  \n\nNote that when the query parameter is URL encoded it will read like this:\n\n`/scim/v2/Users?filter=userName eq \"user@test.com\"`\n\nFor information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `userName@example.com` | Required | String | The user's email. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Response\n\n``` json\nContent-Type: application/json\nX-Request-Origin: YOUR-REQUEST-ORIGIN-HERE\nAuthorization: Bearer YOUR-SCIM-TOKEN-HERE\n{\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:ListResponse\"],\n    \"totalResults\": 1,\n    \"Resources\": [\n        {\n            \"userName\": \"user@test.com\",\n            \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n            \"name\": {\n                \"givenName\": \"Test\",\n                \"familyName\": \"User\"\n            },\n            \"department\": \"finance\",\n            \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n            \"permissions\": {\n                \"companyPermissions\": [\"manage_company_settings\"],\n                \"appGroup\": [\n                    {\n                        \"appGroupId\": \"241adcd25789fabcded\",\n                        \"appGroupName\": \"Test App Group\",\n                        \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                        \"team\": [\n                            {\n                                \"teamId\": \"241adcd25789fabcded\",\n                                \"teamName\": \"Test Team\",                  \n                                \"teamPermissions\": [\"admin\"]\n                            }\n                        ]\n                    } \n                ]\n            }\n        }\n    ]\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Look Up an Existing Dashboard User Account",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "X-Request-Origin",
                "value": "YOUR-REQUEST-ORIGIN-HERE",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR-SCIM-TOKEN-HERE",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/scim/v2/Users/{id}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["scim", "v2", "Users", "{id}"]
            },
            "description": "> This endpoint allows you to look up an existing dashboard user account by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method.  \n \n  \n\nFor information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `id` | Required | String | The user's resource ID. This parameter is returned by the `POST` `/scim/v2/Users/` or `GET` `/scim/v2/Users?filter=userName eq \"user@test.com\"` methods. |\n\n## Request parameters\n\nThere is no request body for this endpoint.\n\n## Response\n\n``` json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"241adcd25789fabcded\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"admin\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Create New Dashboard User Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "X-Request-Origin",
                "value": "YOUR-REQUEST-ORIGIN-HERE",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR-SCIM-TOKEN-HERE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"basic_access\",\"export_user_data\"]\n                    }\n                ]\n            } \n        ]\n    }\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/scim/v2/Users",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["scim", "v2", "Users"]
            },
            "description": "> This endpoint allows you to create a new dashboard user account by specifying email, given and family names, permissions (for setting permissions at the company, app group, and team level).  \n \n  \n\nFor information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` PUT, GET, and DELETE endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data type | Description |\n| --- | --- | --- | --- |\n| `schemas` | Required | Array of strings | Expected SCIM 2.0 schema name for user object. |\n| `userName` | Required | String | The user’s email address. |\n| `name` | Required | JSON object | This object contains the user's given name and family name. |\n| `department` | Required | String | Valid department string from the [department string documentation]({{site.baseurl}}/scim_api_appendix/#department-strings). |\n| `permissions` | Required | JSON object | Permissions object as described in the [permissions object documentation]({{site.baseurl}}/scim_api_appendix/#permissions-object). |\n\n## Response\n\n``` json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"2519dafcdba238ae7\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"basic_access\",\"export_user_data\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n\n```\n\n### Error states\n\nIf a user with this email address already exists in Braze, the endpoint will respond with:\n\n``` json\nHTTP/1.1 409 Conflict\nDate: Tue, 10 Sep 2019 02:22:30 GMT\nContent-Type: text/json;charset=UTF-8\n{\n  \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\n  \"detail\": \"User already exists in the database.\",\n  \"status\": 409\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Update Dashboard User Account",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "X-Request-Origin",
                "value": "YOUR-REQUEST-ORIGIN-HERE",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer YOUR-SCIM-TOKEN-HERE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamName\": \"Test Team\",\n                         \"teamPermissions\": [\"admin\"]\n                    } \n                ]\n            } \n        ]\n   }\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/scim/v2/Users/{id}",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["scim", "v2", "Users", "{id}"]
            },
            "description": "> This endpoint allows you to update an existing dashboard user account by specifying the resource `id` returned by the SCIM [`POST`](https://www.braze.com/docs/scim/post_create_user_account/) method.  \n \n  \n\nIt allows you to update of given and family names, permissions (for setting permissions at the company, app group, and team level) and department. For information on how to obtain a SCIM token, visit [Automated user provisioning](https://www.braze.com/docs/scim/automated_user_provisioning/).\n\nFor security reasons, `userName` (email address) cannot be updated through this endpoint. If you would like to change the `userName` (email address) for a user, contact [Support](https://www.braze.com/docs/support_contact/).\n\n## Rate limit\n\nThis endpoint has a rate limit of 5000 requests per day, per company. This rate limit is shared with the `/scim/v2/Users/` GET, DELETE, and POST endpoints as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Path parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `id` | Required | String | The user's resource ID. This parameter is returned by the `POST` `/scim/v2/Users/` or `GET` `/scim/v2/Users?filter=userName eq \"user@test.com\"` methods. |\n\n## Request parameters\n\n| Parameter | Required | Data type | Description |\n| --- | --- | --- | --- |\n| `schemas` | Required | Array of strings | Expected SCIM 2.0 schema name for user object. |\n| `name` | Required | JSON object | This object contains the user's given name and family name. |\n| `department` | Required | String | Valid department string from the [department string documentation]({{site.baseurl}}/scim_api_appendix/#department-strings). |\n| `permissions` | Required | JSON object | Permissions object as described in the [permissions object documentation]({{site.baseurl}}/scim_api_appendix/#permissions-object). |\n\n## Response\n\n``` json\n{\n    \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\n    \"id\": \"dfa245b7-24195aec-887bb3ad-602b3340\",\n    \"userName\": \"user@test.com\",\n    \"name\": {\n        \"givenName\": \"Test\",\n        \"familyName\": \"User\"\n    },\n    \"department\": \"finance\",\n    \"lastSignInAt\": \"Thursday, January 1, 1970 12:00:00 AM\",\n    \"permissions\": {\n        \"companyPermissions\": [\"manage_company_settings\"],\n        \"appGroup\": [\n            {\n                \"appGroupId\": \"241adcd25789fabcded\",\n                \"appGroupName\": \"Test App Group\",\n                \"appGroupPermissions\": [\"basic_access\",\"send_campaigns_canvases\"],\n                \"team\": [\n                    {\n                         \"teamId\": \"2519dafcdba238ae7\",\n                         \"teamName\": \"Test Team\",                  \n                         \"teamPermissions\": [\"admin\"]\n                    }\n                ]\n            } \n        ]\n    }\n}\n\n```\n\n### Error states\n\nIf a user with this ID doesn’t exist in Braze, the endpoint will respond with:\n\n``` json\nHTTP/1.1 404 Not Found\nContent-Type: text/html; charset=UTF-8\n{\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\n    \"detail\": \"User not found\",\n    \"status\": 404\n}\n\n```"
          },
          "response": []
        }
      ]
    },
    {
      "name": "SMS",
      "item": [
        {
          "name": "Query Invalid Phone Numbers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "https://{{instance_url}}/sms/invalid_phone_numbers?start_date=2018-09-01&end_date=2018-09-01&limit=100&offset=1&phone_numbers=12345678901",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["sms", "invalid_phone_numbers"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2018-09-01",
                  "description": "(Optional*) String in YYYY-MM-DD format \nStart date of the range to retrieve invalid phone numbers, must be earlier than `end_date`. This is treated as midnight in UTC time by the API.\n"
                },
                {
                  "key": "end_date",
                  "value": "2018-09-01",
                  "description": "(Optional*) String in YYYY-MM-DD format \nEnd date of the range to retrieve invalid phone numbers. This is treated as midnight in UTC time by the API.\n"
                },
                {
                  "key": "limit",
                  "value": "100",
                  "description": "(Optional) Integer\nOptional field to limit the number of results returned. Defaults to 100, maximum is 500."
                },
                {
                  "key": "offset",
                  "value": "1",
                  "description": "(Optional) Integer\nOptional beginning point in the list to retrieve from."
                },
                {
                  "key": "phone_numbers",
                  "value": "12345678901",
                  "description": "(Optional*) Array of Strings in e.164 format\nIf provided, we will return the phone number if it has been found to be invalid.\n"
                }
              ]
            },
            "description": "> Use this endpoint to pull a list of phone numbers that have been deemed “invalid” within a certain time frame. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `sms.invalid_phone_numbers` permission.\n\n- If you provide a `start_date`, an `end_date`, and `phone_numbers`, we prioritize the given phone numbers and disregard the date range.\n- If your date range has more than the `limit` number of invalid phone numbers, you will need to make multiple API calls with increasing the `offset` each time until a call returns either fewer than `limit` or zero results.\n    \n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\nEntries are listed in descending order.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"sms\": [\n    {\n      \"phone\": \"12345678900\",\n      \"invalid_detected_at\": \"2016-08-25 15:24:32 +0000\"\n    },\n    {\n      \"phone\": \"12345678901\",\n      \"invalid_detected_at\": \"2016-08-24 17:41:58 +0000\"\n    },\n    {\n      \"phone\": \"12345678902\",\n      \"invalid_detected_at\": \"2016-08-24 12:01:13 +0000\"\n    }\n  ],\n  \"message\": \"success\"\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Remove Invalid Phone Numbers",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_numbers\": [\"12183095514\",\"14255551212\"]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/sms/invalid_phone_numbers/remove",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["sms", "invalid_phone_numbers", "remove"]
            },
            "description": "> Use this endpoint to remove “invalid” phone numbers from Braze’s invalid list. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `sms.invalid_phone_numbers.remove` permission.\n\nThis can be used to re-validate phone numbers after they have been marked as invalid.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `phone_number` | Required | Array of strings in e.164 format | An array of up to 50 phone numbers to modify. |"
          },
          "response": []
        }
      ],
      "description": "Use the Braze SMS Endpoints to manage your users’ phone numbers in your subscription groups."
    },
    {
      "name": "Subscription Groups",
      "item": [
        {
          "name": "Email",
          "item": [
            {
              "name": "List User's  Subscription Group Status - Email",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/subscription/status/get?subscription_group_id={{subscription_group_id}}&external_id={{external_identifier}}&email=example@braze.com",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "status", "get"],
                  "query": [
                    {
                      "key": "subscription_group_id",
                      "value": "{{subscription_group_id}}",
                      "description": "(Required) String\n\nThe `id` of your subscription group."
                    },
                    {
                      "key": "external_id",
                      "value": "{{external_identifier}}",
                      "description": "(Required*) String\n\nThe `external_id` of the user (must include at least one and at most 50 `external_ids`).\n\nWhen both an `external_id` and `email` are submitted, only the external_id(s) provided will be applied to the result query."
                    },
                    {
                      "key": "email",
                      "value": "example@braze.com",
                      "description": "(Required* ) String\n\nThe email address of the user. Can be passed as an array of string with a max of 50."
                    }
                  ]
                },
                "description": "> Use this endpoint to get the subscription state of a user in a subscription group. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.get` permission.\n\nThese groups will be available on the **Subscription Group** page. The response from this endpoint will include the external ID and either subscribed, unsubscribed, or unknown for the specific subscription group requested in the API call. This can be used to update the subscription group state in subsequent API calls or to be displayed on a hosted web page.\n\n\\*Either `external_id` or `email` are required. When both are submitted, only the external_id is used for the query and the email address is applied to that user.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\nAll successful responses will return `subscribed`, `unsubscribed`, or `unknown` depending on status and user history with the subscription group.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"status\": {\n    \"1\": \"Unsubscribed\",\n    \"2\": \"Subscribed\"\n  },\n  \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "List User's Subscription Group - Email",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/subscription/user/status?external_id={{external_id}}&email=example@braze.com&limit=100&offset=0",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "user", "status"],
                  "query": [
                    {
                      "key": "external_id",
                      "value": "{{external_id}}",
                      "description": "(Required) String\n\nThe `external_id` of the user. Must include at least one and at most 50 `external_ids`."
                    },
                    {
                      "key": "email",
                      "value": "example@braze.com",
                      "description": "(Required) String\n\nThe email address of the user, can be passed as an array of strings. Must include at least one email address (with a max of 50)."
                    },
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "(Optional) Integer\n\nThe limit on the maximum number of results returned. Default (and max) limit is 100."
                    },
                    {
                      "key": "offset",
                      "value": "0",
                      "description": "(Optional) Integer\n\nNumber of templates to skip before returning rest of the templates that fit the search criteria."
                    }
                  ]
                },
                "description": "> Use this endpoint to list and get the subscription groups of a certain user. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.groups.get` permission.\n\nIf there are multiple users (multiple external ids) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/)."
              },
              "response": []
            },
            {
              "name": "Update User's Subscription Group Status - Email",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscription_group_id\": \"subscription_group_identifier\",\n  \"subscription_state\": \"unsubscribed\",\n  \"external_id\": \"external_identifier\",\n  \"email\": [\"example1@email.com\", \"example2@email.com\"]\n}\n"
                },
                "url": {
                  "raw": "https://{{instance_url}}/subscription/status/set",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "status", "set"]
                },
                "description": "> Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.set` permission.\n\nYou can access a subscription group’s `subscription_group_id` by navigating to the **Subscription Group** page.\n\nTip: When creating new users via the [/users/track](https://www.braze.com/docs/api/endpoints/user_data/post_user_track/) endpoint, you can set subscription groups within the user attributes object, which allows you to create a user and set the subscription group state in one API call.\n\n\\*`email` or `external_id` is required\n\n### Rate Limit\n\nFor customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `subscription_group_id` | Required | String | The `id` of your subscription group. |\n| `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |\n| `external_id` | Required\\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |\n| `email` | Required\\* | String | The email address of the user, can be passed as an array of strings. Must include at least one email address (with a max of 50).  <br>  <br>If multiple users (external_id) in the same app group share the same email address, then all users that share the email address are updated with the subscription group changes. |\n\n### Example successful response\n\nThe status code `201` could return the following response body.\n\n``` json\n{\n    \"message\": \"success\"\n}\n\n```\n\nImportant: The endpoint only accepts the `email` or `phone` value, not both. If given both, you will receive this response: `{\"message\":\"Either an email address or a phone number should be provided, but not both.\"}`"
              },
              "response": []
            },
            {
              "name": "Update User's Subscription Group Status V2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\"subscription_groups\":[\n    {\n      \"subscription_group_id\":\"subscription_group_identifier\",\n      \"subscription_state\":\"subscribed\",\n      \"emails\":[\"example1@email.com\",\"example2@email.com\"]\n    }\n  ]"
                },
                "url": {
                  "raw": "https://{{instance_url}} /v2/subscription/status/set",
                  "protocol": "https",
                  "host": ["{{instance_url}} "],
                  "path": ["v2", "subscription", "status", "set"]
                },
                "description": "> Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.set` permission.\n\nYou can access a subscription group’s `subscription_group_id` by navigating to the **Subscriptions Group** page.\n\nTip: When creating new users via the [`/users/track` endpoint](https://www.braze.com/docs/api/endpoints/user_data/post_user_track/), you can set subscription groups within the user attributes object, which allows you to create a user and set the subscription group state in one API call.\n\n\\*`email` or `external_id` is required\n\n### Rate Limit\n\nFor customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n### Request parameters\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `subscription_group_id` | Required | String | The `id` of your subscription group. |\n| `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |\n| `external_ids` | Required\\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |\n| `emails` | Required\\* | String or array of strings | The email address of the user, can be passed as an array of strings. Must include at least one email address (with a max of 50).  <br>  <br>If multiple users (`external_id`) in the same app group share the same email address, all users that share the email address are updated with the subscription group changes. |\n\n### Example successful response\n\nResponse: (status 201)\n\n``` json\n{\n    \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            }
          ]
        },
        {
          "name": "SMS and WhatsApp",
          "item": [
            {
              "name": "List User's  Subscription Group Status - SMS",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/subscription/status/get?subscription_group_id={{subscription_group_id}}&external_id={{external_identifier}}&phone=+11112223333",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "status", "get"],
                  "query": [
                    {
                      "key": "subscription_group_id",
                      "value": "{{subscription_group_id}}",
                      "description": "(Required) String\n\nThe `id` of your subscription group."
                    },
                    {
                      "key": "external_id",
                      "value": "{{external_identifier}}",
                      "description": "(Required*) String\n\nThe `external_id` of the user (must include at least one and at most 50 `external_ids`).\n\nWhen both an `external_id` and `phone` are submitted, only the external_id(s) provided will be applied to the result query.\n"
                    },
                    {
                      "key": "phone",
                      "value": "+11112223333",
                      "description": "(Required*) String in [E.164](https://en.wikipedia.org/wiki/E.164) format\n\nThe phone number of the user (must include at least one phone number and at most 50 phone numbers)."
                    }
                  ]
                },
                "description": "> Use this endpoint to get the subscription state of a user in a subscription group. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.get` permission.\n\nThese groups will be available on the **Subscription Group** page. The response from this endpoint will include the external ID and either subscribed, unsubscribed, or unknown for the specific subscription group requested in the API call. This can be used to update the subscription group state in subsequent API calls or to be displayed on a hosted web page.\n\n\\*Either `external_id` or `phone` are required. When both are submitted, only the external_id is used for querying and the phone number is applied to that user.\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Response\n\nAll successful responses will return `subscribed`, `unsubscribed`, or `unknown` depending on status and user history with the subscription group.\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"status\": {\n    \"1\": \"Unsubscribed\",\n    \"2\": \"Subscribed\"\n  },\n  \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "List User's Subscription Group - SMS",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/subscription/user/status?external_id={{external_id}}&limit=100&offset=1&phone=+11112223333",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "user", "status"],
                  "query": [
                    {
                      "key": "external_id",
                      "value": "{{external_id}}",
                      "description": "(Required*) String\n\nThe `external_id` of the user (must include at least one and at most 50 `external_ids`)."
                    },
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "(Optional) Integer\n\nThe limit on the maximum number of results returned. Default (and max) limit is 100."
                    },
                    {
                      "key": "offset",
                      "value": "1",
                      "description": "(Optional) Integer\n\n\tNumber of templates to skip before returning the rest of the templates that fit the search criteria."
                    },
                    {
                      "key": "phone",
                      "value": "+11112223333",
                      "description": "(Required*) String in [E.164](https://en.wikipedia.org/wiki/E.164) format\n\nThe phone number of the user. Must include at least one phone number (with a max of 50)."
                    }
                  ]
                },
                "description": "> Use this endpoint to list and get the subscription groups of a certain user. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.groups.get` permission.\n\nIf there are multiple users (multiple external IDs) who share the same email address, all users will be returned as a separate user (even if they have the same email address or subscription group).\n\n## Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/)."
              },
              "response": []
            },
            {
              "name": "Update User's Subscription Group Status - SMS",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscription_group_id\": \"subscription_group_identifier\",\n  \"subscription_state\": \"unsubscribed\",\n  \"external_id\": \"external_identifier\",\n  \"phone\": [\"+12223334444\", \"+11112223333\"]\n}\n"
                },
                "url": {
                  "raw": "https://{{instance_url}}/subscription/status/set",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["subscription", "status", "set"]
                },
                "description": "> Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.set` permission.\n\nYou can access a subscription group’s `subscription_group_id` by navigating to the **Subscription Group** page.\n\nTip: When creating new users via the [/users/track](https://www.braze.com/docs/api/endpoints/user_data/post_user_track/) endpoint, you can set subscription groups within the user attributes object, which allows you to create a user and set the subscription group state in one API call.\n\n\\*Only `external_id` or `phone` is accepted for SMS subscription groups.\n\n### Rate limit\n\nFor customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `subscription_group_id` | Required | String | The `id` of your subscription group. |\n| `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |\n| `external_id` | Required\\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |\n| `phone` | Required\\* | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | The phone number of the user, can be passed as an array of strings. Must include at least one phone number (with a max of 50). |\n\n### Example successful response\n\nThe status code `201` could return the following response body.\n\n``` json\n{\n    \"message\": \"success\"\n}\n\n```\n\nImportant: The endpoint only accepts the `email` or `phone` value, not both. If given both, you will receive this response: `{\"message\":\"Either an email address or a phone number should be provided, but not both.\"}`"
              },
              "response": []
            },
            {
              "name": "Update User's Subscription Group Status V2",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\"subscription_groups\":[\n    {\n      \"subscription_group_id\":\"subscription_group_identifier\",\n      \"subscription_state\":\"subscribed\",\n      \"phones\":[\"+12223334444\",\"+15556667777\"]\n    }\n  ]"
                },
                "url": {
                  "raw": "https://{{instance_url}}/v2/subscription/status/set",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["v2", "subscription", "status", "set"]
                },
                "description": "> Use this endpoint to batch update the subscription state of up to 50 users on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `subscription.status.set` permission.\n\nYou can access a subscription group’s `subscription_group_id` by navigating to the **Subscriptions Group** page.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after January 6, 2022, we apply a rate limit of 5,000 requests per minute shared across the `/subscription/status/set` and `/v2/subscription/status/set` endpoint as documented in [API rate limits](http://localhost:4000/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `subscription_group_id` | Required | String | The `id` of your subscription group. |\n| `subscription_state` | Required | String | Available values are `unsubscribed` (not in subscription group) or `subscribed` (in subscription group). |\n| `external_ids` | Required\\* | Array of strings | The `external_id` of the user or users, may include up to 50 `id`s. |\n| `phones` | Required\\* | String in [E.164](https://en.wikipedia.org/wiki/E.164) format | The phone numbers of the user, can be passed as an array of strings. Must include at least one phone number (with a max of 50). |\n\n### Example successful response\n\nResponse: (status 201)\n\n``` json\n{\n    \"message\": \"success\"\n}\n\n```"
              },
              "response": []
            }
          ]
        }
      ],
      "description": "Use the Subscription Group REST APIs to programmatically manage the subscription groups that you have stored on the Braze dashboard, on the Subscription Group page."
    },
    {
      "name": "Templates",
      "item": [
        {
          "name": "Content Blocks",
          "item": [
            {
              "name": "List Available Content Blocks",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/content_blocks/list?modified_after=2020-01-01T01:01:01.000000&modified_before=2020-02-01T01:01:01.000000&limit=100&offset=1",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["content_blocks", "list"],
                  "query": [
                    {
                      "key": "modified_after",
                      "value": "2020-01-01T01:01:01.000000",
                      "description": "(Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\n\nRetrieve only content blocks updated at or after the given time."
                    },
                    {
                      "key": "modified_before",
                      "value": "2020-02-01T01:01:01.000000",
                      "description": "(Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\n\nRetrieve only content blocks updated at or before the given time."
                    },
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "(Optional) Positive Number\n\nMaximum number of content blocks to retrieve. Default to 100 if not provided, with a maximum acceptable value of 1000."
                    },
                    {
                      "key": "offset",
                      "value": "1",
                      "description": "(Optional) Positive Number\n\nNumber of content blocks to skip before returning rest of the templates that fit the search criteria."
                    }
                  ]
                },
                "description": "> Use this endpoint to list your existing [Content Blocks](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/) information. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `content_blocks.list` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR_REST_API_KEY\n{\n  \"count\": \"integer\",\n  \"content_blocks\": [\n    {\n      \"content_block_id\": \"string\",\n      \"name\": \"string\",\n      \"content_type\": \"html or text\",\n      \"liquid_tag\": \"string\",\n      \"inclusion_count\" : \"integer\",\n      \"created_at\": \"time-in-iso\",\n      \"last_edited\": \"time-in-iso\",\n      \"tags\" : \"array of strings\"\n    }\n  ]\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `Modified after time is invalid` | The provided date is not a valid or parsable date. Reformat this value as a string in ISO 8601 format (`yyyy-mm-ddThh:mm:ss.ffffff`). |\n| `Modified before time is invalid` | The provided date is not a valid or parsable date. Reformat this value as a string in ISO 8601 format (`yyyy-mm-ddThh:mm:ss.ffffff`). |\n| `Modified after time must be earlier than or the same as modified before time.` | Change the `modified_after` value to a time that is earlier than the `modified_before` time. |\n| `Content Block number limit is invalid` | The `limit` parameter must be an integer (positive number) greater than 0. |\n| `Content Block number limit must be greater than 0` | Change the `limit` parameter to an integer greater than 0. |\n| `Content Block number limit exceeds maximum of 1000` | Change the `limit` parameter to an integer less than 1000. |\n| `Offset is invalid` | The `offset` parameter must be an integer greater than 0. |\n| Offset must be greater than 0 | Change the `offset` parameter to an integer greater than 0. |"
              },
              "response": []
            },
            {
              "name": "See Content Block Information",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/content_blocks/info?content_block_id={{content_block_id}}&include_inclusion_data=false",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["content_blocks", "info"],
                  "query": [
                    {
                      "key": "content_block_id",
                      "value": "{{content_block_id}}",
                      "description": "(Required) String\n\nThe content block identifier. \n\nYou can find this by either listing content block information through an API call or going to **Settings > Setup and Testing > API Keys**, then scrolling to the bottom and searching for your content block API identifier."
                    },
                    {
                      "key": "include_inclusion_data",
                      "value": false,
                      "description": "(Optional) Boolean\n\nWhen set to `true`, the API returns back the Message Variation API identifier of campaigns and Canvases where this content block is included, to be used in subsequent calls. The results exclude archived or deleted Campaigns or Canvases."
                    }
                  ]
                },
                "description": "> Use this endpoint to call information for your existing [Content Blocks](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/). \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `content_blocks.info` permission.\n\n**Note:** If you are using our [older navigation](https://www.braze.com/docs/navigation), `content_block_id`can be found at ****Developer Console** > **API Settings****.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR_REST_API_KEY\n{\n  \"content_block_id\": \"string\",\n  \"name\": \"string\",\n  \"content\": \"string\",\n  \"description\": \"string\",\n  \"content_type\": \"html or text\",\n  \"tags\":  \"array of strings\",\n  \"created_at\": \"time-in-iso\",\n  \"last_edited\": \"time-in-iso\",\n  \"inclusion_count\" : \"integer\",\n  \"message\": \"success\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `Content Block ID cannot be blank` | Make sure that a Content Block is listed in your request and is encapsulated in quotes (`\"\"`). |\n| `Content Block ID is invalid for this App Group` | This Content Block doesn't exist or is in a different company account or app group. |\n| `Content Block has been deleted—content not available` | This Content Block, though it may have existed earlier, has been deleted. |\n| `Include Inclusion Data—error` | This parameter only accepts boolean values (true or false). Make sure the value for `include_inclusion_data` is not encapsulated in quotes (`\"\"`), which causes the value to be sent as a string instead. See [request parameters](#request-parameters) for details. |"
              },
              "response": []
            },
            {
              "name": "Create Content Block",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"content_block\",\n  \"description\": \"This is my content block\",\n  \"content\": \"HTML content within block\",\n  \"state\": \"draft\",\n  \"tags\": [\"marketing\"]\n}\n"
                },
                "url": {
                  "raw": "https://{{instance_url}}/content_blocks/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["content_blocks", "create"]
                },
                "description": "> Use this endpoint to create a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/). \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `content_blocks.create` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `name` | Required | String | Name of the content block. Must be less than 100 characters. |\n| `description` | Optional | String | Description of the content block. Must be less than 250 characters. |\n| `content` | Required | String | HTML or text content within the Content Block. |\n| `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |\n| `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"content_block_id\": (string) Your newly generated block id,\n  \"liquid_tag\": (string) The generated block tag from the Content Block name,\n  \"created_at\": (string) The time the Content Block was created in ISO 8601,\n  \"message\": \"success\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `Content cannot be blank` |  |\n| `Content must be a string` | Make sure your content is encapsulated in quotes (`\"\"`). |\n| `Content must be smaller than 50kb` | The content in your Content Block must be less than 50kb total. |\n| `Content contains malformed liquid` | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |\n| `Content Block cannot be referenced within itself` |  |\n| `Content Block description cannot be blank` |  |\n| `Content Block description must be a string` | Make sure your Content Block description is encapsulated in quotes (`\"\"`). |\n| `Content Block description must be shorter than 250 characters` |  |\n| `Content Block name cannot be blank` |  |\n| `Content Block name must be shorter than 100 characters` |  |\n| `Content Block name can only contain alphanumeric characters` | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other \"special\" characters. |\n| `Content Block with this name already exists` | Try a different name. |\n| `Content Block state must be either active or draft` |  |\n| `Tags must be an array` | Tags must be formatted as an array of strings, for example `[\"marketing\", \"promotional\", \"transactional\"]`. |\n| `All tags must be strings` | Make sure your tags are encapsulated in quotes (`\"\"`). |\n| `Some tags could not be found` | To add a tag when creating a Content Block, the tag must already exist in Braze. |"
              },
              "response": []
            },
            {
              "name": "Update Content Block",
              "event": [
                {
                  "listen": "prerequest",
                  "script": { "exec": [""], "type": "text/javascript" }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content_block_id\" :\"content_block_id\", \n  \"name\": \"content_block\",\n  \"description\": \"This is my content block\",\n  \"content\": \"HTML or text content within block\",\n  \"state\": \"draft\",\n  \"tags\": [\"marketing\"]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/content_blocks/update",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["content_blocks", "update"]
                },
                "description": "> Use this endpoint to update a [Content Block](https://www.braze.com/docs/user_guide/engagement_tools/templates_and_media/content_blocks/). \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `content_blocks.update` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/)\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `content_block_id` | Required | String | Your content block's API identifier. |\n| `name` | Required | String | Name of the content block. Must be less than 100 characters. |\n| `description` | Optional | String | Description of the content block. Must be less than 250 characters. |\n| `content` | Required | String | HTML or text content within content blocks. |\n| `state` | Optional | String | Choose `active` or `draft`. Defaults to `active` if not specified. |\n| `tags` | Optional | Array of strings | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"content_block_id\": (string) Your newly generated block id,\n  \"liquid_tag\": (string) The generated block tag from the Content Block name,\n  \"created_at\": (string) The time the Content Block was created in ISO 8601,\n  \"message\": \"success\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible returned errors and their associated troubleshooting steps.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `Content cannot be blank` |  |\n| `Content must be a string` | Make sure your content is encapsulated in quotes (`\"\"`). |\n| `Content must be smaller than 50kb` | The content in your Content Block must be less than 50kb total. |\n| `Content contains malformed liquid` | The Liquid provided is not valid or parsable. Try again with valid Liquid or reach out to support. |\n| `Content Block cannot be referenced within itself` |  |\n| `Content Block description cannot be blank` |  |\n| `Content Block description must be a string` | Make sure your Content Block description is encapsulated in quotes (`\"\"`). |\n| `Content Block description must be shorter than 250 characters` |  |\n| `Content Block name cannot be blank` |  |\n| `Content Block name must be shorter than 100 characters` |  |\n| `Content Block name can only contain alphanumeric characters` | Content Block names can include any of the following characters: the letters (capitalized or lowercase) `A` through `Z`, the numbers `0` through `9`, dashes `-`, and underscores `_`. It cannot contain non-alphanumeric characters like emojis, `!`, `@`, `~`, `&`, and other \"special\" characters. |\n| `Content Block with this name already exists` | Try a different name. |\n| `Content Block name cannot be updated for active Content Blocks` |  |\n| `Content Block state must be either active or draft` |  |\n| `Active Content Block can not be updated to Draft. Create a new Content Block.` |  |\n| `Tags must be an array` | Tags must be formatted as an array of strings, for example `[\"marketing\", \"promotional\", \"transactional\"]`. |\n| `All tags must be strings` | Make sure your tags are encapsulated in quotes (`\"\"`). |\n| `Some tags could not be found` | To add a tag when creating a Content Block, the tag must already exist in Braze. |"
              },
              "response": []
            }
          ],
          "description": "Content Blocks are an Email Templating feature that allow you to: \n- Create a consistent look and feel to your Email campaigns using Content Blocks as Headers and Footers.\n- Distribute the same offer codes through different channels.\n- Create pre-defined assets that can be used to build messages with consistent information and assets.\n- Copy entire message bodies to other messages.\n\nYou can edit Content Blocks in the Templates & Media section of the Braze UI, or here, via API."
        },
        {
          "name": "Email Templates",
          "item": [
            {
              "name": "List Available Email Templates",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/templates/email/list?modified_after=2020-01-01T01:01:01.000000&modified_before=2020-02-01T01:01:01.000000&limit=1&offset=0",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["templates", "email", "list"],
                  "query": [
                    {
                      "key": "modified_after",
                      "value": "2020-01-01T01:01:01.000000",
                      "description": "(Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\n\nRetrieve only templates updated at or after the given time."
                    },
                    {
                      "key": "modified_before",
                      "value": "2020-02-01T01:01:01.000000",
                      "description": "(Optional) String in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)\n\nRetrieve only templates updated at or before the given time."
                    },
                    {
                      "key": "limit",
                      "value": "1",
                      "description": "(Optional) Positive Number\n\nMaximum number of templates to retrieve. Default to 100 if not provided, with a maximum acceptable value of 1000."
                    },
                    {
                      "key": "offset",
                      "value": "0",
                      "description": "(Optional) Positive Number\n\nNumber of templates to skip before returning rest of the templates that fit the search criteria."
                    }
                  ]
                },
                "description": "> Use this endpoint to get a list of available templates in your Braze account. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `templates.email.list` permission.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Response\n\n> **Important:** Templates built using the Drag & Drop Editor for email are not provided in this response. \n  \n\n``` json\n{\n  \"count\": number of templates returned\n  \"templates\": [template with the following properties]:\n    \"email_template_id\": (string) your email template's API Identifier,\n    \"template_name\": (string) the name of your email template,\n    \"created_at\": (string, in ISO 8601),\n    \"updated_at\": (string, in ISO 8601),\n    \"tags\": (array of strings) tags appended to the template\n}\n\n```"
              },
              "response": []
            },
            {
              "name": "See Email Template Information",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "https://{{instance_url}}/templates/email/info?email_template_id={{email_template_id}}",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["templates", "email", "info"],
                  "query": [
                    {
                      "key": "email_template_id",
                      "value": "{{email_template_id}}",
                      "description": "(Required) String\n\nSee [email template's API identifier](https://www.braze.com/docs/api/identifier_types/)."
                    }
                  ]
                },
                "description": "> Use this endpoint to get information on your email templates. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `templates.email.info` permission.\n\n> **Important:** Templates built using the drag-and-drop editor for email are not accepted. \n  \n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Response\n\n``` json\nContent-Type: application/json\nAuthorization: Bearer YOUR-REST-API-KEY\n{\n  \"email_template_id\": (string) your email template's API Identifier,\n  \"template_name\": (string) the name of your email template,\n  \"description\": (string) email template description,\n  \"subject\": (string) the email template subject line,\n  \"preheader\": (optional, string) the email preheader used to generate previews in some clients),\n  \"body\": (optional, string) the email template body that may include HTML,\n  \"plaintext_body\": (optional, string) a plaintext version of the email template body,\n  \"should_inline_css\": (optional, boolean) whether there is inline CSS in the body of the template - defaults to the css inlining value for the App Group,\n  \"tags\": (string) tag names,\n  \"created_at\": (string, in ISO 8601),\n  \"updated_at\": (string, in ISO 8601)\n}\n\n```\n\nImages in this response will show in the `body` variable as HTML."
              },
              "response": []
            },
            {
              "name": "Create Email Template",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"template_name\": \"email_template_name\",\n  \"subject\": \"Welcome to my email template!\",\n  \"body\": \"This is the text within my email body and https://www.braze.com/ here is a link to Braze.com.\",\n  \"plaintext_body\": \"This is the text within my email body and here is a link to https://www.braze.com/.\",\n  \"preheader\": \"My preheader is pretty cool.\",\n  \"tags\": [\"Tag1\", \"Tag2\"]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/templates/email/create",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["templates", "email", "create"]
                },
                "description": "> Use this endpoint to create email templates on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `templates.email.create` permission.\n\nThese templates will be available on the **Templates & Media** page. The response from this endpoint will include a field for `email_template_id`, which can be used to update the template in subsequent API calls.\n\nUsers’ email subscription status can be updated and retrieved via Braze using a RESTful API. You can use the API to set up bi-directional sync between Braze and other email systems or your own database. All API requests are made over HTTPS.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `template_name` | Required | String | Name of your email template. |\n| `subject` | Required | String | Email template subject line. |\n| `body` | Required | String | Email template body that may include HTML. |\n| `plaintext_body` | Optional | String | A plaintext version of the email template body. |\n| `preheader` | Optional | String | Email preheader used to generate previews in some clients. |\n| `tags` | Optional | String | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |\n| `should_inline_css` | Optional | Boolean | Enables or disables the `inline_css` feature per template. If not provided, Braze will use the default setting for the app group. One of `true` or `false` is expected. |\n\n### Possible errors\n\nThe following table lists possible returned errors and their associated troubleshooting steps, if applicable.\n\n| Error | Troubleshooting |\n| --- | --- |\n| Template name is required | Enter a template name. |\n| Tags must be an array | Tags must be formatted as an array of strings, for example `[\"marketing\", \"promotional\", \"transactional\"]`. |\n| All tags must be strings | Make sure your tags are encapsulated in quotes (`\"\"`). |\n| Some tags could not be found | To add a tag when creating an email template, the tag must already exist in Braze. |\n| Email must have valid Content Block names | The email contains Content Blocks that don't exist in this environment. |\n| Invalid value for `should_inline_css`. One of `true` or `false` was expected | This parameter only accepts boolean values (true or false). Make sure the value for `should_inline_css` is not encapsulated in quotes (`\"\"`), which causes the value to be sent as a string instead. |"
              },
              "response": []
            },
            {
              "name": "Update Email Template",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email_template_id\": \"email_template_id\",\n  \"template_name\": \"Weekly Newsletter\",\n  \"subject\": \"This Week's Styles\",\n  \"body\": \"Check out this week's digital lookbook to inspire your outfits. Take a look at https://www.braze.com/\",\n  \"plaintext_body\": \"This is the updated text within my email body and here is a link to https://www.braze.com/.\",\n  \"preheader\": \"We want you to have the best looks this Summer\",\n  \"tags\": [\"Tag1\", \"Tag2\"]\n}"
                },
                "url": {
                  "raw": "https://rest.iad-01.braze.com/templates/email/update",
                  "protocol": "https",
                  "host": ["rest", "iad-01", "braze", "com"],
                  "path": ["templates", "email", "update"]
                },
                "description": "> Use this endpoint to update email templates on the Braze dashboard. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `templates.email.update` permission.\n\nYou can access an email template’s `email_template_id` by navigating to it on the **Templates & Media** page. The [Create email template endpoint](https://www.braze.com/docs/api/endpoints/templates/email_templates/post_create_email_template/) will also return an `email_template_id` reference.\n\nAll fields other than the `email_template_id` are optional, but you must specify at least one field to update.\n\n### Rate limit\n\nWe apply the default Braze rate limit of 250,000 requests per hour to this endpoint, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `email_template_id` | Required | String | Your [email template's API identifier](https://www.braze.com/docs/api/identifier_types/). |\n| `template_name` | Optional | String | Name of your email template. |\n| `subject` | Optional | String | Email template subject line. |\n| `body` | Optional | String | Email template body that may include HTML. |\n| `plaintext_body` | Optional | String | A plaintext version of the email template body. |\n| `preheader` | Optional | String | Email preheader used to generate previews in some clients. |\n| `tags` | Optional | String | [Tags](https://www.braze.com/docs/user_guide/administrative/app_settings/manage_app_group/tags/) must already exist. |\n| `should_inline_css` | Optional | Boolean | Enables or disables the `inline_css` feature per template. If not provided, Braze will use the default setting for the AppGroup. One of `true` or `false` is expected. |\n\n### Possible errors\n\nThe following table lists possible returned errors and their associated troubleshooting steps, if applicable.\n\n| Error | Troubleshooting |\n| --- | --- |\n| Template name is required |  |\n| Tags must be an array | Tags must be formatted as an array of strings, for example `[\"marketing\", \"promotional\", \"transactional\"]`. |\n| All tags must be strings | Make sure your tags are encapsulated in quotes (`\"\"`). |\n| Some tags could not be found | To add a tag when creating an email template, the tag must already exist in Braze. |\n| Invalid value for `should_inline_css`. One of `true` or `false` was expected | This parameter only accepts boolean values (true or false). Make sure the value for `should_inline_css` is not encapsulated in quotes (`\"\"`), which causes the value to be sent as a string instead. |"
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "User Data",
      "item": [
        {
          "name": "External ID Migration",
          "item": [
            {
              "name": "Rename External ID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "type": "text",
                    "value": "Bearer {{api_key}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"external_id_renames\" :[\n    {\n      \"current_external_id\": \"existing_external_id\",\n      \"new_external_id\" : \"new_external_id\"\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/users/external_ids/rename",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["users", "external_ids", "rename"]
                },
                "description": "> Use this endpoint to rename your users’ external IDs. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.external_ids.rename` permission.\n\nYou can send up to 50 rename objects per request. You will need to create a new [API key](https://www.braze.com/docs/api/api_key/) with permissions for this endpoint.\n\nThis endpoint sets a new (primary) `external_id` for the user and deprecates their existing `external_id`. This means that the user can be identified by either `external_id` until the deprecated one is removed. Having multiple external IDs allows for a migration period so that older versions of your apps that use the previous external ID naming schema don't break.\n\nAfter your old naming schema is no longer in use, we highly recommend removing deprecated external IDs using the [`/users/external_ids/remove` endpoint](https://www.braze.com/docs/api/endpoints/user_data/external_id_migration/post_external_ids_remove).\n\n> **Warning:** Make sure to remove deprecated external IDs with the \n  \n\n## Rate limit\n\nWe apply a rate limit of 1,000 requests per minute to this endpoint, as documented in [API rate limits](http://braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_id_renames` | Required | Array of external ID rename objects | View request example and the following limitations for structure of external ID rename object |\n\n- The `current_external_id` must be the user’s primary ID, and cannot be a deprecated ID\n- The `new_external_id` must not already be in use as either a primary ID or a deprecated ID\n- The `current_external_id` and `new_external_id` cannot be the same\n    \n\n## Response\n\nThe response will confirm all successful renames, as well as unsuccessful renames with any associated errors. Error messages in the `rename_errors` field will reference the index of the object in the array of the original request.\n\n``` json\n{\n  \"message\" : (string) status message,\n  \"external_ids\" : (array of successful Rename Operations),\n  \"rename_errors\": (array of any )\n}\n\n```\n\nThe `message` field will return `success` for any valid request. More specific errors are captured in the `rename_errors` array. The `message` field returns an error in the case of:\n\n- Invalid API key\n- Empty `external_id_renames` array\n- `external_id_renames` array with more than 50 objects\n- Rate limit hit (>1,000 requests/minute)\n    \n\n## Frequently Asked Questions\n\n**Does this impact MAU?**  \nNo, since the number of users will stay the same, they’ll just have a new `external_id`.\n\n**Does user behavior change historically?**  \nNo, since the user is still the same user, and all their historical behavior is still connected to them.\n\n**Can it be run on dev/staging app groups?**  \nYes. In fact, we highly recommend running a test migration on a staging or development app group, and ensuring everything has gone smoothly before executing on production data.\n\n**Does this consume data points?**  \nThis feature does not cost data points.\n\n**What is the recommended deprecation period?**  \nWe have no hard limit on how long you can keep deprecated external IDs around, but we highly recommend removing them once there is no longer a need to reference users by the deprecated ID."
              },
              "response": []
            },
            {
              "name": "Remove External ID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{api_key}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"external_ids\" :[\n    \"existing_deprecated_external_id_string\",\n    ...\n  ]\n}"
                },
                "url": {
                  "raw": "https://{{instance_url}}/users/external_ids/remove",
                  "protocol": "https",
                  "host": ["{{instance_url}}"],
                  "path": ["users", "external_ids", "remove"]
                },
                "description": "> Use this endpoint to remove your users' old deprecated external IDs. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.external_ids.remove` permission.\n\nYou can send up to 50 external IDs per request. You will need to create a new [API key](https://www.braze.com/docs/api/api_key/) with permissions for this endpoint.\n\n> **Warning:** This endpoint completely removes the deprecated ID and cannot be undone. Using this endpoint to remove deprecated \\`external_ids\\` that are still associated with users in your system can permanently prevent you from finding those users' data. \n  \n\n## Rate limit\n\nWe apply a rate limit of 1,000 requests per minute to this endpoint, as documented in [API rate limits](http://braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_ids` | Required | Array of strings | External identifiers for the users to remove |\n\n> Important: Only deprecated IDs can be removed; attempting to remove a primary external ID will result in an error. \n  \n\n## Response\n\nThe response will confirm all successful removals, as well as unsuccessful removals with the associated errors. Error messages in the `removal_errors` field will reference the index in the array of the original request.\n\n``` json\n{\n  \"message\" : (string) status message,\n  \"removed_ids\" : (array of successful Remove Operations),\n  \"removal_errors\": (array of any )\n}\n\n```\n\nThe `message` field will return `success` for any valid request. More specific errors are captured in the `removal_errors` array. The `message` field returns an error in the case of:\n\n- Invalid API key\n- Empty `external_ids` array\n- `external_ids` array with more than 50 items\n- Rate limit hit (>1,000 requests/minute)"
              },
              "response": []
            }
          ],
          "description": "The External ID Migration API allows you to rename existing external IDs (creating a new primary ID and deprecating the existing ID) and remove deprecated IDs post-migration. <br><br> We've architected this solution to allow multiple External IDs in order to support a migration period whereby older versions of your apps still in the wild that use the previous External ID naming schema don’t break. We highly recommend removing deprecated External IDs once your old naming schema is no longer in use."
        },
        {
          "name": "Update User Alias",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"alias_updates\" :[\n    {\n      \"alias_label\": \"example_alias_label\",\n      \"old_alias_name\" : \"example_old_alias_name\",\n      \"new_alias_name\" : \"example_new_alias_name\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/users/alias/update",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["users", "alias", "update"]
            },
            "description": "> Use this endpoint to update existing user aliases. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.alias.update` permission.\n\nUp to 50 user aliases may be specified per request.\n\nThis endpoint does not guarantee the sequence of `alias_updates` objects being updated.\n\nUpdating a user alias requires `alias_label`, `old_alias_name`, and `new_alias_name` to be included in the update user alias object. If there is no user alias associated with the `alias_label` and `old_alias_name`, no alias will be updated. If the given `alias_label` and `old_alias_name` is found, then the `old_alias_name` will be updated to the `new_alias_name`.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete`, `/users/identify`, `/users/merge`, and `/users/alias/update` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `alias_updates` | Required | Array of update user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/).  <br>  <br>For more information on `old_alias_name`, `new_alias_name`, and `alias_label`, refer to [User aliases](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/user_profile_lifecycle/#user-aliases). |\n\n### Endpoint request body with update user alias object specification\n\n``` json\n{\n  \"alias_label\" : (required, string),\n  \"old_alias_name\" : (required, string),\n  \"new_alias_name\" : (required, string)\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Create New User Aliases",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_aliases\" :[\n    {\n      \"external_id\": \"external_identifier\",\n      \"alias_name\" : \"example_name\",\n      \"alias_label\" : \"example_label\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/users/alias/new",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["users", "alias", "new"]
            },
            "description": "> Use this endpoint to add new user aliases for existing identified users, or to create new unidentified users. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.alias.new` permission.\n\nUp to 50 user aliases may be specified per request.\n\n**Adding a user alias for an existing user** requires an `external_id` to be included in the new user alias object. If the `external_id` is present in the object but there is no user with that `external_id`, the alias will not be added to any users. If an `external_id` is not present, a user will still be created but will need to be identified later. You can do this using the \"Identifying Users\" and the `users/identify` endpoint.\n\n**Creating a new alias-only user** requires the `external_id` to be omitted from the new user alias object. Once the user is created, use the `/users/track` endpoint to associate the alias-only user with attributes, events, and purchases, and the `/users/identify` endpoint to identify the user with an `external_id`.\n\n### Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `user_aliases` | Required | Array of new user alias objects | See [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/).  <br>  <br>For more information on `alias_name` and `alias_label`, check out our [User Aliases](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/user_profile_lifecycle/#user-aliases) documentation. |"
          },
          "response": []
        },
        {
          "name": "Delete Users",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"external_ids\": [\"external_identifier1\", \"external_identifier2\"],\n  \"braze_ids\": [\"braze_identifier1\", \"braze_identifier2\"],\n  \"user_aliases\": [\n    {\n      \"alias_name\": \"user_alias1\", \"alias_label\": \"alias_label1\"\n    },\n    {\n      \"alias_name\": \"user_alias2\", \"alias_label\": \"alias_label2\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/users/delete",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["users", "delete"]
            },
            "description": "> Use this endpoint to delete any user profile by specifying a known user identifier. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.delete` permission.\n\nUp to 50 `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request. Only one of `external_ids`, `user_aliases`, or `braze_ids` can be included in a single request.\n\n> **Important:** Deleting user profiles cannot be undone. It will permanently remove users which may cause discrepancies in your data. Learn more about what happens when you [delete a user profile via API](https://braze.com/docs/help/help_articles/api/delete_user/) in our Help documentation. \n  \n\n### Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/alias/new` and `/users/identify` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Request parameter\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `external_ids` | Optional | Array of strings | External identifiers for the users to delete. |\n| `user_aliases` | Optional | Array of user alias object | [User aliases](https://www.braze.com/docs/api/objects_filters/user_alias_object/) for the users to delete. |\n| `braze_ids` | Optional | Array of strings | Braze user identifiers for the users to delete. |"
          },
          "response": []
        },
        {
          "name": "Identify Users",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"aliases_to_identify\": [\n    {\n      \"external_id\": \"external_identifier\",\n      \"user_alias\": {\n        \"alias_name\" : \"example_alias\",\n        \"alias_label\" : \"example_label\"\n      }\n    }\n  ]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/users/identify",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["users", "identify"]
            },
            "description": "> Use this endpoint to identify an unidentified (alias-only) user. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.identify` permission.\n\nCalling `/users/identify` combines the alias-only profile with the identified profile and removes the alias-only profile.\n\nIdentifying a user requires an `external_id` to be included in the `aliases_to_identify` object. If there is no user with that `external_id`, the `external_id` will simply be added to the aliased user's record, and the user will be considered identified. You can add up to 50 user aliases per request.\n\nSubsequently, you can associate multiple additional user aliases with a single `external_id`.\n\n- When these subsequent associations are made with the `merge_behavior` field set to `none`, only the push tokens and message history associated with the user alias are retained; any attributes, events, or purchases will be \"orphaned\" and not available on the identified user. One workaround is to export the aliased user's data before identification using the [`/users/export/ids` endpoint](https://www.braze.com/docs/api/endpoints/export/user_data/post_users_identifier/), then re-associate the attributes, events, and purchases with the identified user.\n- When associations are made with the `merge_behavior` field set to `merge`, this endpoint will merge [specific fields](#merge) found on the anonymous user to the identified user.\n    \n\n> Note: To prevent unexpected loss of data when identifying users, we highly recommend that you first refer to [data collection best practices](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/best_practices/#capturing-user-data-when-alias-only-user-info-is-already-present) to learn about capturing user data when alias-only user info is already present. \n  \n\n### Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete` and `/users/alias/new` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n### Parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `aliases_to_identify` | Required | Array of aliases to identify object | See [alias to identify object](https://www.braze.com/docs/api/objects_filters/aliases_to_identify/) and [user alias object](https://www.braze.com/docs/api/objects_filters/user_alias_object/). |\n| `merge_behavior` | Optional | String | One of `none` or `merge` is expected. |\n\n#### Merge_behavior field\n\nSetting the `merge_behavior` field to `merge` sets the endpoint to merge any of the following fields found **exclusively** on the anonymous user to the identified user.\n\n- First name\n- Last name\n- Email\n- Gender\n- Date of birth\n- Phone number\n- Time zone\n- Home city\n- Country\n- Language\n- Session count (the sum of sessions from both profiles)\n- Date of first session (Braze will pick the earlier date of the two dates)\n- Date of last session (Braze will pick the later date of the two dates)\n- Custom attributes\n- Custom event and purchase event data (excluding event properties)\n- Custom event and purchase event properties for \"X times in Y days\" segmentation (where X<=50 and Y<=30)\n- Segmentable custom events summary\n    - Event count (the sum from both profiles)\n    - Event first occurred (Braze will pick the earlier date of the two dates)\n    - Event last occurred (Braze will pick the later date of the two dates)\n- In-app purchase total in cents (the sum from both profiles)\n- Total number of purchases (the sum from both profiles)\n- Date of first purchase (Braze will pick the earlier date of the two dates)\n- Date of last purchase (Braze will pick the later date of the two dates)\n- App summaries\n- Last_X_at fields (Braze will update the fields if the orphaned profile fields are more recent)\n- Campaign summaries (Braze will pick the most recent date fields)\n- Workflow summaries (Braze will pick the most recent date fields)\n- Message and message engagement history\n    \n\nAny of the following fields found on the anonymous user to the identified user:\n\n- Custom event and purchase event count and first date and last date timestamps\n    - These merged fields will update \"for X events in Y days\" filters. For purchase events, these filters include \"number of purchases in Y days\" and \"money spent in last Y days\".\n\nSession data will only be merged if the app exists on both user profiles. For example, if our target user doesn't have an app summary for \"ABCApp\" but our original user does, the target user will have the \"ABCApp\" app summary on their profile after the merge.\n\nSetting the field to `none` will not merge any user data to the identified user profile.\n\n### Aliases to Identify object specification\n\n``` json\n{\n  \"external_id\" : (required, string) see External User ID below,\n  // external_ids for users that do not exist will return a non-fatal error. \n  // See Server Responses for details.\n  \"user_alias\" : {\n    \"alias_name\" : (required, string),\n    \"alias_label\" : (required, string)\n  }\n}\n\n```"
          },
          "response": []
        },
        {
          "name": "Track Users",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"attributes\": [\n        {\n            \"external_id\": \"rachel_feinberg\",\n            \"string_attribute\": \"fruit\",\n            \"boolean_attribute_1\": true,\n            \"integer_attribute\": 25,\n            \"array_attribute\": [\n                \"banana\",\n                \"apple\"\n            ]\n        }\n    ],\n  \"events\": [\n        {\n            \"external_id\": \"user_identifier\",\n            \"app_id\": \"your_app_identifier\",\n            \"name\": \"rented_movie\",\n            \"time\": \"2022-12-06T19:20:45+01:00\",\n            \"properties\": {\n                \"release\": {\n                    \"studio\": \"FilmStudio\",\n                    \"year\": \"2022\"\n                },\n                \"cast\": [\n                    {\n                        \"name\": \"Actor1\"\n                    },\n                    {\n                        \"name\": \"Actor2\"\n                    }\n                ]\n            }\n        },\n        {\n            \"user_alias\": {\n                \"alias_name\": \"device123\",\n                \"alias_label\": \"my_device_identifier\"\n            },\n            \"app_id\": \"your_app_identifier\",\n            \"name\": \"rented_movie\",\n            \"time\": \"2013-07-16T19:20:50+01:00\"\n        }\n    ],\n  \"purchases\": [\n        {\n            \"external_id\": \"user_identifier\",\n            \"app_id\": \"your_app_identifier\",\n            \"product_id\": \"product_name\",\n            \"currency\": \"USD\",\n            \"price\": 12.12,\n            \"quantity\": 6,\n            \"time\": \"2017-05-12T18:47:12Z\",\n            \"properties\": {\n                \"color\": \"red\",\n                \"monogram\": \"ABC\",\n                \"checkout_duration\": 180,\n                \"size\": \"Large\",\n                \"brand\": \"Backpack Locker\"\n            }\n        }\n    ]\n}"
            },
            "url": {
              "raw": "https://sondheim.appboy.com/users/track",
              "protocol": "https",
              "host": ["sondheim", "appboy", "com"],
              "path": ["users", "track"],
              "query": [{ "key": "", "value": "", "disabled": true }]
            },
            "description": "> Use this endpoint to record custom events, purchases, and update user profile attributes. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.track` permission.\n\n**Note:** Braze processes the data passed via API at face value and customers should only pass deltas (changing data) to minimize unnecessary data point consumption. To read more, refer to [Data points](https://www.braze.com/docs/user_guide/onboarding_with_braze/data_points#data-points).\n\nCustomers using the API for server-to-server calls may need to allowlist `rest.iad-01.braze.com` if they’re behind a firewall.\n\n### Rate limit\n\nWe apply a base speed limit of 50,000 requests per minute to this endpoint for all customers. Each request to the `/users/track` endpoint can contain up to 75 events, 75 attribute updates, and 75 purchases. Each component (event, attribute, and purchase arrays), can update up to 75 users each for a max of 225 individual data points. Each update can also belong to the same user for a max of 225 updates to a single user in a request.\n\nSee our page on [API rate limits](https://www.braze.com/docs/api/api_limits/) for details, and reach out to your customer success manager if you need your limit increased.\n\n### Request parameters\n\nFor each of the request components listed in the following table, one of `external_id`, `user_alias`, or `braze_id` is required.\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `attributes` | Optional | Array of attributes objects | See [user attributes object](https://www.braze.com/docs/api/objects_filters/user_attributes_object/) |\n| `events` | Optional | Array of event objects | See [events object](https://www.braze.com/docs/api/objects_filters/event_object/) |\n| `purchases` | Optional | Array of purchase objects | See [purchases object](https://www.braze.com/docs/api/objects_filters/purchase_object/) |\n\n## User track responses\n\nUpon using any of the aforementioned API requests you should receive one of the following three general responses:\n\n#### Successful message\n\nSuccessful messages will be met with the following response:\n\n``` json\n{\n  \"message\" : \"success\",\n  \"attributes_processed\" : (optional, integer), if attributes are included in the request, this will return an integer of the number of external_ids with attributes that were queued to be processed,\n  \"events_processed\" : (optional, integer), if events are included in the request, this will return an integer of the number of events that were queued to be processed,\n  \"purchases_processed\" : (optional, integer), if purchases are included in the request, this will return an integer of the number of purchases that were queued to be processed,\n}\n\n```\n\n#### Successful message with non-fatal errors\n\nIf your message is successful but has non-fatal errors such as one invalid event object out of a long list of events, then you will receive the following response:\n\n``` json\n{\n  \"message\" : \"success\",\n  \"errors\" : [\n    {\n    }\n  ]\n}\n\n```\n\n#### Message with fatal errors\n\nIn the case of a success, any data that was not affected by an error in the `errors` array will still be processed. If your message has a fatal error you will receive the following response:\n\n``` json\n{\n  \"message\" : ,\n  \"errors\" : [\n    {\n    }\n  ]\n}\n\n```\n\n### Fatal error response codes\n\nFor status codes and associated error messages that will be returned if your request encounters a fatal error, reference [Fatal errors & responses](https://www.braze.com/api/errors/#fatal-errors).\n\nIf you receive the error “provided external_id is blacklisted and disallowed”, your request may have included a “dummy user”. For more information, refer to [Spam blocking](https://www.braze.com/docs/user_guide/data_and_analytics/user_data_collection/user_archival/#spam-blocking).\n\n### Creating an alias-only user profile\n\nKeep the following nuances in mind when using the `/users/track` endpoint:\n\nYou can use the `/users/track` endpoint to create a new alias-only user by setting the `_update_existing_only` key with a value of `false` in the body of the request. If this value is omitted, the alias-only user profile will not be created. Using an alias-only user guarantees that one profile with that alias will exist. This is especially helpful when building a new integration as it prevents the creation of duplicate user profiles.\n\n### Importing legacy user data\n\nYou may submit data through the Braze API for a user who has not yet used your mobile app in order to generate a user profile. If the user subsequently uses the application all information following their identification via the SDK will be merged with the existing user profile you created via the API call. Any user behavior that is recorded anonymously by the SDK prior to identification will be lost upon merging with the existing API-generated user profile.\n\nThe segmentation tool will include these users regardless of whether they have engaged with the app. If you want to exclude users uploaded via the User API who have not yet engaged with the app, simply add the filter: `Session Count > 0`.\n\n### Making bulk updates\n\nIf you have a use case where you need to make batch updates to the `users/track` endpoint, we recommend adding the bulk update header so that Braze can properly identify, observe, and route your request.\n\nRefer to the following sample request with the `X-Braze-Bulk` header:\n\n``` json\ncurl --location --request POST 'https://rest.iad-01.braze.com/users/track' \\\n--header 'Content-Type: application/json' \\\n--header 'X-Braze-Bulk: true' \\\n--header 'Authorization: Bearer YOUR-API-KEY-HERE' \\\n--data-raw '{ \"attributes\": [ ], \"events\": [ ], \"purchases\": [ ] }'\n\n```\n\nWarning: When the `X-Braze-Bulk` header is present with any value, Braze will consider the request a bulk request. Set the value to `true`. Currently, setting the value to `false` does not disable the header—it will still be treated as if it were true.\n\n#### Use cases\n\nConsider the following use cases where you may use the bulk update header:\n\n- A daily job where multiple users’ custom attributes are updated via the `/users/track` endpoint.\n- An ad-hoc user data backfill script which updates user information via the `/users/track` endpoint."
          },
          "response": []
        },
        {
          "name": "Merge Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{api_key}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"merge_updates\": [\n    {\n      \"identifier_to_merge\": {\n        \"external_id\": \"old-user1\"\n      },\n      \"identifier_to_keep\": {\n        \"external_id\": \"current-user1\"\n      }\n    },\n    {\n      \"identifier_to_merge\": {\n        \"user_alias\": {\n          \"alias_name\": \"old-user2@example.com\",\n          \"alias_label\": \"email\"\n        }\n      },\n      \"identifier_to_keep\": {\n        \"user_alias\": {\n          \"alias_name\": \"current-user2@example.com\",\n          \"alias_label\": \"email\"\n        }\n      }\n    }\n  ]\n}"
            },
            "url": {
              "raw": "https://{{instance_url}}/users/merge",
              "protocol": "https",
              "host": ["{{instance_url}}"],
              "path": ["users", "merge"]
            },
            "description": "> Use this endpoint to merge one user into another user. \n  \n\nTo use this endpoint, you’ll need to generate an API key with the `users.merge` permission.\n\nUp to 50 merges may be specified per request. This endpoint is asynchronous.\n\n## Rate limit\n\nFor customers who onboarded with Braze on or after September 16, 2021, we apply a shared rate limit of 20,000 requests per minute to this endpoint. This rate limit is shared with the `/users/delete`, `/users/alias/new`, `/users/identify`, and `/users/alias/update` endpoints, as documented in [API rate limits](https://www.braze.com/docs/api/api_limits/).\n\n## Request parameters\n\n| Parameter | Required | Data Type | Description |\n| --- | --- | --- | --- |\n| `merge_updates` | Required | Array | An object array. Each object should contain an `identifier_to_merge` object and an `identifier_to_keep` object, which should each reference a user either by `external_id` or `user_alias`. Both users being merged must be identified using the same method. |\n\n### Merge_updates behavior\n\nThis endpoint will merge any of the following fields found exclusively on the original user to the target user.\n\n- First name\n- Last name\n- Email\n- Gender\n- Date of birth\n- Phone number\n- Time zone\n- Home city\n- Country\n- Language\n- Session count (the sum of sessions from both profiles)\n- Date of first session (Braze will pick the earlier date of the two dates)\n- Date of last session (Braze will pick the later date of the two dates)\n- Custom attributes\n- Custom event and purchase event data (excluding event properties)\n- Custom event and purchase event properties for \"X times in Y days\" segmentation (where X<=50 and Y<=30)\n- Segmentable custom events summary\n    - Event count (the sum from both profiles)\n    - Event first occurred (Braze will pick the earlier date of the two dates)\n    - Event last occurred (Braze will pick the later date of the two dates)\n- In-app purchase total in cents (the sum from both profiles)\n- Total number of purchases (the sum from both profiles)\n- Date of first purchase (Braze will pick the earlier date of the two dates)\n- Date of last purchase (Braze will pick the later date of the two dates)\n- App summaries\n- Last_X_at fields (Braze will update the fields if the orphaned profile fields are more recent)\n- Campaign summaries (Braze will pick the most recent date fields)\n- Workflow summaries (Braze will pick the most recent date fields)\n    \n\nAny of the following fields found on one user to the other user:\n\n- Custom event and purchase event count and first date and last date timestamps\n    - These merged fields will update \"for X events in Y days\" filters. For purchase events, these filters include \"number of purchases in Y days\" and \"money spent in last Y days\".\n\nSession data will only be merged if the app exists on both user profiles. For example, if our target user doesn't have an app summary for \"ABCApp\" but our original user does, the target user will have the \"ABCApp\" app summary on their profile after the merge. Note that message and message engagement history aren't retained after both user profiles are merged.\n\nThe endpoint does not guarantee the sequence of `merge_updates` objects being updated.\n\n## Example request\n\n```\ncurl --location --request POST 'https://rest.iad-03.braze.com/users/merge' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer YOUR-REST-API-KEY' \\\n--data-raw '{\n  \"merge_updates\": [\n    {\n      \"identifier_to_merge\": {\n        \"external_id\": \"old-user1\"\n      },\n      \"identifier_to_keep\": {\n        \"external_id\": \"current-user1\"\n      }\n    },\n    {\n      \"identifier_to_merge\": {\n        \"user_alias\": {\n          \"alias_name\": \"old-user2@example.com\",\n          \"alias_label\": \"email\"\n        }\n      },\n      \"identifier_to_keep\": {\n        \"user_alias\": {\n          \"alias_name\": \"current-user2@example.com\",\n          \"alias_label\": \"email\"\n        }\n      }\n    }\n  ]\n}'\n\n```\n\n## Response\n\nThere are two status code responses for this endpoint: `202` and `400`.\n\n### Example success response\n\nThe status code `202` could return the following response body.\n\n``` json\n{\n  \"message\": \"success\"\n}\n\n```\n\n### Example error response\n\nThe status code `400` could return the following response body. Refer to Troubleshooting (below) for more information about errors you may encounter.\n\n``` json\n{\n  \"message\": \"'merge_updates' must be an array of objects\"\n}\n\n```\n\n## Troubleshooting\n\nThe following table lists possible error messages that may occur.\n\n| Error | Troubleshooting |\n| --- | --- |\n| `'merge_updates' must be an array of objects` | Ensure that `merge_updates` is an array of objects. |\n| `a single request may not contain more than 50 merge updates` | You can only specify up to 50 merge updates in a single request. |\n| `identifiers must be objects with an 'external_id' property that is a string, or 'user_alias' property that is an object` | Check the identifiers in your request. |\n| `identifiers must be objects of the same type` | Ensure that the identifier object types match. |\n| `'merge_updates' must only have 'identifier_to_merge' and 'identifier_to_keep'` | Ensure that `merge_updates` only contains the two objects `identifier_to_merge` and `identifier_to_keep`. |"
          },
          "response": []
        }
      ],
      "description": "The User API allows you to track information on your users by logging data about your users that comes from outside your mobile app. You can also use this API to delete users for testing or other purposes.\n\nAll API endpoints have a data payload limit of 4MB. Attempts to post more data than 4MB will fail with an HTTP 413 Request Entity Too Large.\n\nThe examples below contain the URL https://rest.iad-01.braze.com, but some customers will need to use a different endpoint URL, for example if you are hosted in Braze’s EU data center or have a dedicated Braze installation. Your Success Manager will inform you if you should use a different endpoint URL.\n\n"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": { "type": "text/javascript", "exec": [""] }
    },
    { "listen": "test", "script": { "type": "text/javascript", "exec": [""] } }
  ]
}
